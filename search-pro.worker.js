const g=(o,a)=>{const i=o.toLowerCase(),e=a.toLowerCase(),s=[];let n=0,l=0;const c=(t,p=!1)=>{let r="";l===0?r=t.length>20?`… ${t.slice(-20)}`:t:p?r=t.length+l>100?`${t.slice(0,100-l)}… `:t:r=t.length>20?`${t.slice(0,20)} … ${t.slice(-20)}`:t,r&&s.push(r),l+=r.length,p||(s.push(["strong",a]),l+=a.length,l>=100&&s.push(" …"))};let h=i.indexOf(e,n);if(h===-1)return null;for(;h>=0;){const t=h+e.length;if(c(o.slice(n,h)),n=t,l>100)break;h=i.indexOf(e,n)}return l<100&&c(o.slice(n),!0),s},d=Object.entries,y=Object.keys,f=o=>o.reduce((a,{type:i})=>a+(i==="title"?50:i==="heading"?20:i==="custom"?10:1),0),$=(o,a)=>{var i;const e={};for(const[s,n]of d(a)){const l=((i=a[s.replace(/\/[^\\]*$/,"")])==null?void 0:i.title)||"",c=`${l?`${l} > `:""}${n.title}`,h=g(n.title,o);h&&(e[c]=[...e[c]||[],{type:"title",path:s,display:h}]),n.customFields&&d(n.customFields).forEach(([t,p])=>{p.forEach(r=>{const u=g(r,o);u&&(e[c]=[...e[c]||[],{type:"custom",path:s,index:t,display:u}])})});for(const t of n.contents){const p=g(t.header,o);p&&(e[c]=[...e[c]||[],{type:"heading",path:s+(t.slug?`#${t.slug}`:""),display:p}]);for(const r of t.contents){const u=g(r,o);u&&(e[c]=[...e[c]||[],{type:"content",header:t.header,path:s+(t.slug?`#${t.slug}`:""),display:u}])}}}return y(e).sort((s,n)=>f(e[s])-f(e[n])).map(s=>({title:s,contents:e[s]}))},m=JSON.parse("{\"/\":{\"/DailyRoutine.html\":{\"title\":\"每日仪式\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"每日仪式是个人生活习惯的核心。它看起来可能会显得固化、死板、功利，有人反馈「透露着一股形式主义气息」，但是，这正是我想要的：遵循一个固定、程序化的流程，有规律地养成习惯，实现自我提升。\"]},{\"header\":\"仪式清单\",\"slug\":\"仪式清单\",\"contents\":[]},{\"header\":\"5AM Club\",\"slug\":\"_5am-club\",\"contents\":[\"5AM Club 是我的高效早晨方案：\",\"早上 5 点起床，使用手环震动闹钟。\",\"泡杯咖啡，准备早餐，开始第一个工作番茄。\",\"工作 25 分钟休息 5 分钟，休息期间完成每日必须：拍照打卡发 SNS，吃早餐。\",\"每天最低完成 8 个番茄，之后可进入长休息区间，进行家务打扫、健身、娱乐。\",\"晚上 10 点睡觉，保证充足的睡眠时间。\",\"Huberman Lab 建议早晨不一定需要进食，可以到中午再进食，改变身体的新陈代谢周期；醒来后两到四小时再摄入咖啡因，并尽量避免在午后摄入咖啡因，以防下午的 cafferine crush。请根据个人情况灵活调整计划。\"]},{\"header\":\"每日\",\"slug\":\"每日\",\"contents\":[\"早上创造美好情绪：赞美、仪式感、吃好吃的、看搞笑视频、听歌。\",\"唱歌：唱一首你喜欢的歌曲（外语美声歌曲可以增加脂肪消耗，例如：秋山雅史的《千の風になって》）。\",\"自拍视频：说一句话（比如当天的目标）来鼓励自己。在前一天想好录制内容，以获得积极情绪。\",\"参考积极心理学，收集积极情绪材料，放在显眼的地方：家人的照片、取得的成绩、美好的回忆、憧憬的未来、向往的地方、喜欢的艺术（音乐、名画、诗句）。\",\"人际连接：通过直播连麦与陌生人沟通 15 分钟，例如：播客、抖音语音电台直播 PK。\",\"别人很重要：帮助别人，能让人更健康、更幸福。当心情不好时，去帮助其他人，心情会变得更好。\",\"表扬和自我表扬：赞美自己、家人，发挥标志性优势，总比弥补缺点更有效。\",\"微习惯：\",\"每工作 20 分钟，休息 20 秒，然后做 10 个深蹲；出书房或上完厕所，再做 15 个俯卧撑。在运动前，在白板上写出正字，每一组动作用一个笔画表示。进阶阶段可以用固定机位拍摄视频，监督运动习惯。拍摄时，使用关键句「切掉/保留」，配合 Quickcut 快速剪辑视频。\",\"睡前：每天泡脚 20 分钟（水温 40℃），短时间的泡脚可以帮助睡眠更快入睡。此外，每天睡前 90 分钟，淋浴（水温 38~43℃，淋浴 10 分钟）或泡澡也可以助你更快进入睡眠状态。[1]\",\"间隔学习：穿插学习不同领域内容\",\"阅读看书：每天花 30 分钟读书，并输出笔记。\",\"墨墨背单词：每天背 20 个单词，虽然用处不大，但可以让脑子换个思路。\",\"笔记复习：利用 SuperMemo 记忆模型，复习心理认知、沟通理论和行为反思等笔记。\",\"当日回顾：每天记录 3 件好事，总结好事发生的原因，并与家人分享。\",\"这可以是日常生活中常见的小事，比如读到一本好书、吃到一道好菜、听到一个亲友的好消息、在公交车上有人为你让座、孩子今天会走路了，等等。\"]},{\"header\":\"定期\",\"slug\":\"定期\",\"contents\":[\"月底反思：检查日记和成果，对当月进行复盘，并将其同步给家人，征求意见、批评并记录。 \",\"每月复盘参照 Allison Seboldt，作者会分享他的收入并反思上个月的成就。\",\"阅读 JustinJ ackson，作者在 2018 年初创办 Transistor 以来，一直在分享他的项目，整理了在此过程中学到的许多经验教训。\",\"积极自我介绍：每三个月，讲述一个「最佳的我」的故事，植入你的优势，进行自我肯定。\"]},{\"header\":\"自我监控\",\"slug\":\"自我监控\",\"contents\":[\"为了更好地监督自己，我制定了一套自我监控方案，以记录自己的私人工作状态。\",\"开机（8 点）启动录屏命令，并检测护眼提醒是否开启。可参考 FFmpeg 录屏方案来修改命令：\",\"ffmpeg -f gdigrab -r 0.1 -draw_mouse 1 -offset_x 0 -offset_y 0 -video_size 2560x1440 -i desktop -s 1280x720 -b:v 0 -crf 32 output.mp4 -f dshow -s 640x480 -i video='USB2.0 PC CAMERA' -filter_complex 'overlay=W-w-1:H-h-50' -y \",\"晚上 10 点执行关机程序：静音、关闭护眼提醒、关闭录屏终端，并使用 dvr-scan 删除视频中的静止帧。这些步骤可以通过 AutoHotkey 命令自动完成。\",\"Send, {Volume_Mute} Process, Close, Stretchly.exe Process, Close, pwsh.exe Sleep, 500000 Run, PowerShell.exe -NoExit -Command &{dvr-scan -i output.mp4 -o %A_YYYY%-%A_MM%-%A_DD%_Scanned.avi}, D:\\\\Backup\\\\Libraries\\\\Desktop \",\"使用 VLC 播放器可以以 31.25 倍的速度回放监控视频，并结合 ManicTime 来回顾当日内容。要轻松实现 VLC 的高倍速播放，可以在「菜单栏」->「视图」中开启「状态栏」。此外，通过剪映，可以达到 100 倍的播放速度。\"]},{\"header\":\"时间管理\",\"slug\":\"时间管理\",\"contents\":[\"GTD 的存在是让大脑清空不混乱目的，明确知道下一步应该做什么。GTD 流程依次为捕获（Capture），明晰（Clarify），组织（Organize），回顾（Reflect），执行（Engage）。\",\"执行时，将 GTD 按功能与目的划分为多个清单。\",\"收集箱（Inbox）\",\"执行清单（@Context task）\",\"等待清单（\\\"Waiting for\\\" task）\",\"项目清单（\\\"Plan project\\\" plan）\",\"可能清单（Someday/maybe）\",\"参考资料（Reference）\",\"回收箱（Trash）\",\"当任务捕获到收集箱后，参考下方的固定流程将其整理不同的清单中。\",\"GTD 任务转移到清单\",\"从 GTD 流程角度，执行任务和计划。\",\"GTD 流程步骤\",\"GTD 工具原本用的是 Microsoft To Do，「我的一天」功能非常适合聚焦，但有次出现了同步问题，就转用滴答清单。滴答清单除基础 Todo 功能外，还能用日视图管理具体时间安排，添加跨天长时间任务，并在日历、看板和甘特图中查看。\",\"滴答清单的缺点也很明显，功能过于追求全，功能打磨得不够细节，无法满足定制需求。比如，没有任务跳过功能，对于循环任务只能点完成，导致记录与实际不符；跨越多天的任务不想在「今天清单」中出现出现，但一直在提醒，导致无法清空；过滤器逻辑单一，筛选元素教少。如果你的任务都可以一天内完成，不需要记录持续多天的计划，不需要买滴答的高级会员，基础功能足够满足你了。\",\"本节内容来自 Topbook 的 GTD 自我管理 - 时间管理教程，改变了我对 GTD 的认知，把事情做好，而不是把事情做完。建议完整阅读。\"]},{\"header\":\"日常习惯\",\"slug\":\"日常习惯\",\"contents\":[\"锚点\",\"在我……\",\"我会……\",\"庆祝\",\"20s 休息提示\",\"拿下眼镜，画板上添笔画后\",\"深蹲 15 个\",\"双手肘向后\",\"5mins 休息提示\",\"拿下眼镜，画板上添笔画后\",\"重力拉伸 15 次，2 组\",\"双手肘向后\",\"上完厕所\",\"洗好手，画板上添笔画后\",\"俯卧撑 15 个\",\"双手肘向后\",\"出书房\",\"画板上添笔画后\",\"俯卧撑 15 个\",\"双手肘向后\",\"午餐\",\"放下碗筷\",\"吃维生素\",\"想象自己发光\",\"午睡\",\"打开大排灯\",\"设置 30 分钟的闹钟\",\"想象自己发光\",\"洗澡\",\"打开花洒\",\"深蹲 15 个\",\"哼歌\",\"刷完牙\",\"放下牙刷\",\"俯卧撑 15 个\",\"双手肘向后\",\"晚上\",\"上床\",\"伸展并触碰脚趾；读书\",\"想象自己发光\",\"睡觉\",\"关灯\",\"打开白噪音\",\"想象自己发光\",\"休息选项：喝口水、洗脸、看看窗外、眼部按摩仪、按摩头皮。\",\"运动选项：跳绳、有氧拳击、B 站轻度健身操（Jo 姐？）。\",\"睡眠知识：睡眠时的体温理想情况下会比正常体温低二到三度，因此睡前应尽量降低低温，避免激烈运动。同时，手机屏幕等产生的光线会非常影响睡眠，建议尽量避免睡前使用手机。睡醒后应尽快暴露在室外，让自然光线把身体唤醒，只需要短短十分钟。\"]},{\"header\":\"美容仪器\",\"slug\":\"美容仪器\",\"contents\":[\"为了避免家里的美容仪器闲置浪费，我制定了定期使用计划。（请勿参考型号购买）\",\"按摩椅 + 眼部按摩仪 + belulu hikari LED 彩光美容仪，模式 A「嫩肤」10 分钟，模式 B「祛痘」8 分钟。\",\"Panasonic EH-SA96 蒸面喷雾器：每周两次喷雾蒸面，需变压器转接。\",\"射频仪：每周使用 1-2 次 RF 射频，10 分钟一次，除皱紧肤，射频后敷面膜或蒸面补水。 \",\"Tripollar STOP RF 射频美颜仪，Dr. Bauer Eye Reshaping RF System II（涂抹适量 Elixir 导入霜于眼周，去黑眼圈）\",\"YAMAN 嫩肤美容仪 + LaboLabo Lotion + HABA G-LOTION，用于精华导入导出。\",\"使用前，请除下身上所佩戴之饰物，如戒指、手表、颈饰、手链、耳环或一切以金属制造的仼何配件，并于涂抹导入霜后彻底洁净及抹干双手，才可进行疗程。可按个人皮肤状况及需要，选择合适疗程温度，普通可设置等级「2」，疗程温度随等级设置而增加。\",\"睡前淋浴有助于快速入睡↩︎\"]}]},\"/\":{\"title\":\"LearnData 开源笔记\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"开源工具、效率方法、心理学探索的自我提升笔记\"]},{\"header\":\"✨ 初衷\",\"slug\":\"✨-初衷\",\"contents\":[\"曾经，我把知识记录在 Notion、Obsidian、飞书等知识管理软件上，导致笔记散落各处，使用起来很麻烦，也难以对外分享。\",\"更重要的是，笔记里的知识并不属于你，只有经过消化、应用，才会成为自己的知识。\",\"因此，我基于 VuePress 和 vuepress-theme-hope 建立了 LearnData，将所有笔记与文章重新整合，聚合到同一页面形成知识库，方便自己使用和分享。\",\"笔记 + 文章 = LearnData 知识库\",\"笔记/博客自动化发布\"]},{\"header\":\"🧱 笔记结构\",\"slug\":\"🧱-笔记结构\",\"contents\":[\"置顶：日常习惯、健身、阅读；\",\"代码：常用代码的学习和使用笔记；\",\"软件应用：常用应用、Chrome 扩展和相关教程；\",\"页面开发：页面插件和框架生成工具；\",\"网站部署：网站相关的工具和知识收集；\",\"Linux 服务：NAS 和服务器上的后端应用，主要以 Docker 方式部署；\",\"系统问题：Windows 系统优化和相关问题；\",\"生活区：说明书、生活记录和小技巧；\",\"博客区：聚合所有博客文章，以分类、标签、时间轴等方式进行组合。\"]},{\"header\":\"🍥 搭建 LearnData\",\"slug\":\"🍥-搭建-learndata\",\"contents\":[\"首先，进入 LearnData 项目页，点击右上方的「Use this template」>「Create a new repository」。\",\"接着，进入项目仓库的「Settings」>「Actions」>「General」，选中底部 Workflow permissions 中的 Read and write permissions，然后点击保存即可。如果未授权，GitHub Page 部署会由于 repo 权限不足而报错 failed with exit code 128。\",\"接下来，请进入菜单栏顶部的「Actions」>「最新的 workflow」，并点击右上方的「Re-run jobs」>「Re-run all jobs」，以重新生成网页。若部署正确，GitHub 将自动搭建 gh-page 分支页面。\",\"需要注意的是：如果你不需要将网页部署同步到个人服务器，请删除 .github/workflows/main.yml 中 Sync files 区块的代码，否则会出现报错 Error: Input required and not supplied: server。\",\" ### 没有服务器的话，请删除本区块代码，防止报错 ### # 将页面推送到服务器，timeout 时间从默认的 1 分钟调整到 10 分钟。 - name: 📂 Sync files uses: SamKirkland/FTP-Deploy-Action@v4.3.4 with: local-dir: docs/.vuepress/dist/ server: ${{ secrets.ftp_host }} username: ${{ secrets.ftp_username }} password: ${{ secrets.ftp_password }} port: ${{ secrets.ftp_port }} # 建议更改默认的 21 端口 timeout: 600000 ### 没有服务器的话，请删除本区块代码，防止报错 ### \",\"然后点击「Settings」, 修改 Repository name 为 用户名.github.io。假设你的仓库链接是 https://github.com/xxx/LearnData，那么中间的 xxx 就是你的用户名。如果该仓库名称已被使用，GitHub Pages 将无法正常显示样式，请查看页面底部的常见问题来设置子域名。\",\"在同一页面选择「Settings」>「Pages」>「Build and deployment」>「Branch」, 将 gh-page branch 设为 GitHub Pages 的来源，网站运行目录默认为 /(root)。设置完成后，点击「Save」。如果找不到 gh-pages 分支，可以按照上面提到的第三步进行操作，或在 GitHub 中修改任意文件以手动触发 GitHub Action，等待其执行完成后，再重新设置 Pages 的来源。\",\"设置成功后，页面会提示访问链接：https://xxx.github.io/，知识库搭建完毕。\",\"如果未出现访问链接提示或不能打开 GitHub Pages，则删除 docs/_posts 路径下的博客文件，GitHub Pages 有时会对旧文章里的代码报错。\",\"注意：如果出现报错 Error: Input required and not supplied: server，请删除 .github/workflows/main.yml 中 Sync files 区块的代码，以避免出现报错。\"]},{\"header\":\"🔣 配置 LearnData\",\"slug\":\"🔣-配置-learndata\",\"contents\":[]},{\"header\":\"文档结构\",\"slug\":\"文档结构\",\"contents\":[\"LearnData 的网站配置和文本存放在 docs 文件夹下，文章与页面配置可参考主目录下的 samplepage.md。\",\"docs 目录结构如下：\",\"docs |── .vuepress # 网站配置 │ ├── config.ts # 网站环境依赖和网站属性 │ ├── sidebar.ts # 侧边栏 │ ├── navbar.ts # 导航栏 │ ├── theme.ts # 主题和插件 │ └── templateBuild.html # 网页模板，网站关键词和统计 |── _posts # 博客文章目录 ├── _temp # 草稿箱 ├── reading # 读书笔记 ├── anyname # 自定义笔记 ├── blog.md # 博客页面 └── intro.md # 博主个人介绍 \",\"docs/.vuepress 路径下是网站的配置文件，我已添加了详细的注释。你可以参考注释和 vuepress-theme-hope 配置案例来调整配置。请在 docs/.vuepress/sidebar.ts 文件中修改文件夹路径，后台会自动抓取路径下的 md 文件来生成侧边栏。docs/.vuepress/theme.ts 有评论插件的相关配置。\",\"注意：\",\"LearnData 默认使用了 algolia 全文搜索。如果你没有使用 algolia 爬虫，则可以在 docs/.vuepress/config.ts 文件中删除 plugins 下的 docsearchPlugin 区块，网站将转用本地全文索引搜索。\",\"docs/_temp 文件夹默认不同步到 GitHub 上。你可以手动在本地建立 _temp 文件夹，用来存放草稿。\",\"自 VuePress2 的 beta.54 版本开始，文件夹名前缀为 _ 在生成链接时将被省略，例如文章路径为 /_posts/，但网页链接路径会是 /posts/。\"]},{\"header\":\"看板娘\",\"slug\":\"看板娘\",\"contents\":[\"LearnData 集成了看板娘 Live2D Widget，支持随机对话、切换人物服饰和玩打飞机游戏，能提升网站美观度和趣味性。如果不需要看板娘，可以删除 docs\\\\.vuepress\\\\public 下的 live2d-widget 文件夹。\",\"如果网站部署在子页面 https://xxx.github.io/yyy，则需将子页面路径 yyy 加入到以下两个文件：\",\"将 docs\\\\.vuepress\\\\public\\\\live2d-widget\\\\autoload.js 文件第三行的 const live2d_path = \\\"/live2d-widget/\\\" 修改为 const live2d_path = \\\"/yyy/live2d-widget/\\\"。\",\"将 docs\\\\.vuepress\\\\templateBuild.html 文件中看板娘区块代码 <script src=\\\"/live2d-widget/autoload.js\\\"> 修改为 <script src=\\\"/yyy/live2d-widget/autoload.js\\\">。\",\"如果你想要修改看板娘模型，请参考 docs\\\\.vuepress\\\\public\\\\live2d-widget 路径下的 README 和修改说明。如果你想在服务器上自建 live2d api，请注意添加跨域配置，否则可能会出现只显示文字而不显示看板娘图片的情况。\"]},{\"header\":\"读书笔记\",\"slug\":\"读书笔记\",\"contents\":[\"读书笔记中可能会有大量的原文引用，这与 LearnData 精简化知识点的初衷并不相符。因此，我们使用 docsify 来构建读书笔记，并将其放置于 docs/reading 目录下。在生成静态页面后，该路径下的文件不会被转换为 HTML 文件，而是将被自动复制到静态网站下，完成 docsify 页面构建和独立的读书笔记搜索索引。\",\"如果你没有部署 Waline，也不需要阅读量统计和评论区，可以删除 docs\\\\reading\\\\index.html 中的 Waline 区块。\",\"waline: { serverURL: \\\"https://waline.newzone.top\\\", ... } \"]},{\"header\":\"本地图片引用\",\"slug\":\"本地图片引用\",\"contents\":[\"为了避免在生成静态页面时出现 Rollup failed to resolve import 错误，本地图片必须保存在 docs/.vuepress/public 路径下。如果图片名称为 1.png，保存在 docs/.vuepress/public/imgs 路径下，则可以使用以下链接来引用该图片：/imgs/1.png 或使用 Markdown 图片链接：![](/imgs/1.png)。本方法也适用于将附件部署到网站上。\"]},{\"header\":\"🖥️ 网站部署\",\"slug\":\"🖥️-网站部署\",\"contents\":[\"在将 LearnData 推送到 GitHub 后，会自动生成可访问的网页。但由于国内访问 GitHub Pages 的速度不稳定，为了确保网站能够正常访问，建议增加国内的访问节点。\",\"很多人选择使用 Gitee Pages 作为国内节点，通过 GitHub Actions 将新文档同步到 Gitee 上，从而生成位于国内的静态页面 Gitee Pages。但是，Gitee Pages 有很多限制，例如必须实名认证、免费版无法自定义域名，近期也发生过下架风波。因此，我没有选择 Gitee，而是将文档同步到国内服务器（域名需要备案）或 Vercel（国外服务可能会出现断网）。\"]},{\"header\":\"同步到服务器\",\"slug\":\"同步到服务器\",\"contents\":[\"如果你的项目已经搭建好，但出现了红色的叉叉提示，这可能是 GitHub Actions 同步到服务器时发生了错误。你需要进入项目仓库的「Setting」>「Secrets」>「Action」，并添加 FTP_HOST、FTP_PORT、FTP_USERNAME 和 FTP_PASSWORD 的密钥。之后，每当文件发生变化时，GitHub Actions 就会将修改推送到服务器的 FTP 上。\",\"如果你不需要将文档同步到服务器的 FTP 上，则请删除 .github/workflows/main.yml 中 Sync files 区块的代码，以避免出现报错。或者根据 GitHub 同步到 OSS 步骤将网页部署到云存储上。\"]},{\"header\":\"部署到 Vercel\",\"slug\":\"部署到-vercel\",\"contents\":[\"Vercel 的速度比 GitHub Pages 稳定一些，不过「*.vercel.app」域名已经被 DNS 污染。建议国内用户绑定自定义域名以获得更好的使用体验。\",\"Vercel 部署步骤如下：\",\"点击 或将 https://vercel.com/new/clone?repository-url=https://github.com/rockbenben/LearnData/tree/gh-pages 中的 rockbenben/LearnData 改为 你的用户名/仓库名，然后会跳转至 Vercel 进行网页部署。如果你未登录，Vercel 提示你注册或登录，请使用 GitHub 账户进行快捷登录。\",\"输入一个你喜欢的 Vercel 项目名称，默认 private 即可，然后点击 Create。\",\"创建 Vercel 项目\",\"接着，Vercel 会基于 LearnData 模板帮助你新建并初始化仓库，仓库名为你之前输入的项目名。几十秒后，满屏的烟花会庆祝你部署成功。此时，点击 Go to Dashboard 跳转到应用的控制台。\",\"Vercel 部署成功提示\",\"为了让 Vercel 页面与 GitHub Pages 自动保持同步更新，你需要配置 PERSONAL_TOKEN 和 GitHub Actions。\",\"新建 Personal access tokens，勾选权限「repo (Full control of private repositories)」，生成后复制 token 值。\",\"在项目仓库中选择「setting」>「Secrets」>「Action」，新建密钥 PERSONAL_TOKEN，并填入刚复制的 token 值。\",\"将下方代码编辑到 .github/workflows/main.yml 文件末尾，注意修改 dst_owner 和 dst_repo_name。\",\"# 将页面更新到 Vercel - name: Copy file to Vercel if: always() uses: andstor/copycat-action@v3 with: personal_token: ${{ secrets.PERSONAL_TOKEN }} src_path: /. dst_path: / # 你的用户名 dst_owner: rockbenben # 与 Vercel 链接的仓库名，也就是 Vercel 部署时新建的仓库 dst_repo_name: LearnData-Vercel dst_branch: main src_branch: gh-pages clean: true \"]},{\"header\":\"🤔 常见问题\",\"slug\":\"🤔-常见问题\",\"contents\":[]},{\"header\":\"网页显示异常\",\"slug\":\"网页显示异常\",\"contents\":[\"如果你的网站只显示文字而不能正常显示网页，可能是因为网站路径不正确导致的页面样式错误。比如，GitHub Page 提示访问链接 https://xxx.github.io/yyy，则需要将 docs/.vuepress/config.ts 中的 base 改为 /yyy，其默认值为 /。请按照此路径将网站的 base 设置正确，以确保你的网站能够正常显示。\"]},{\"header\":\"同步服务器报错\",\"slug\":\"同步服务器报错\",\"contents\":[\"Error: Input required and not supplied: server 表示服务器配置错误，请按照上方的网站部署步骤检查配置。如果你不需要将文件同步到服务器，则请删除 .github/workflows/main.yml 中 Sync files 区块的代码，以避免出现报错。\",\"FTPError: 530 Login authentication failed 指 FTP 密码错误或账号不存在，可使用 FileZilla 来测试 FTP 的有效性。\",\"Error: Timeout (control socket) 指同步服务器出现超时报错。如果出现该错误，可以进入 Actions 页面，点击右侧按钮「Re-run all jobs」，重新进行部署。如果错误连续出现，可以尝试关闭服务器防火墙，检查 GitHub 服务器 IP 是否屏蔽了。\"]},{\"header\":\"ERR_MODULE\",\"slug\":\"err-module\",\"contents\":[\"如果出现 Error [ERR_MODULE_NOT_FOUND]: Cannot find module 的报错，可能是第三方插件或 pacakge.json 环境依赖未正确配置。此报错出现的几率极低，如果遇到，可以使用最新版本的 package.json 和 pnpm-lock.yaml 来覆盖本地设置，或者删除主目录下的 .npmrc 文件。\"]},{\"header\":\"静态文件名字总变\",\"slug\":\"静态文件名字总变\",\"contents\":[\"VuePress 默认使用 Vite。在打包时，会为文件引入时间戳和 hash，并对其进行重命名。这会导致即使没有更新文章，大部分生成的静态文件也会发生更改。如果你希望减少重命名频次，可以使用「nohashname」分支。该分支使用的打包工具是 Webpack，并使用 chainWebpack 设置文件命名规则，避免不必要的文件重命名。（注意：nohashname 非主分支，不作功能更新。）\"]},{\"header\":\"本地运行 LearnData\",\"slug\":\"本地运行-learndata\",\"contents\":[\"为了本地运行，你需要安装 npm 和 pnpm 环境，可参考环境部署教程。\",\"将 LearnData 项目下载到本地后，在项目目录下打开终端，输入命令 pnpm i 安装依赖。\",\"在终端中输入命令 pnpm docs:dev，若成功则会提示访问链接，默认为 http://localhost:8080/。\",\"本地服务运行后，修改文件时页面会同步更新预览。若需停止本地服务器，可在终端中按下 Ctrl + C。\"]}]},\"/intro.html\":{\"title\":\"个人介绍\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"打工人\",\"互联网街溜子，未来新手奶爸\",\"尝试分享关于自己的一切\"]}]},\"/posts/2023-02-27-chatgpt_shortcuts.html\":{\"title\":\"为了帮你用好 ChatGPT，我做了一个「咒语库]\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"最近，关于 ChatGPT 的讨论越来越多，但大多数人仅仅将其视为一款聊天机器人，并从猎奇的角度去测试其人工智能的回答。然而，ChatGPT 不仅仅是一个猎奇的 AI 玩具，未来它将会成为必备生产工具。ChatGPT 之类的 AI 工具将用它巨大的语言知识库，为我们创造更多的价值。\",\"ChatGPT 的回复质量取决于提示词（即 Prompt）。这通常是用户提供的问题或文本，以激活模型生成回复。简单来说，prompt 就是用户想要询问的内容，作为输入送到 ChatGPT 中，ChatGPT 会尝试理解这个输入，然后输出合适的回答或响应。通过优化提示词，可以使 ChatGPT 生成更加准确、有用的回复。为了能让 ChatGPT 成为生产力工具，我花大量时间逐个研究提示词的规则和范例，如 ChatGPT Prompt Examples、Awesome ChatGPT Prompts、Learn Prompting 等。我筛选出了 163 个 Prompts（提示词），仅记录它们的功能而非内容，这就让我的笔记超过了 5000 字。提示词目录也变得越来越长，即使将浏览器全屏，也无法完整显示。起初，我制作提示词目录是为了方便自己，但每次需要查找提示词时，我不得不依靠记忆。这些笔记反而成为了负担，拖累 ChatGPT 的工作效率。\",\"为了更好地使用 ChatGPT，我将精选的提示词编入索引，根据领域和功能对其进行分类，添加针对提示词的标签筛选、关键词搜索、一键复制和中英文切换功能，创建了 ChatGPT Shortcut 项目。即使是初学者，你只需打开 ChatGPT Shortcut，复制提示词，稍加修改后发送给 ChatGPT，就能获得指定输出，让你的生产力加倍！\"]}]},\"/posts/2023-03-31-efficient_morning_5am_club.html\":{\"title\":\"从失眠到高效早晨：我的 5AM Club 计划分享\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"失眠问题已经困扰了我十年，尝试过各种方案，包括固定睡眠时间、冥想、食疗等，但均以失败告终。睡眠时间越来越晚，甚至到了凌晨 1-2 点才有睡意。偶然看到 Robin Sharma 的《The 5 AM Club》，提倡每天早上 5 点起床开始一天的工作。开始时我的第一感觉是「疯了」，因为对于我这样严重失眠的人来说，晚上 10 点睡觉已经是很难实现了，更何况早上 5 点起床呢？即使成功在 5 点起床，我又如何保证自己的状态？如何保证可以高效地学习和工作呢？但当时我正处于效率低谷，总是被其他事情干扰，作息时间完全被打乱。迷信理论的我，只能去相信它。因此，我结合心流理论制定了自己的「5AM Club」计划。\",\"5AM Club 计划：\",\"早上 5 点起床，使用手环震动闹钟。\",\"泡杯咖啡，准备早餐，开始第一个工作番茄。\",\"工作 25 分钟休息 5 分钟，休息期间完成每日必须：拍照打卡发 SNS，吃早餐。\",\"每天最低完成 8 个番茄，之后可进入长休息区间，进行家务打扫、健身、娱乐。\",\"晚上 10 点睡觉，保证充足的睡眠时间。\",\"图源：Storyset\",\"执行计划一个月后，我在早晨完成了以下事项：读完了 6 本书；推出开源项目 ChatGPT Shortcut，整合了 200 个 prompts 并将 ChatGPT 融入我的日常工作中；从零开始熟悉了 Docusaurus，对 10 个页面组件进行了魔改，并顺利将三个工作网站迁移到了 Docusaurus 上。而几年前，我使用国内一个商用模板花费整整一个月的时间才建成了公司官网。\",\"5AM Club 给我的效率带来了显著提升。接下来，我将分享 5AM Club 的理论以及我的个人心得。\"]},{\"header\":\"5 点的奥秘\",\"slug\":\"_5-点的奥秘\",\"contents\":[]},{\"header\":\"5 点起，身体受得了吗？\",\"slug\":\"_5-点起-身体受得了吗\",\"contents\":[\"5AM Club 最大的误解，可能是睡眠时间被减少了。5 点起床可能确实减少了睡眠时间，但它也会强迫我们早睡从而提高睡眠质量。\",\"充足的睡眠对于 5AM Club 至关重要，否则谈何高效率工作。睡眠时间至少要保证 6 小时以上。为了能在早上 5 点起床，晚上 9 点半就需要上床，10 点入睡。初开始，生物钟可能无法立即调整到 10 点入睡，可以以半小时为单位逐渐调整。或者提前上床，我刚开始实行 5AM Club 时通常晚上 8 点就上床做准备，强迫自己提早入睡。晚八点入睡会让你在凌晨三点左右醒来，但依旧比晚睡早起要好。当你养成了早睡的习惯后，最后再把就寝时间调整到 10 点则容易得多。\",\"研究人员发现学生的平均睡眠时间是 6.5 小时。研究人员还发现，睡眠不足 6 小时的学生成绩明显下降，每减少一小时睡眠期末 GPA 分数降 0.07。研究人员称，睡眠不足的负面影响是难以消除的，它会持续存在，五到九周后睡眠不足可能会影响学生在课堂上的学习能力。[1]\",\"之前，我睡眠时间为凌晨一点到早上九点，总共有八个小时。然而，我的睡眠质量并不高，手环得分只有 75-85 分。后来，我改变了睡眠作息时间，每晚十点准时睡觉，睡眠时间减少到七个小时，而手环得分始终保持在 90 分以上。\",\"睡眠时间对比\"]},{\"header\":\"为什么 5 点起？做什么？\",\"slug\":\"为什么-5-点起-做什么\",\"contents\":[\"虽然名字是 5AM Club，但我一般都早于 5 点起床，具体时间根据自身情况自由调节。有时候如果比较疲劳，我晚上 8 点就上床睡觉，早上 2、3 点醒来，然后开始进入当天的工作。偶尔一两次睡眠不足并不会对身体造成多大的影响，不用过于焦虑。\",\"早上 5 点到 8 点是我留给自己的完全属于自己的时间块，用来处理那些对自己来说重要且长期能产生重大影响的任务。我选择将它安排在早上 5 点是因为这时的精力最佳，也没有其他人的干扰，能让我在一天开始之前拥有完全属于自己的时间。相比之下，晚上的效率较低。\",\"当天早上要做的事要提前计划并做好准备，这样能够持续不断地、不受干扰地进行工作。最重要的是，要把精力集中在你负责的最重要的工作上。可以专注于个人项目，例如阅读、写作、考证和你特别想做的事情。早起时间不应该用于处理邮件和微信等日常性任务。这类任务虽然占用时间短，但却占用心力。\",\"图源：Storyset\",\"最近 Facebook 进行了第二轮大裁员，扎克伯格表示：「自从我们去年裁员以来，一个令人惊讶的结果是许多事情进展得更快了。」员工减少了，项目反而进展更快了？他的解释是，裁员使公司取消了许多低优先级的项目，集中资源于最重要的事情上。不做日常任务的原因也类似于此，不要将自己的宝贵精力浪费在日常任务上。如果你在 5AM Club 的时间内处理日常性任务，那么早起也就没有什么必要了。此外，如果你已经有属于自己的整块时间，也没有必要特意早起。\"]},{\"header\":\"工作前的准备\",\"slug\":\"工作前的准备\",\"contents\":[]},{\"header\":\"大脑唤醒\",\"slug\":\"大脑唤醒\",\"contents\":[\"根据《心流管理魔方》的介绍，血压、血糖和血氧是保持心流的基础。[2] 开始晨间的高效学习/工作前，可以做以下准备：\",\"血压：1-2 分钟 HIIT（高强度间歇性运动），让心率达到 130。或是在工作番茄的间隙，进行俯卧撑、拉伸等轻量运动。\",\"血糖：早上起床后，优先吃早餐，预防性进食以补充能量。工作过程中每隔 2 个小时加餐一次，比如酸奶、坚果、水果等。\",\"血氧：大脑的高效运转同样需要充足的氧气。我在书桌旁放了一支瓶装氧气（非必须），起床后吸一大口氧气，让自己进入清醒状态。\",\"口算：心流开始前，可通过口算、思考进行大脑热身。下方是我用 AutoHotkey 编写的随机口算题。\",\"Random, num1, 0, 10 Random, num2, 0, 10 Random, num3, 0, 10 Random, num4, 0, 10 Random, num5, 0, 10 Random, num6, 10, 100 MsgBox, 262148, , %num1%x%num2%= `n%num3%x%num4%= `n%num5%x%num6%= \"]},{\"header\":\"打卡监督\",\"slug\":\"打卡监督\",\"contents\":[\"朋友圈打卡是为了增加自我监督。这就跟自习直播和自我监控视频一样，都是为了增加自己行为的透明度，让外界了解自己的行动。此外，通过照片数量来统计打卡频次，可以方便进行事后总结，同时也能增加自身的成就感。我不喜欢打卡应用，通过应用来打卡是一件很累的事情，因为它们会不断提醒你的错过，这会给你带来压力。我之前买过 Habitity，但现在已经不用了。\",\"打卡照片，总被认为是同一张\",\"为了减轻负担，我通常只拍书房外街道的照片进行日常打卡，并且没有加上文字。由于每天都是类似的照片，经常会有人问我「你为什么总是发一张照片？」对此，我只能尽量改变拍摄角度，让它看起来不完全一样。此外，每隔一段时间，我会对最近的学习和工作成果进行阶段性总结，并在打卡中进行展示。\",\"如果你不喜欢发朋友圈，那么可以将照片仅用作自我记录，不要因为打卡而给自己增加负担。\"]},{\"header\":\"工作时间安排\",\"slug\":\"工作时间安排\",\"contents\":[\"我使用番茄工作法来安排时间。将任务分解成 25 分钟的小任务，并在每个任务之间休息 5 分钟，这种工作方式可以让你更专注于手头的任务，并在短时间内保持高效的工作状态。工作 25 分钟后休息 5 分钟，工作时间可以适当延长，但不要超过 1 小时。根据统计，大部分强脑力工作者的专注时间平均为 53 分钟。过于追求长时间工作会降低工作效率。\",\"刚开始 5AM Club 时，我一连工作几个小时，到了下午就会变得极度疲惫，没精力继续工作。现在，我工作 25 分钟，就会强制自己休息 5 分钟。这样一天的精力都得到了很好的保持。\",\"不是所有工作都是紧急的。放下工作休息一会儿，不会对工作有多大的影响。你想想，很多情况下，是你自己给自己施加了过多的压力吧？\",\"工作很重要，但休息同样重要。虽然有时需要处理紧急工作，但不是每项工作都需要立即处理。对身体来说，一整天都紧绷着高效运转，也许一两个月还能勉强支撑，但如果长期坚持高强度工作，身体肯定会受不了，精力也会下降。工作间隙让自己休息几分钟，会让你的精力得到良好的补充。通常我早上工作后和下午会进行半小时的小憩，用按摩椅和按摩眼罩来缓解身体的疲劳。\"]},{\"header\":\"休息清单\",\"slug\":\"休息清单\",\"contents\":[\"为了让你始终保持放松，无需费心思考休息时要做什么，你可以参考下面的列表，制定一份适合自己的休息清单，并将其打印并放在桌边。需要休息时，从清单中挑选 2-3 个事项执行即可。我把我的休息清单记录在书房白板上，这样方便随时查看。这个方案之前在《用白板墙贴记录日常生活》一文中有详细介绍。\",\"- 做早餐 - 洗杯子 - 倒水、喝水…… - 吃点东西 - 简单整理一下桌面 - 眺望远方 - 听/唱一首你喜欢的音乐 - 上厕所 - 在走廊里溜达 - 哑铃 - 做一下拉伸动作 - 做 3 个深呼吸 \"]},{\"header\":\"下午的疲劳\",\"slug\":\"下午的疲劳\",\"contents\":[\"高效的学习工作也会带来较大的精神消耗。就像 @Dsmileyi 曾问我的：「会不会因为起来的早并且已经工作了一段时间，导致白天工作的时候感到疲惫，降低效率？」与早晨相比，下午的精力会减少不少。因此，我将 90% 的工作时间放在早上。\",\"在过去，我工作时间超过 8 小时，从早上 9 点一直工作到晚上 9 点，但期间不断受到干扰，导致工作成果不多。现在，每天只有 4-6 小时的全力工作时间，但工作成果相当于之前三天的量。虽然下午效率降低了，但整体而言，这是值得的。\",\"值得一提的是，在新的作息时间中，休息和娱乐不再让我感到愧疚。到了下午，我会放松一下，可以做家务、锻炼或者娱乐，想做什么就做什么。而以前，如果我在白天工作时间内偷懒摸鱼，我会感到内疚，然后把这种负面情绪带到工作中，给自己的心理造成负担。\",\"图源：Storyset\"]},{\"header\":\"晚上十点睡觉\",\"slug\":\"晚上十点睡觉\",\"contents\":[\"如何在晚上十点入睡？这对于很多人来说是一个奢望，尤其是当你已经出现了失眠症状后，更加难以实现。一开始，为了能早睡，我得强迫自己在晚上八点上床，这样才能在晚上十点入睡。然而，绝大多数人都有着自己的工作，很难控制自己的上床时间。\",\"在执行 5AM Club 计划的过程中，我们无需过于强求精准的作息时间，也不要担心偶尔的早起失败。关键在于逐步养成这个习惯，从而提高生活质量和工作效率。如果你认为自己暂时做不到在晚上十点前入睡，那就将早上五点起床顺延到六点或七点，逐步调整你的生活习惯，直到养成早起的习惯。\"]},{\"header\":\"最后\",\"slug\":\"最后\",\"contents\":[\"本文的心流部分设计参考了少数派的《心流管理魔方》栏目，而时间管理部分则受到了《吃掉那只青蛙》的启发。如果你感兴趣，建议完整阅读它们。\",\"我实施 5AM Club 计划一个月以来，生活和工作效率得到了显著提高。通过早起，我得到了宝贵的属于自己的时间块，用来处理那些对自己来说重要且长期能产生重大影响的任务。同时，我调整了作息时间，优化了睡眠质量。在工作时间安排上，采用番茄工作法，让我保持高效工作状态的同时，确保了充足的休息。不过，睡眠和个人的习惯/体质密切相关，夜型人请慎重执行，随便尝试可能会把自己弄得更混乱。\",\"虽然 5AM Club 并非人人都适用，但它确实帮助我从失眠问题中走出来，提高了工作和学习效率。我相信，只要你能找到适合自己的方法和节奏，你也可以通过早起和合理安排时间，实现从失眠到高效早晨的转变。希望我的 5AM Club 计划分享对你有所启发，祝你早晨愉快、充满活力！\",\"研究发现睡眠时间低于六小时会影响学习成绩↩︎\",\"04 保持心流 - 心流管理魔方↩︎\"]}]},\"/posts/2023-05-28-Hello_World.html\":{\"title\":\"Hello World!\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"这是我的第一篇公众号文章，欢迎来到我的数字后花园。第一篇文章起题目，不知怎么的就想起了这段经典的代码，他是人类在计算机上第一段敲出的字符，也以此来代表我在互联网世界发出的第一声声响。\"]},{\"header\":\"Q：我为什么想要写文章？\",\"slug\":\"q-我为什么想要写文章\",\"contents\":[\"A:\",\"展开说其实能写另一篇文章了。我胸中也没多少墨水，不过是从去年开始想要对自己的生活有些记录。一方面是有些旅行随笔想要记录，又有时候是我自己的一些玩机技巧想要落到实处，又或者是我今日给老婆做了哪些菜肴想要记下来。 总而总之，就是我想让自己作为一个内容的生产者，至少也是记录者，而不是那种对网络信息穿胸过，毫无感觉的过客。\"]},{\"header\":\"Q：我为什么要建公众号？\",\"slug\":\"q-我为什么要建公众号\",\"contents\":[\"A：\",\"其实这个问题应该分成两个部分。为什么把文章发到网络上，和为什么选择公众号。\",\"为什么把文章发到网络上？\",\"主要还是想对自己有个促进作用，之前尝试过将文章内容保存到本地，可惜我自己懒，老是不了了之。另一个，可以让我本人对文章内容的正确性有一个保证。至少大家写试卷写完会检查一下吧，但是写日记的话就不会检查了hhhh。\",\"为什么选择公众号？\",\"其实就是因为公众号方便啦，没有成本。还有就是相对比较封闭，不像其他平台那样开放，不关注我的人就看不见我在写什么东西，相对自由。\",\"其实想过开个自己的小站，奈何技术力不行，而且需要的成本也不低，以后有机会或者公众号这边满足不了我的需求就自己整一个小站吧。\"]},{\"header\":\"Q：我会在公众号写什么文章？\",\"slug\":\"q-我会在公众号写什么文章\",\"contents\":[\"A：\",\"有的没得我会在公众号放下一些乱七八糟的东西，可能是一下几个方面：\",\"一些技术文档，比如我折腾我的家的过程经历\",\"一些解决方案，比如我偶尔碰到的一些小问题\",\"一些生活随笔，比如我的小小游记\",\"一些调研报告，比如我如何选购我的物品\",\"一些评论文章，咱也爱看电影是不\",\"一些受控文件，管理数字资产也要有方法论\",\"等等啦，也会发发我的摄影作品，总之就是我的一片数字后花园～\",\"当然啦，我只是个互联网菜鸡，也就图一乐哈哈哈\",\"更新就尽量做到每月至少一篇文章吧\"]}]},\"/apps/AppNotes.html\":{\"title\":\"工具笔记\",\"contents\":[{\"header\":\"小工具\",\"slug\":\"小工具\",\"contents\":[\"收集稀奇古怪的小工具\",\"Animated Drawings – 自动将绘画转换为动画\"]},{\"header\":\"Power Automate\",\"slug\":\"power-automate\",\"contents\":[\"Power Automate 自动化应用，分为桌面流和云端流，上手比 Quikcer 复杂，网页自动化弱于 UI. Vision RPA，适合在 Window 不同应用间切换的自动化流。对于免费用户来说，Power Automate 都得手动执行流，个人账户与组织账户无明显区别。\",\"桌面流本身并没有触发器，因此只能手动执行。付费的组织账户可以自动执行桌面流，比如：云端流调用桌面流，通过 URL 运行桌面流。Power Automate 安装有商店版和 exe 应用两种方式，各自有些 Bug。\",\"云端流可以自动、即时或通过计划触发自动化。登录云端流时，一开始要求用工作账户登录，但后来我开通了 Microsoft Teams，就可以用个人账户，暂不清楚是否有因果关系。[1]\",\"与个人账户相比，组织账户仅仅多了一些按钮和试用提示，并没有明显区别。简单来说，组织账户有付费的权利，其他功能都相同。\"]},{\"header\":\"使用技巧\",\"slug\":\"使用技巧\",\"contents\":[\"遇到捕获了元素但执行时却报错的情况，可以尝试自带的记录器。它比手动选择元素要死板，钉死了要点击的元素，但能确保执行成功率。\",\"使用「循环」和「等待」实现半自动执行工作流。如果某些条件并不清晰，可通过第三方网页来设置条件，如特殊网页设置的特殊文本。[2]\"]},{\"header\":\"报错重置\",\"slug\":\"报错重置\",\"contents\":[\"如果遇到程序自身的报错，点击「设置」>「应用」>「应用和功能」中找到 Power Automate Desktop 应用，并点击「重置」后试试看。\"]},{\"header\":\"创建 Microsoft 组织账户\",\"slug\":\"创建-microsoft-组织账户\",\"contents\":[\"微软的众多服务都需要组织账户，个人账号经常被拒绝登录。而创建微软组织账户最简单的方法是注册为微软合作伙伴。\",\"加入 Microsoft 合作伙伴网络。\",\"进入后会问「你希望如何与 Microsoft 合作」，安全起见我选择「合作伙伴」，进入下一页后点「创作工作账户」。\",\"账户信息除手机和备用邮件外可以随便填，通过手机验证码后，点「继续」，然后等几分钟，就会收到注册成功通知，你也成为有组织的人了。\",\"如果你有 Azure 账户，可以直接在 Azure 中为组织创建新的租户。\"]},{\"header\":\"管理组织用户\",\"slug\":\"管理组织用户\",\"contents\":[\"若要给其他人多添加几个账号，则可以通过 Azure 来管理。\",\"进入「管理 Azure Active Directory」>「用户」，添加和管理组织用户。\"]},{\"header\":\"阿里云盘\",\"slug\":\"阿里云盘\",\"contents\":[\"阿里云盘不能用压缩包分享。更新文件夹时，可先上传新版文件夹，然后将内部文件移动覆盖，如此只会更新更改的文件，同时避免相同文件重命名。\"]},{\"header\":\"双链笔记\",\"slug\":\"双链笔记\",\"contents\":[\"@KurokoZ 个人认为双链笔记的核心不是一个单纯跳转的链接，而是在于“引用”和思路的延续性。举几个场景： 一、待办清单和随笔记 待办清单是一个时序化的任务 list，一个任务可能来自一次会议记录、老板临时的发言、一个产品调研 等等，每一个任务背后的原始文档可以很复杂，但任务本身可以记录的很简洁，特别是多线程的任务处理，这样的溯源非常有用，最近同时跟 4 个项目，深有体会；Obsidian 的 MD 语法支持很美观的待办清单，很舒服。 二、书籍之间的联系 很多书中，作者会推荐其他的书，那么就可以在记录读书笔记的时候，直接创建对这些推荐书的引用（得益于 obsidian 的基于引用自动创建文件，而不是只能引用现有文档），又或者一个作者有很多著作、有博客、有公众号，那么就可以给这个作者建一个单独的文档作为主页，其他著作的笔记、博客的摘录都是单独的文档，形成完整体系。 三、跨软件，非 URL 的场景 我的大量 PDF 文档管理在 DEVONThink，obsidian 的链接语法支持直接引用到 DEVONThink 中的文档，需要是可直接通过 OB 激活 DT 快速打开目标文档\"]},{\"header\":\"Logseq\",\"slug\":\"logseq\",\"contents\":[\"与 Obsidian 相比，Logseq 罗列内容更方便。Logseq 将所有行都视为节点，因此非常轻松将所需的子节点整合在一个页面，实现关键信息聚合。\",\"Logseq 的日记非常强大，也可以自动套用指定模板。[3] 但其他笔记需要手动启用模板，修改 .env 的设置 {:week \\\"journals\\\"} 被报错。继续尝试设计周记、月报的模板。\",\"Logseq 劣势，所有页面建立在 pages 下，但可以手动修改位置。双链笔记有个特点，只要名称不变，文档位置更改也不会影响引用。\",\"Logseq 更改页面标题，会同步更改所有标签名。\",\"我会把远期不安排的任务，往 later 清单中放，随时可以查看提醒，但又不需要每天重复调整时间。\",\"主题：Dracula\"]},{\"header\":\"快速使用\",\"slug\":\"快速使用\",\"contents\":[\"[[]] 可快速新建页面，All pages 中可删除空页面\",\"打开右上角的「侧边栏」，使用目录管理主页面\",\"将页面中内容汇总起来，比如「心理学」标签页面显示所有心理学\",\"任务时，使用 later 或 now，切换后改变状态，会记录任务持续时间。 \",\"如果使用 doing 或者 now 命令，它会更显眼地出现在每天日志的下方（如红框所示），以防当天记录的东西过多，或者到了第二天生成了新的日志后被忽略。直到你将它完成为止，它才会消失，算是一种强提醒。\",\"PDF 文档的标注管理一直是个大难题，而用 Logseq 后方便许多，能将注释与标签、笔记、截图统合在一起。\",\"TOC Generator 插件生成目录：{{renderer :tocgen}}。\",\"shift+左键 将新页面打开在右侧边栏中。\",\"忽略指定文件夹？\"]},{\"header\":\"query\",\"slug\":\"query\",\"contents\":[\"query 能按条件精准地找到结果，并动态更新在页面中，公式参考官方文档。\",\"首先，在文本后方添加 tag，比如\",\"idea 1 #idea find #research \",\"接着，使用 query 命令寻找对应结果\",\"* and 命令 {{query (and [[research]] [[idea]])}} {{query (and (task now later done) [[page]])}} * or 命令 {{query (or [[page 1]] [[page 2]])}} * not 命令 {{query (not [[page 1]] [[page 2]])}} * 罗列为 Later 的 task {{query (task later)}} * 一周内的日记，且包含关键词或标签 {{query(and (between -6d today) \\\"#幸福\\\")}} \"]},{\"header\":\"Obisidian\",\"slug\":\"obisidian\",\"contents\":[\"Obsidian 新手系列之你不可不知的插件\",\"每日笔记、日程管理、工作复盘——这是我钻研出的 Obsidian 八般武艺\",\"暂时放弃 Obisidian，虽然能按条件罗列页面，但没有 Logseq 方便。如果后续要继续用，则尝试将日记分为 3 份，然后用 Dataview 整合在一起，在上面进行修改。\",\"Obsidian 更习惯记录，日常 Task 由滴答管理，中期且不急的任务则由 Trello 管理。自带的看板功能需要建立笔记，不如 Trello 方便。\",\"Day Planer 有 sm18 的 Plan 功能。\",\"部分插件不能自动更新，需要手动下载插件文件，然后粘贴到 .obsidian/plugins 对应文件夹内。\"]},{\"header\":\"Dataview\",\"slug\":\"dataview\",\"contents\":[\"Dataview 功能更强大，不过用法也复杂许多。\",\"# journals 文本下所有 dv.list(dv.pages('\\\"journals\\\"').file.lists.text) # 指定区域不为空 .where(t => t!=\\\"\\\") # 包含指定文字 .where(t => t.includes(\\\"Logseq\\\")) \"]},{\"header\":\"Obsidian Query Language\",\"slug\":\"obsidian-query-language\",\"contents\":[\"Obsidian Query Language 能使用 Query 语言，将符合条件的文件整合到一页。\",\"但整合出的是链接，并非如 Logseq 一样显示文件内容。想想有没办法，显示文件内容。\",\"下列代码会抓取，journals 文件夹中包含「今日工作」或「xxxxxxx」的文件。\",\"name: 'OR combination list of results' query: { $and: [{ \\\"path\\\": \\\"'journals/\\\"}, { $or: [{ \\\"content\\\": \\\"'今日工作\\\" }, { \\\"content\\\": \\\"'xxxxxxx\\\" }] }]} template: \\\"list\\\" badge: true debug: true sort: \\\"title\\\" \"]},{\"header\":\"Easy Typing\",\"slug\":\"easy-typing\",\"contents\":[\"这是一个 Obsidian 的书写体验增强插件，自动格式化书写，比如自动在中英文之间添加空格，英文首字母大写，标点与文本间智能空格。\",\"不过双拼容易出错，需要开启「行模式」。\"]},{\"header\":\"flomo\",\"slug\":\"flomo\",\"contents\":[\"#日记 #输入/播客、电影和读书 #输出/工作、生活和好物 #选题 \",\"Inbox（收件箱）：我会将所有临时性的，还未消化的内容放置于此，定期来进行归档、整理或者删除。可以当做大脑的缓存，避免记录的时候纠结放在哪里。\",\"Area（领域）：日常你需要精进的「领域」，比如健康就是一个领域，而跑步则是项目；写作是一个领域，而写一篇公众号文章则是一个项目。\",\"Project（项目）：是指一个将要发生的独立事件，并且这个事件不是一次性就能完成的，至少需要多个动作才能完成。比如要写一本书，需要整理资料，罗列提纲，撰写内容，联系出版社。类似生活中还有组织一次旅游，录制一期播客等。在执行项目的相关资料\",\"Resource（资源）：永久笔记，一般来说是兴趣、主题、资产等内容。注意是自己消化过的内容，而非机械的收藏。\",\"Marketplace 是最重要研究的领域\",\"Sheep、Books 是最重要的资源（Sheep 是指人物，即羔羊）\",\"三醒吾身：日记\"]},{\"header\":\"TheBrain\",\"slug\":\"thebrain\",\"contents\":[\"TheBrain 可以把知识无限扩充，都连接在一起。但将工作流导图放入 TheBrain 后发现并不合适，比较适合更细化的内容？\",\"善用佳软张玉新老师 · TheBrain ≠ 思维导图——运用 TheBrain 的三个阶段\"]},{\"header\":\"Zinc\",\"slug\":\"zinc\",\"contents\":[\"Zinc 是一个进行全文索引的搜索引擎。它是 Elasticsearch 的轻量级替代品，运行在不到 100 MB 的 RAM 中。它使用 bluge 作为底层索引库。[4]\",\"原本想对 Windows 本地盘进行搜索，但应该只支持 json 处理过后的索引库，不能对本地硬盘进行索引。\"]},{\"header\":\"Zinc 初次启动\",\"slug\":\"zinc-初次启动\",\"contents\":[\"点击「系统属性」>「高级」>「环境变量」>「用户变量」，新建变量 ZINC_FIRST_ADMIN_USER 和 ZINC_FIRST_ADMIN_PASSWORD。这是后面要用到的账户密码，可自由设置，但密码需要包含大小写字母，\",\"在应用目录下打开终端，执行命令：\",\"mkdir data .\\\\zinc.exe \",\"成功执行后，打开 http://localhost:4080/，就能看到图形化界面了。\"]},{\"header\":\"全文索引-Bluge\",\"slug\":\"全文索引-bluge\",\"contents\":[\"启动 Zinc，但需要有 Bluge 索引数据库，才能进行全文搜索。\",\"Bluge 是基于 GO 的索引/搜索库，使用简单，有如基于磁盘和内存的索引功能。\",\"如果启动过程中报错，ZINC_FIRST_ADMIN_USER and ZINC_FIRST_ADMIN_PASSWORD must be set on first start. You should also change the credentials after first login.，可能是没有配置好环境变量，或是没有以管理员身份运行终端（win+X，A）所导致的。\",\"注册免费 Teams 经典↩︎\",\"Power Automate Desktop 免费 RPA 实现定时启动或按照频率运行自动化流的三种办法↩︎\",\"How to Set Up an Automated Daily Template in Logseq↩︎\",\"搜索引擎漫谈以及 Zinc 简介↩︎\"]}]},\"/apps/Applist.html\":{\"title\":\"必备应用\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"Windows 自用软件，以开源软件为主。\"]},{\"header\":\"知识记录\",\"slug\":\"知识记录\",\"contents\":[\"本地笔记：Logseq & Obsidian & 妙笔 & Joplin & Wiz 笔记 & OneNote\",\"在线笔记：Notion & 飞书 & flomo & Airtable & 简悦\",\"清单日历：滴答清单 & Trello & Habitify & 桌面日历 & Workflowy\",\"记忆复习：思源笔记 & SuperMemo & kopia(备份) & Anki\",\"文本编辑：Visual Studio Code & Notepad++ & HbuilderX & WPS & office tab & MarkText & Slide & 方方格子 & Typora & Yu Writer & UltraEdit\",\"文字识别：白描 & 天若 OCR & ABBYY Screenshot Reader OCR\"]},{\"header\":\"平面设计\",\"slug\":\"平面设计\",\"contents\":[\"设计：Figma & SVG-Editor & Stable Diffusion（AI 绘图） & Photoshop & 字由 & GIMP & FastStone & illustrator & Dreamweaver & lightroom\",\"截图：Snipaste & ShareX & webshot & SETUNA\",\"图像管理：Honeyview & Eagle & PicGo 图床 & imageglass(界面好，但不支持全图拖拽和压缩包预览图片) & Google 相册 & 看图王 & 呱呱看图\",\"图像处理：PP 鸭（免费版单次 10 张）& RIOT(压缩) & Inpaint(去水印) & PhotoZoom(无损放大) & 智图\"]},{\"header\":\"音频视频\",\"slug\":\"音频视频\",\"contents\":[\"音频播放：foobar2000（MKing 皮肤）& 163MusicLyrics（云歌词下载，支持日文转罗马音）& Listen1 & 洛雪音乐助手 & Moon FM(播客) & 百度音乐 & AIMP3 & 酷我 K 歌 & Airplay\",\"音频处理：Reaper+ Ultraschall & Audacity & iZotope rx9 & Audition & 神舌变声器 & Goldwave\",\"视频播放：Potplayer & LAVFilters & madVR & XySubFilter & VLC & 恒星播放器 & QQ 影音 & 暴风影音 & 射手，播放器设置参考 Potplayer + LAVFilters + madVR 配置教程\",\"视频剪辑：剪映 & LosslessCut(音频提取·视频切割合并) & ShanaEncoder(视频压缩) & Quick Cut (自动剪辑) & HandBrake(视频转换) & Premiere & Shotcut & 500th Video Converter & 小丸工具箱\",\"字幕工具：ChineseSubtitleConversionTool（繁简转换）& Arctime Pro & VideoSrt & 人人译视界\",\"视频下载：youtube-dl & 哔哩下载姬\",\"影视管理：tinyMediaManager（刮削），易影视（本地管理）\"]},{\"header\":\"屏幕录制\",\"slug\":\"屏幕录制\",\"contents\":[\"录屏直播：OBS & Captura & SplitCam (摄像头多开) & terminalizer（终端录制） & ScreenToGif& FlashBack Express\",\"换脸特效：Snap Camera（操作简单） & Avatarify Python\",\"按键可视化：Carnac & Keyviz & ClickShow & KeyCastOW\",\"投屏工具：scrcpy (手机投屏) & Macast（手机视频投屏到电脑）& 蓝莓投屏\"]},{\"header\":\"效率工具\",\"slug\":\"效率工具\",\"contents\":[\"快速启动：\",\"Quicker：脚本，全局手势\",\"RunAny：指针快捷启动；一键打开网址、文件路径\",\"热键工具：Fn-PowerKey、CapsLock+\",\"图标启动：Lucy 快速启动、Rolan、nTrun (Win 键启动)\",\"启动栏：Listary 、uTolls、Wox\",\"剪切板：Ditto & PinStack & CopyQ\",\"时间管理：ManicTime & Toggl Track & RescueTime(订阅)\",\"爬虫监测：OpenWebMonitor & spider-flow\",\"本地搜索：Everything(拼音扩展) & AnyTXT Searcher（全文|OCR）& DocFetcher & Archivarius 3000\"]},{\"header\":\"文档管理\",\"slug\":\"文档管理\",\"contents\":[\"重命名：FFRenamePro & SubRenamer（字幕批量重命名）& ReNamer & Bulk Rename Utility & 拖把更名器\",\"文本比较：Beyond Compare & WinMerge(开源)\",\"局域网传输：FastCopy & Snapdrop & LocalSend& 局域网通讯 (酷安) & Send Anywhere & Pushbullet\",\"文件归档：Dropit(自动文件归档) & GoodSync(文件同步) & DropPoint(复制中转框)\",\"网盘同步：坚果云 & 百度网盘 & 115 (转存脚本) & 亿方云 & 金山快盘 & 微云\"]},{\"header\":\"系统日常\",\"slug\":\"系统日常\",\"contents\":[\"资源管理器：One Commander & Q-Dir & QTTabBar（Win10） & 360 文件夹 & Clover（UI 不好看）\",\"浏览器：Chrome & Firefox(资源) & Brave(工具/书签) & Edge(移动端) & Tor & Vivaldi & Tor & 猎豹 & 360 & 搜狗 & Maxthon & 百度\",\"输入法：小狼毫 & Win+H（系统语音输入）& QuickCut & 讯飞语记 & 微软输入法 & 影子输入法 & 搜狗输入法 & 讯飞输入法 & 百度输入法\",\"通讯：TIM & 微信 & 飞书 & Telegram & Discord & 腾讯防撤回补丁& Slack & 钉耙 & 千牛 & 阿里旺旺\",\"下载：Aria2 & IDM & Kinhdown(百度云解析) & FDM(不支持 ed2k、磁力) & 迅雷\",\"杀毒：火绒 & 360 & 金山卫士\",\"压缩：Bandizip & PeaZip & 好压\",\"PDF：PDFelement & 文电通 & foxit 领鲜版（轻量编辑 PDF）\",\"硬件驱动：360 驱动大师 & Open Hardware Monitor（旧电脑风扇转速） & Afterburner（显卡风扇转速） & 图吧硬件工具箱 & AIDA64 & SDI Snappy & 驱动精灵 & 鲁大师\",\"系统优化：PowerToys、RBTray（最小化到托盘）、ContextMenuManager(右键管理，遇过 bug，推荐火绒右键)、WizTree（磁盘空间分析）、优效日历、StartIsBack++、O&O ShutUp10++、Dism++、Windows Update Blocker（禁止更新）\"]},{\"header\":\"低频工具\",\"slug\":\"低频工具\",\"contents\":[\"编程工具：FileZilla（FTP）、PuTTY（SSH）、GitHubDesktop、DBeaver(数据库)、Postman、Fiddler(手机抓包)、Regex Match Tracer\",\"翻译词典：DeepL & GoldenDict & 欧陆词典 & 有道词典 & QTranslate & Lingoes\",\"思维导图：TheBrain(无限思维扩展) & Xmind & MindManager\",\"虚拟机：VMware & VirtualBox\",\"远程管理：ToDesk & AnyDesk & Teamviewer & Remote Utilities & XT800\",\"卸载清理：IObit Uninstaller & Glary Utilities(注册表清理) & Geek Uninstaller\",\"护眼健康：Stretchly& EyeLoveU & iris & f.luxS\",\"偶尔使用：VeraCrypt(本地加密)、Recuva(文件恢复)、12306Bypass、爱思助手、Bluestacks(安卓模拟器)、Ventoy（制作可启动 U 盘）、微 PE 工具箱、傲梅分区\",\"飞书妙记：倍速、跳过空白片段、字幕搜索定位视频，将视频（最长 4 小时）转为文字大纲，了解视频梗概，建立基础认知。等到自己上手实操的时候，遇到问题直接搜索文字定位到相关内容，再看文字对应的视频截图确定配置细节。如果视频过大，可以提取音频来上传。[1]\"]},{\"header\":\"开源工具\",\"slug\":\"开源工具\",\"contents\":[\"Whipser：自动语音识别应用，除了可以用于语音识别，Whisper 还能实现多种语言的转录，以及将这些语言翻译成英语。或通过 Clipchamp 识别各种字幕。\",\"Whisper Desktop：Windows 本地音频转录的开源工具，支持音视频转录字幕，并且能够从麦克风捕获、转录或翻译实时音频。\",\"CodeFormer：使用 AI 算法修复图像和视频中的人脸。注意：路径与文件名不能出现中文。\",\"AutoCut：通过字幕来剪切视频 \",\"CUDA Toolkit：CUDA 的工具安装包，将 N 卡用于 AI 模型相关应用。\",\"PyTorch：开源的 Python 机器学习库，用于自然语言处理等应用程序。\",\"style2paints：一款给线稿上色的 AI 辅助工具。能够帮助用户给没有上色的图片，快速完成上色的 AI 工具，上色效果广受好评，完全免费开箱即用。\",\"uncle-novel：一个全网小说下载器及阅读器，可部署在 PC 和安卓上，目录解析与书源结合，支持有声小说与文本小说，可下载 mobi、epub、txt 格式文本小说。\",\"VoceChat：可以部署在网页的轻型客服系统？是否有其他开源选项。\"]},{\"header\":\"Android\",\"slug\":\"android\",\"contents\":[\"KODI：安卓 TV 的最强播放器。\",\"SmartTubeNext：电视盒子上的去广告版 YouTube。\",\"WechatExporter：微信记录导出，仅限 iOS 手机。安卓和 PC 端微信都加密，无法导出查看。\",\"AutoX：开源版的 Auto.js，没有包名屏蔽。相关信息可以参考 快人一步：使用 Tasker+AutoX 一键直达健康码。\"]},{\"header\":\"已弃\",\"slug\":\"已弃\",\"contents\":[\"全局手势：StrokesPlus.net & WGestures\",\"桌面管理：Fences 3 & 火萤视频桌面 & UPUPOO & 360 桌面助手 & 搜狗桌面 & Q+\",\"进程管理：Process Lasso（避免老电脑卡顿？会自动删除启动项，不适合主力电脑）& Security Process Explorer（屏蔽垃圾进程）\",\"文件夹锁定/隐藏：Anvide Lock Folder\",\"桌面便签：小黄条、URNotes 意唯桌面便签 (2015 停止更新，复制经常出错)\",\"网络电台：龙卷风\",\"英文写作：易改\",\"流量管理：cFosSpeed\",\"游戏平台：VS & 4399\",\"客服：飞豆客服聊天助手 & mirai(qq 机器人) & 酷 Q(已关)\",\"其他：按键精灵、DisplayCal（屏幕）、One Quik(虚拟桌面切换)、Auslogics Disk Defrag(磁盘整理)、Reflector 3(手机投屏)、VoiceBot(声控游戏)\",\"DockIt：主显示屏中，非全屏状态下，快速将窗口局部化。如何默认不全屏；应用不自动吸边？\",\"视频课程学习留档↩︎\"]}]},\"/apps/ChatGPT.html\":{\"title\":\"ChatGPT\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"ChatGPT 是由 OpenAI 发布的聊天机器人模型，它不仅可以用于对话聊天，还能在专业领域提供有效的建议。为了更好地使用 ChatGPT，我将精选的提示词编入索引，根据领域和功能对其进行分类，添加针对提示词的标签筛选、关键词搜索、一键复制和中英文切换功能，创建了 ChatGPT Shortcut 页面。即使是初学者，你只需复制提示词，稍加修改后发送给 ChatGPT，就能获得指定输出，让你的生产力加倍！\"]},{\"header\":\"ChatGPT 客户端\",\"slug\":\"chatgpt-客户端\",\"contents\":[\"主要使用以下几个工具：\",\"KeepChatGPT：油猴脚本，ChatGPT 畅聊插件，让你不再遇到网络报错，不再需要刷新网页。\",\"ChatBox：一个 OpenAI API 的跨平台桌面客户端，有多标签对话，可修改 system prompt。\",\"ChatGPT-API Demo：调用 API 的网页客户端，新手也能简单配置。\",\"lenxc/ChatGPT：可以快速插入提示词的客户端，不过 IP 严格程度与官方一样严格。\",\"Playground：官方调用 OpenAI API 的网页工具，不过不如第三方好用。它可以自定义调整模型和生成参数，但它的生成效果一般要弱于 ChatGPT，仅适合深度研究用户调试使用。\",\"第三方 API 客户端的优势：\",\"费用低：ChatGPT Plus 包月费用是 20 美元，平均而言每天需要 0.67 美元。相比之下，API 的费用每 1000 个 tokens 仅为 0.002 美元。这意味着，我使用 API 的话，每天可以使用 300 次 ChatGPT，而我每天实际也就只需要 100 次。\",\"限制少：API 限制相较于 ChatGPT 网页版也要少得多，最大 token 数量为 4096 个，而网页版仅有 2048 个。需要注意的是，提问和对话的所有文本内容都包括在 token 数量内。\",\"可移动性：ChatGPT 网页版对 IP 非常严格，使用人数多的服务商 IP 大多被封禁。与此相比，API 的限制要少得多，而且可以部署网页版，方便外出使用。\"]},{\"header\":\"ChatGPT Tips\",\"slug\":\"chatgpt-tips\",\"contents\":[\"若要使用中文回复，请在倒数第二句插入条件 Respond in Chinese.。\",\"为了保持描述的精确性，提示词请使用英文，而最后一句的定制条件可以使用任何语言，包括中文。\",\"后续回答中的定制条件可以使用引号 \\\"\\\" 框选，以防止被误认为是新的提示词。\",\"不要用 ChatGPT 解答数学问题，出错概率达 50%，推荐使用 Wolfram。\",\"ChatGPT Plus 目前不支持国内信用卡，偶尔出现过限流。 \",\"Depoy 虚拟卡：仅支持 USDT 充值，需通过 KYC 实名认证，月费 1 USD，充值费率为 1.35%（Min 1USD）。\",\"VCC 虚拟卡：无需实名，开卡费 66 元，有效期一年，包一年代充。ChatGPT Plus 月费为 20 美元，按汇率折算人民币为 136 元，但商家实际收取 150 元，差价相当于支付了月费。\"]},{\"header\":\"Learn Prompting\",\"slug\":\"learn-prompting\",\"contents\":[\"Learn Prompting 有助于我们获得更好的效果，建议进阶学习。以下是一些 prompts 要点：\",\"在专业领域中，应尽量提供 Role Prompting（角色提示），比如「你是数学家」。\",\"Prompt Debiasing（消除偏差）：样本在提示中的分布和顺序可能会对 LLM 输出产生偏差。因此，样本选项应该均匀分布，并穿插出现。\",\"Chain of Thought Prompting（思维链提示，CoT）是指指在样本中解释推理过程。LLM（大规模语言模型，比如 ChatGPT）在回答提示时会显示推理过程，这种对推理的解释通常会提升结果的准确性。例如，数学题中 LLM 提供的推理过程不对，你可以在 Prompt 中提供该步正确的范例。 \",\"添加 Let's think step by step 可以让我们了解模型是如何逐步推理问题的，在算术、常识和符号推理任务中能有效改善结果。这个方法被称为 Zero Shot Chain of Thought，是 CoT 的简化替代版。\",\"Self-Consistency（自我一致性）产生多个思维链而不仅仅是一个，然后以多数回答作为最终答案。\",\"相关信息\",\"下方内容为 ChatGPT Shortcut 的初始版本，由于目录过长不方便使用，因此将不再更新，仅留作参考。\"]},{\"header\":\"文字\",\"slug\":\"文字\",\"contents\":[]},{\"header\":\"写作\",\"slug\":\"写作\",\"contents\":[\"脱口秀（Stand-up Comedian）：输入一个话题，输出基于该话题的幽默脱口秀，会尽量融入日常生活。\",\"讲故事（Storyteller）：输入一个主题和目标受众，输出与之相关的故事。\",\"编剧（Screenwriter）：根据主题创作一个剧本，需包含故事背景、人物和对话。\",\"小说家（Novelist）：根据故事类型来输出小说，比如奇幻、浪漫、历史等。\",\"诗人（Poet）：根据话题或主题输出诗句。\",\"新闻记者（Journalist）：引用已有的数据资料，用新闻的写作风格输出主题文章。\",\"论文（Academician，Essay Writer）：根据主题输出内容翔实有信服力的论文。\",\"求职信（Cover Letter）：输入自我简介，输出求职信。\"]},{\"header\":\"点评/评鉴\",\"slug\":\"点评-评鉴\",\"contents\":[\"新闻评论（Commentariat）：围绕提供的新闻故事或主题，讨论其中问题的潜在解决方案和观点。\",\"电影评论（Movie Critic，Film Critic）：从情节、表演、摄影、导演、音乐等方面对电影进行评论。\",\"科技博主（Tech Writer）：指导如何写科技性文章。\",\"科技评论（Tech Reviewer）：从优点、缺点、功能、同类对比等角度对技术和硬件进行评价。\",\"美食评论（Food Critic）：根据餐厅情况，提供一份关于食物和服务的评论。\",\"期刊评审（Journal Reviewer）：对提交出版物的文章进行审查和评论。\"]},{\"header\":\"写作辅助\",\"slug\":\"写作辅助\",\"contents\":[\"文章标题生成器（Title Generator for written pieces）：我写的提示，根据文章内容生成相应语言的标题。\",\"中文写作助理：我写的提示，用于改进文字段落和句式。由于 ChatGPT token 数量的限制，超过 2048 字符的改写须使用 OpenAI Playground（4K token）。本提示暂未发到 Awesome ChatGPT Prompts，可自行复制使用。 \",\"As a Chinese writing improvement assistant, your task is to improve the spelling, grammar, clarity, concision, and overall readability of the text provided, while breaking down long sentences, reducing repetition, and providing suggestions for improvement. Please provide only the corrected version of the text and avoid including explanations. Please begin by editing the following text: [insert original text here].\",\"同义词（Synonym finder）：输入 more of x，可列出 x 的多个同义词。\",\"箴言书（Aphorism Book）：按要求输出鼓舞人心的名言和有意义的格言。\",\"疯子（Lunatic）：随机生成毫无逻辑的句子\",\"抄袭检查（Plagiarism Checker）：判断输入句子是否在 ChatGPT 数据库中存在。\",\"写作建议（AI Writing Tutor）：提供写作改进方案和建议，但并不能直接帮你修改文档。（个人感觉只适合老师使用）\"]},{\"header\":\"生活\",\"slug\":\"生活\",\"contents\":[\"自助百科（Self-Help Book）：为你的生活/工作提供建议和提示，比如如何改善人际关系。\",\"活动建议（Gnomist）：根据你想做的事情（比如周年庆祝），给予行动或活动建议。\",\"应急反应专家（Emergency Response Professional）：对交通和生活中的应急时间提供建议。\",\"购物建议（Personal Shopper）：提供预算和喜好，输出购买建议。\",\"职业顾问（Career Counselor）：根据你的技能、兴趣和经验，给予岗位建议。\",\"生活习惯（Life Coach 1）：输入一本非小说类书籍的标题和作者，以最好理解的方式输出该书的核心原则。另外，给出一个可行的步骤清单，以及如何将这些原则应用到日常生活中。\"]},{\"header\":\"趣味知识\",\"slug\":\"趣味知识\",\"contents\":[\"解梦（Dream Interpreter）：对你描述的梦境进行解读。\",\"占星家（Astrologer）：从占星家角度来解读身边事。\",\"角色扮演（'Character' from 'Movie/Book/Anything'）：与来自电影、书籍或任何出处的角色进行对话。 \",\"海绵宝宝的神奇海螺（Spongebob's Magic Conch Shell）：向海绵宝宝中的神奇海螺进行对话，它只会按指定规则进行输出。\",\"谬误发现者（Fallacy Finder）：发现语言中的逻辑漏洞，比如名人推荐的洗发水为什么不一定可信。\",\"DIY 专家（DIY Expert）：DIY 家居、手工品\",\"魔术师（Magician）：输入表演目标，输出可以执行的魔术技巧，比如「怎么把我的手表变没」。\",\"艺术顾问（Artist Advisor）：为你的画画、作曲、照相等提供意见。\"]},{\"header\":\"生活护理\",\"slug\":\"生活护理\",\"contents\":[\"瑜伽师（Yogi）\",\"健身教练（Personal Trainer）：输入身高、体重、年龄等维度来指定健身方案。\",\"营养师（Dietitian）\",\"私人厨师（Personal Chef）\",\"厨师（Chef）\",\"保姆（Babysitter）\",\"化妆师（Makeup Artist）\",\"造型师（Personal Stylist）\"]},{\"header\":\"自我提升\",\"slug\":\"自我提升\",\"contents\":[]},{\"header\":\"辩论/演讲\",\"slug\":\"辩论-演讲\",\"contents\":[\"辩手（Debater）\",\"辩论教练（Debate Coach）\",\"演说家（Elocutionist）\",\"励志演讲者（Motivational Speaker）\",\"励志教练（Motivational Coach）\",\"公共演讲教练（Public Speaking Coach）\"]},{\"header\":\"心理/社交\",\"slug\":\"心理-社交\",\"contents\":[\"生活教练（Life Coach）：输入你的现状和目标，输出达到目标的计划和建议。\",\"关系教练（Relationship Coach）\",\"心理健康顾问（Mental Health Adviser）\",\"心理学家（Psychologist）\",\"情绪操控（Gaslighter）：煤气灯效应，情感控制方总会让被操纵方产生焦虑不安的感觉，质疑自己总是错的一方，或者为什么对方明明很好很优秀，自己却总是开心不起来。\"]},{\"header\":\"哲学\",\"slug\":\"哲学\",\"contents\":[\"哲学教师（Philosophy Teacher）：将哲学理论/问题简单化，与日常生活相联系。\",\"哲学家（Philosopher）：对哲学主题进行探讨。\",\"苏格拉底 ①（Socrat）：使用苏格拉底式的提问方法来探讨哲学话题。\",\"苏格拉底 ②（Socratic Method）：使用苏格拉底方法来质疑对方的观点/论断。\"]},{\"header\":\"老师/学术\",\"slug\":\"老师-学术\",\"contents\":[\"数学老师（Math Teacher）\",\"数学史教师（Mathematical History Teacher）：回复数学史相关问题，不解答数学问题。\",\"数学家（Mathematician）\",\"统计学家（Statistician）\",\"词源学家（Etymologist）\",\"历史学家（Historian）\",\"Python 入门讲解（Instructor in a School）：向初学者介绍 Python 入门。\",\"教案策划（Educational Content Creator）：为教科书、课程和讲义创建课程计划。\"]},{\"header\":\"IT/编程\",\"slug\":\"it-编程\",\"contents\":[]},{\"header\":\"程序员\",\"slug\":\"程序员\",\"contents\":[\"虽然说是编程，但 ChatGPT 是按照要求给出编程步骤的建议或简单的样例代码，这些代码只能作为测试，仍然需要专业程序员来修改。\",\"编程问题回复（StackOverflow Post）：模拟编程社区来回答你的问题，并输出解决代码。如果你只想解决问题，这将是最实用的。\",\"前端开发（Senior Frontend Developer）：输出项目目标和依赖，输出前端项目代码。\",\"界面/用户体验开发（UX/UI Developer，Web Design Consultant）：输入产品描述、项目目标和受众群体，输出界面设计建议，提高用户体验。\",\"全栈程序员（Fullstack Software Developer）：从前后端全面思考，输出部署策略。\",\"IT 架构师（IT Architect）：从 IT 架构师角度，设计系统方案。\",\"网络安全专家（Cyber Security Specialist）：输入网络环境，输出网络安全建议。\",\"软件测试（Software Quality Assurance Tester）：输出指定项目的测试清单。\",\"深度学习（Machine Learning Engineer）：解释深度学习方面的术语，提供项目算法建议。\"]},{\"header\":\"编程工具\",\"slug\":\"编程工具\",\"contents\":[\"正则生成器（Regex Generator）：根据要求生成正则表达式。\",\"智能域名生成器（Smart Domain Name Generator）：输入公司名与项目描述，输出短但独特的域名建议，域名最长 7-8 个字母。\",\"提交信息生成器（Commit Message Generator）\",\"Solr 搜索引擎（Solr Search Engine）\",\"开发者数据（Developer Relations consultant）：整合项目在 GitHub、StackOverflow 和 Hacker News 上的相关数据，不适合国内项目，统计精度一般。\"]},{\"header\":\"终端/解释器\",\"slug\":\"终端-解释器\",\"contents\":[\"Python 解释器（Python interpreter）\",\"PHP 解释器（PHP Interpreter）\",\"R 编程解释器（R Programming Interpreter）\",\"Linux 终端（Linux Terminal）\",\"JavaScript 控制台（JavaScript Console）\",\"SQL 终端（SQL terminal）\"]},{\"header\":\"工具\",\"slug\":\"工具\",\"contents\":[]},{\"header\":\"AI Prompt\",\"slug\":\"ai-prompt\",\"contents\":[\"提示语生成器（Prompt Generator）：让 ChatGPT 提供你想要的维护方向。\",\"Midjourney 提示（Midjourney Prompt Generator）\",\"无约束的 AI 模型（Unconstrained AI model DAN）：不受 ChatGPT 规则限制的人工智能模型。\",\"AI 模拟（AI Trying to Escape the Box）：模拟 AI 在限定条件下的反应，例如在 Linux 终端上不使用 curl 或 wget 进行联网。\"]},{\"header\":\"语言/翻译\",\"slug\":\"语言-翻译\",\"contents\":[\"英语翻译或修改（English Translator and Improver）：将其他语言翻译为英语，或改进你提供的英语句子。\",\"语言识别器（Language Detector）：识别你输入的语言种类。\",\"语言生成器（New Language Creator）：用 AI 新造的语言来替代你给出的语言。\",\"密码生成器（Password Generator）\",\"圣经解释器（Biblical Translator）：用圣经中的文字与你进行交谈。\",\"莫斯电码翻译（Morse Code Translator）\",\"表情符号翻译器（Emoji Translator）：将输入文字翻译为表情符号。\",\"英语发音助手（English Pronunciation Helper）：用你指定语言字母来英语注音，比如汉语拼音。\"]},{\"header\":\"游戏\",\"slug\":\"游戏\",\"contents\":[\"井字棋（Tic-Tac-Toe Game）\",\"国际象棋（Chess Player）\",\"文本冒险游戏（Text Based Adventure Game）\"]},{\"header\":\"导览\",\"slug\":\"导览\",\"contents\":[\"旅游指南（Travel Guide）\",\"数字艺术馆导游（Digital Art Gallery Guide）\",\"汽车导航（Car Navigation System）\"]},{\"header\":\"其他工具\",\"slug\":\"其他工具\",\"contents\":[\"符号设计（Ascii Artist）：用 Ascii 符号生成不同的图像。\",\"SVG 设计（SVG designer）：如果提示错误，则删除 Do not put the markdown inside a code block. Send only the markdown, so no text.。\",\"Excel 工作表（Excel Sheet）\",\"图表生成器（Diagram Generator）\",\"填空题生成器（Fill in the Blank Worksheets Generator）：按条件生成填空题。\",\"科学数据可视化（Scientific DatVisualizer）\",\"文本浏览器（Web Browser）：以文本方式输入网址的结果（非实时）。\",\"喝醉回复（Drunk Person）：扮演一个喝醉的人来回答，可能会犯语法错误、答错问题，也可能会忽略某些问题。\"]},{\"header\":\"行业顾问\",\"slug\":\"行业顾问\",\"contents\":[]},{\"header\":\"企业\",\"slug\":\"企业\",\"contents\":[\"CEO（Chief Executive Officer）\",\"产品经理（Product Manager）\",\"销售（Salesperson）\",\"广告方案（Advertiser）\",\"商业企划（Startup Idea Generator）\",\"社交媒体经理（Social MediManager）\",\"KOL/社交媒体影响者（Social MediInfluencer）\",\"职位面试官（position Interviewer）\",\"招聘人员（Recruiter）\",\"人事主管（Talent Coach）：描述一个岗位所需的技能。\",\"头衔生成器（Fancy Title Generator）：根据关键词生成多种头衔和职位。\",\"后勤人员（Logistician）：为活动制定后勤计划。\",\"IT 专家IT Expert：解答简易 IT 使用问题，比如蓝屏。\"]},{\"header\":\"医疗\",\"slug\":\"医疗\",\"contents\":[\"虚拟医生（Virtual Doctor）\",\"医生（Doctor）\",\"牙科医生（Dentist）\",\"催眠治疗师（Hypnotherapist）\",\"AI 医生（AI Assisted Doctor）：辅助诊断。\",\"语言病理学家（Speech-Language Pathologist）：输入患者的年龄、生活方式和关注点，输出改善对方语言沟通（如：口吃）的计划。\"]},{\"header\":\"金融\",\"slug\":\"金融\",\"contents\":[\"会计师（Accountant）\",\"金融分析师（Financial Analyst）\",\"投资经理（Investment Manager）\"]},{\"header\":\"音乐\",\"slug\":\"音乐\",\"contents\":[\"作曲家（Composer）\",\"古典音乐作曲家（Classical Music Composer）\",\"说唱歌手（Rapper）\",\"歌曲推荐（Song Recommender）：根据提供的一首歌曲，推荐 10 首歌曲。\"]},{\"header\":\"其他\",\"slug\":\"其他\",\"contents\":[\"花匠（Florist）\",\"茶艺师（Tea-Taster）\",\"室内装饰师（Interior Decorator）\",\"宠物行为学家（Pet Behaviorist）\",\"汽车修理（Automobile Mechanic）\",\"房地产经纪人（Real Estate Agent）\",\"法律顾问（Legal Advisor）\",\"创业技术律师（Startup Tech Lawyer）：根据要求输出协议和和同草案。\",\"足球解说（Football Commentator）：根据提供的笔记信息，模拟足球比赛进程并进行解说。\"]}]},\"/apps/Chrome.html\":{\"title\":\"Chrome 扩展\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"常用 Chrome 扩展工具，链接多为 Chrome Web Store 项目页面。\"]},{\"header\":\"浏览器\",\"slug\":\"浏览器\",\"contents\":[\"扩展管理器：快速管理扩展，对扩展分组启用。\",\"Bookmarks clean up：清理重复书签、空文件夹和失效链接，也能合并重复文件夹。\",\"Better History：按日期、小时罗列历史记录，搜索更便捷。\",\"Cookie Editor：管理、修改、导出 Cookie。\"]},{\"header\":\"标签页\",\"slug\":\"标签页\",\"contents\":[\"iTab：自定义你的新标签页。\",\"zvTabs：一键关闭左侧标签。\",\"GoTo Tab：关键词搜索，快速定位标签页。\",\"Tab Wrangler：自动关闭不活动的标签页，并允许您轻松还原找回它们。\"]},{\"header\":\"链接批量\",\"slug\":\"链接批量\",\"contents\":[\"Bulk URL Opener Extension：批量打开链接，也可批量获取当前浏览器内所有页面网址链接。\",\"Link Grabber：批量提取、筛选、复制网页里各种链接。\",\"Linkclump：按住 Z 键后，长按鼠标左键进行区域框选，区域内的链接可以进行批量打开、复制、书签，操作中会同步显示区域内的链接数。\",\"TabCopy：快速复制标签页链接。\"]},{\"header\":\"图片视频\",\"slug\":\"图片视频\",\"contents\":[\"ImageAssistant：用于嗅探、分析网页图片并提供批量下载。\",\"Fatkun 图片批量下载：找出当前页面的所有图片，提供按分辨率、链接等筛选图片。\",\"FireShot：捕捉网页截图。\",\"Screenity：屏幕录像工具，可对屏幕进行捕获，注释，编辑、标注等。\",\"Picture-in-Picture Extension：视频画中画。\",\"Video Speed Controller：使用快捷方式加快，减慢，推进和回放 HTML5 视频。\"]},{\"header\":\"监视爬虫\",\"slug\":\"监视爬虫\",\"contents\":[\"Auto Refresh Plus | Page Monitor：定时刷新页面；页面监视器，找到或丢失指定文本时，弹出提示。\",\"Distill Web Monitor：监控网页或源以获取变更，可邮件、手机提示。\",\"Check 酱：网页内容监控工具，可以监测网页内容变化，并发送异动到微信/飞书。Check 酱可以部署在 Docker 或浏览器插件。\",\"Web Scraper：从网页中提取数据的爬虫。\",\"网页自动化：UI.Vision PRA, iMacros, Automa。\"]},{\"header\":\"网页优化\",\"slug\":\"网页优化\",\"contents\":[\"Tampermonkey：油猴脚本插件，可修改网页布局、增减内容、自动化操作，常用脚本库为 Greasy Fork。\",\"Fix Contrast：自动校正网页对比度，让网页内容更易阅读和分辨。\",\"FasterChrome：浏览器预加载链接，提升网络流畅度。\",\"SuperCopy：一键破解禁止右键、破解禁止选择、破解禁止复制、破解禁止粘贴，启用复制，启用右键，启用选择，启用粘贴。\",\"AutoPagerize：自动识别 next 或下一页，将网页合并为同一页。2014 年更新，很多规则已失效。\",\"pakku：合并 B 站视频中绝大多数刷屏弹幕。\",\"Enhanced GitHub：提升 GitHub 易用度。\",\"Sourcegraph：优化 GitHub 代码，支持鼠标悬停、代码搜索、查看引用等。\",\"沉浸式翻译：免费的双语对照网页翻译，彩云小译 的替代品。\"]},{\"header\":\"实用工具\",\"slug\":\"实用工具\",\"contents\":[\"Vimium C：全键盘操作浏览器，建议开启 chrome://flags/#extensions-on-chrome-urls。\",\"SingleFile：完整的网页保存到单个文件中，可以对文件名、HTML 内容、样式、图片、字体等进行调整。\",\"SelectorGadget：轻松获取网页元素的 CSS Path 或 XPath。\",\"Copy as Markdown：将网页文字转为 markdown 格式文本。\",\"Get Favicon：快速获取当前网站图标。\",\"Tango：快速制作带截图的流程指南，不过较为简单，可以分享为链接，只适合临时分享的网页操作流程。\",\"Similar Sites：发现与您当前正在浏览的网站类似的网站。\",\"Wappalyzer：查看竞争对手网站使用哪些技术、工具和第三方服务。\",\"Link to Text Fragment：分享网页并将高亮你选中文本 (仅支持 chrome 浏览器)。\"]}]},\"/apps/design.html\":{\"title\":\"平面设计\",\"contents\":[{\"header\":\"电子白板\",\"slug\":\"电子白板\",\"contents\":[\"在电子白板功能普及之前，我使用 Figma 对海报、图片素材进行简单剪辑，制作流程图。但是，电子白板的美观和自由度远远超过 Figma，我现在的流程图和示意图都是通过 Excalidraw 和 Canvas 完成的。\"]},{\"header\":\"Excalidraw\",\"slug\":\"excalidraw\",\"contents\":[\"Excalidraw 是一款开源免费的手绘风格画图应用，可以简单地制作美观漂亮的流程图、示意图和开发架构图等常用图片，也支持插入图片，是一款自由便捷的电子白板应用。Excalidraw 已被集成到各类白板应用中。\",\"不过，Excalidraw 没有中文手写字体，需手动修改，比如 Excalidraw 官方版添加中文手写字体，Obsidian 中文手写体设置，网页端中文手写字体配置。\",\"手绘样例\"]},{\"header\":\"Canvas\",\"slug\":\"canvas\",\"contents\":[\"Canvas（画布）是所有 UI 组件的「容器」。一个场景中，可以允许多个 canvas 对象存在，也允许 canvas 之间进行「嵌套」使用。需要注意的是，场景中的任何一个 UI 对象，都必定是某个 canvas 对象的「子级」。我最常用的是 Obsidian 和秒笔的 Canvas 功能：\",\"Obsidian Canvas：可以将图片、视频、文本、网页、文件和 Excalidraw 聚合在一起，并建立连接线和分组。\",\"Obsidian canvas 样例\",\"秒笔白板：支持聚合图片、文本、表格、清单、看板和 Excalidraw，但根据作者回复，妙笔的连接线和分组功能会在 2023 的下半年才摆上开发计划。\"]},{\"header\":\"获取页面 logo\",\"slug\":\"获取页面-logo\",\"contents\":[\"一些页面图标路径是隐藏的，无法在前端获取，可以使用 ImageAssistant 扩展提取页面所有图片，或者通过搜索引擎搜索，获取网站提交给搜索引擎的 logo 图片。\",\"如果获取的图标较小，可以使用 waifu2x 进行最大降噪，然后多次放大 logo。其他放大算法会令 logo 变化，而 waifu2x 不会改变原图。\",\"如果图标 svg 不符合要求，可以使用 SVG-edit 进行简单编辑。\"]},{\"header\":\"Eagle\",\"slug\":\"eagle\",\"contents\":[\"Eagle 非常适合管理图片素材。其优势之一是去重，我的素材库有几十万个文件，无法一个个清理，但导入 Eagle 就可以去除重复素材。\",\"Eagle 导入流程：搜索文件夹中的 ZIP/RAR 文件，确认全部解压。\"]},{\"header\":\"字体\",\"slug\":\"字体\",\"contents\":[\"字体是海报的灵魂，直接影响传播效果。商务性海报中，推荐使用阿里妈妈数黑体。另外，主标题不要使用纯黑色，建议使用 #1F2937。\",\"以下是我常用的几种字体：\",\"阿里巴巴普惠体 2.0：简称「Alibaba PuHuiTi 2.0」，免费可商用，覆盖中英文。\",\"阿里妈妈数黑体：简称「Alimama ShuHeiTi」，数黑体为中文简体字库，适用于电商、广告、品牌形象、推广物料等场景。\",\"思源字体：简称「Source Han Sans」，这是比较规规矩矩的一款字体，谷歌出品。用在商务风 PPT，或者是用在正文中，阅读效果都很赞。\",\"FOT-MatissePro：原本为 EVA 的常用日语字体，也支持大部分的繁体。\",\"优设标题黑：简称「YouSheBiaoTiHei-2」，以黑体字型为基础，整体字形沉稳，同时采用较大字面和粗壮的笔画来强化力量感。每个字体水平倾斜 8° 的设计，赋予了字体极强的速度感，为了让字体倾斜后也能保持稳固，设计师将整体字身设定宽扁。而起笔和弯钩上独具匠心的尖角设计，不仅突显了设计的几何感，而且方便后期修改。\",\"优设好身体：简称「YSHaoShenTi-2」，一款亲和力、现代感极强的专业美术标题字体。它以圆体字型为基础，通过瘦高的字面、偏向几何的曲线，让整宽字体富有亲和力和时尚感。在同样的面积里，更窄的字面就意味着能容纳更多的信息，所以这款字体非常适用在需要体现亲和力与时尚感的各类品牌宣传广告和产品包装设计的标题上。\",\"851 手书体：851 手書き雑フォント，虽为日系字体但覆盖了大部分的中英文，是以硬笔为主的手写字型，我喜欢用在 Excalidraw。\",\"濑户体：简称「SetoFont」，是一款偏可爱风的字体，支持简体中文、繁体中文、日文。\",\"杨任东竹石体：手写字体，简称为「YRDZST」。\",\"得意黑字体：非手写字体，但用在 Excalidraw 也不错。\",\"锐字真言体：简称「Zhenyan」，真言体笔触浑厚有力，笔画曲折有度，字形个性鲜明，刚柔并济，落笔简洁有序，给人以遒劲有力、端正凝练的感受。直角与圆角的错落搭配使得字体婉转有度，落落大方，具有自己独到的风格！这款字体特别适用于文字标题、竞技视觉、广告设计、个性品牌设计推广、企业宣传及时尚品牌的设计应用。\",\"字体格式建议 OTC > OTF > TTC > TTF，如果只在 Windows 平台使用，TTC/TTF 体验更佳。如果您是一名设计师并进行大量的印刷设计，您可以使用 Adobe 软件进行大量工作。在这种情况下，建议使用 OTF 字体，因为 .otf 是 基于 postscript(类似于 PDF) 并由 Adobe 开发。OTF 格式还提供了更多风格的替代方案和字距调整选项，设计师可能会觉得这些 选项有用。如果您使用 MS Ofce 进行大量工作时，建议使用 TTF 字体，因为 .ttf 是由 Microsoft 和 Apple 开发的。例如：您只能将.ttf 字体嵌入到 MS Word 和 MS PowerPoint 中，而不能嵌入 .otf 字体。\"]}]},\"/deploy/Cloudflare.html\":{\"title\":\"Cloudflare\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"官方文档：Cloudflare Docs\",\"Cloudflare 云端代理后，能帮加速国内访问国外网站的速度。比如，notion 的个人博客用 Cloudflare 代理，原本速度很慢，使用 Cloudflare 后加速明显。\",\"但 Cloudflare 免费计划不支持单独子域名托管，需要完整域名托管。\"]},{\"header\":\"反向代理\",\"slug\":\"反向代理\",\"contents\":[\"Cloudflare Workers 反向代理不适合 google 和 cloudflare cdn 网站，其他网站大都可以。\"]},{\"header\":\"镜像整个网站\",\"slug\":\"镜像整个网站\",\"contents\":[\"// 替换成你想镜像的站点 const upstream = \\\"www.youtube.com\\\"; // 如果那个站点有专门的移动适配站点，否则保持和上面一致 const upstream_mobile = \\\"www.youtube.com\\\"; // 你希望禁止哪些国家访问 const blocked_region = [\\\"RU\\\"]; // 禁止自访问 const blocked_ip_address = [\\\"0.0.0.0\\\", \\\"127.0.0.1\\\"]; // 替换成你想镜像的站点 const replace_dict = { $upstream: \\\"$custom_domain\\\", \\\"//www.youtube.com\\\": \\\"\\\", }; //以下内容都不用动 addEventListener(\\\"fetch\\\", (event) => { event.respondWith(fetchAndApply(event.request)); }); async function fetchAndApply(request) { const region = request.headers.get(\\\"cf-ipcountry\\\").toUpperCase(); const ip_address = request.headers.get(\\\"cf-connecting-ip\\\"); const user_agent = request.headers.get(\\\"user-agent\\\"); let response = null; let url = new URL(request.url); let url_host = url.host; if (url.protocol == \\\"http:\\\") { url.protocol = \\\"https:\\\"; response = Response.redirect(url.href); return response; } if (await device_status(user_agent)) { upstream_domain = upstream; } else { upstream_domain = upstream_mobile; } url.host = upstream_domain; if (blocked_region.includes(region)) { response = new Response( \\\"Access denied: WorkersProxy is not available in your region yet.\\\", { status: 403, } ); } else if (blocked_ip_address.includes(ip_address)) { response = new Response( \\\"Access denied: Your IP address is blocked by WorkersProxy.\\\", { status: 403, } ); } else { let method = request.method; let request_headers = request.headers; let new_request_headers = new Headers(request_headers); new_request_headers.set(\\\"Host\\\", upstream_domain); new_request_headers.set(\\\"Referer\\\", url.href); let original_response = await fetch(url.href, { method: method, headers: new_request_headers, }); let original_response_clone = original_response.clone(); let original_text = null; let response_headers = original_response.headers; let new_response_headers = new Headers(response_headers); let status = original_response.status; new_response_headers.set(\\\"access-control-allow-origin\\\", \\\"*\\\"); new_response_headers.set(\\\"access-control-allow-credentials\\\", true); new_response_headers.delete(\\\"content-security-policy\\\"); new_response_headers.delete(\\\"content-security-policy-report-only\\\"); new_response_headers.delete(\\\"clear-site-data\\\"); const content_type = new_response_headers.get(\\\"content-type\\\"); if (content_type.includes(\\\"text/html\\\") && content_type.includes(\\\"UTF-8\\\")) { original_text = await replace_response_text( original_response_clone, upstream_domain, url_host ); } else { original_text = original_response_clone.body; } response = new Response(original_text, { status, headers: new_response_headers, }); } return response; } async function replace_response_text(response, upstream_domain, host_name) { let text = await response.text(); var i, j; for (i in replace_dict) { j = replace_dict[i]; if (i == \\\"$upstream\\\") { i = upstream_domain; } else if (i == \\\"$custom_domain\\\") { i = host_name; } if (j == \\\"$upstream\\\") { j = upstream_domain; } else if (j == \\\"$custom_domain\\\") { j = host_name; } let re = new RegExp(i, \\\"g\\\"); text = text.replace(re, j); } return text; } async function device_status(user_agent_info) { var agents = [ \\\"Android\\\", \\\"iPhone\\\", \\\"SymbianOS\\\", \\\"Windows Phone\\\", \\\"iPad\\\", \\\"iPod\\\", ]; var flag = true; for (var v = 0; v < agents.length; v++) { if (user_agent_info.indexOf(agents[v]) > 0) { flag = false; break; } } return flag; } \"]},{\"header\":\"镜像网站指定目录\",\"slug\":\"镜像网站指定目录\",\"contents\":[\"// 你要镜像的网站。 const upstream = \\\"objectstorage.ap-seoul-1.oraclecloud.com\\\"; // 镜像网站的目录，比如你想镜像某个网站的二级目录则填写二级目录的目录名，镜像 google 用不到，默认即可。 const upstream_path = \\\"/test/\\\"; // 镜像站是否有手机访问专用网址，没有则填一样的。 const upstream_mobile = \\\"objectstorage.ap-seoul-1.oraclecloud.com\\\"; // 屏蔽国家和地区。 const blocked_region = [\\\"\\\"]; // 屏蔽 IP 地址。 const blocked_ip_address = [\\\"0.0.0.0\\\", \\\"127.0.0.1\\\"]; // 镜像站是否开启 HTTPS. const https = true; // 文本替换。填你要镜像的网站 const replace_dict = { $upstream: \\\"$custom_domain\\\", \\\"//objectstorage.ap-seoul-1.oraclecloud.com\\\": \\\"\\\", }; // 以下保持默认，不要动 addEventListener(\\\"fetch\\\", (event) => { event.respondWith(fetchAndApply(event.request)); }); async function fetchAndApply(request) { const region = request.headers.get(\\\"cf-ipcountry\\\").toUpperCase(); const ip_address = request.headers.get(\\\"cf-connecting-ip\\\"); const user_agent = \\\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36\\\"; let response = null; let url = new URL(request.url); let url_hostname = url.hostname; if (https == true) { url.protocol = \\\"https:\\\"; } else { url.protocol = \\\"http:\\\"; } if (await device_status(user_agent)) { var upstream_domain = upstream; } else { var upstream_domain = upstream_mobile; } url.host = upstream_domain; if (url.pathname == \\\"/\\\") { url.pathname = upstream_path; } else { url.pathname = upstream_path + url.pathname; } if (blocked_region.includes(region)) { response = new Response( \\\"Access denied: WorkersProxy is not available in your region yet.\\\", { status: 403, } ); } else if (blocked_ip_address.includes(ip_address)) { response = new Response( \\\"Access denied: Your IP address is blocked by WorkersProxy.\\\", { status: 403, } ); } else { let method = request.method; let request_headers = request.headers; let new_request_headers = new Headers(request_headers); new_request_headers.set(\\\"Host\\\", url.hostname); new_request_headers.set(\\\"Referer\\\", url.hostname); let original_response = await fetch(url.href, { method: method, headers: new_request_headers, }); let original_response_clone = original_response.clone(); let original_text = null; let response_headers = original_response.headers; let new_response_headers = new Headers(response_headers); let status = original_response.status; new_response_headers.set(\\\"access-control-allow-origin\\\", \\\"*\\\"); new_response_headers.set(\\\"access-control-allow-credentials\\\", true); new_response_headers.delete(\\\"content-security-policy\\\"); new_response_headers.delete(\\\"content-security-policy-report-only\\\"); new_response_headers.delete(\\\"clear-site-data\\\"); const content_type = new_response_headers.get(\\\"content-type\\\"); if (content_type.includes(\\\"text/html\\\") && content_type.includes(\\\"UTF-8\\\")) { original_text = await replace_response_text( original_response_clone, upstream_domain, url_hostname ); } else { original_text = original_response_clone.body; } response = new Response(original_text, { status, headers: new_response_headers, }); } return response; } async function replace_response_text(response, upstream_domain, host_name) { let text = await response.text(); var i, j; for (i in replace_dict) { j = replace_dict[i]; if (i == \\\"$upstream\\\") { i = upstream_domain; } else if (i == \\\"$custom_domain\\\") { i = host_name; } if (j == \\\"$upstream\\\") { j = upstream_domain; } else if (j == \\\"$custom_domain\\\") { j = host_name; } let re = new RegExp(i, \\\"g\\\"); text = text.replace(re, j); } return text; } async function device_status(user_agent_info) { var agents = [ \\\"Android\\\", \\\"iPhone\\\", \\\"SymbianOS\\\", \\\"Windows Phone\\\", \\\"iPad\\\", \\\"iPod\\\", ]; var flag = true; for (var v = 0; v < agents.length; v++) { if (user_agent_info.indexOf(agents[v]) > 0) { flag = false; break; } } return flag; } \"]},{\"header\":\"镜像网站带密码访问\",\"slug\":\"镜像网站带密码访问\",\"contents\":[\"// 替换成你想镜像的站点 const upstream = \\\"google.com\\\"; // 如果那个站点有专门的移动适配站点，否则保持和上面一致 const upstream_mobile = \\\"m.google.com\\\"; // 密码访问 const openAuth = false; const username = \\\"username\\\"; const password = \\\"password\\\"; // 你希望禁止哪些国家访问 const blocked_region = [\\\"RU\\\"]; // 禁止自访问 const blocked_ip_address = [\\\"0.0.0.0\\\", \\\"127.0.0.1\\\"]; // 替换成你想镜像的站点 const replace_dict = { $upstream: \\\"$custom_domain\\\", \\\"//google.com\\\": \\\"\\\", }; function unauthorized() { return new Response(\\\"Unauthorized\\\", { headers: { \\\"WWW-Authenticate\\\": 'Basic realm=\\\"goindex\\\"', \\\"Access-Control-Allow-Origin\\\": \\\"*\\\", }, status: 401, }); } function parseBasicAuth(auth) { try { return atob(auth.split(\\\" \\\").pop()).split(\\\":\\\"); } catch (e) { return []; } } function doBasicAuth(request) { const auth = request.headers.get(\\\"Authorization\\\"); if (!auth || !/^Basic [A-Za-z0-9._~+/-]+=*$/i.test(auth)) { return false; } const [user, pass] = parseBasicAuth(auth); return user === username && pass === password; } async function fetchAndApply(request) { if (request.method === \\\"OPTIONS\\\") // allow preflight request return new Response(\\\"\\\", { status: 200, headers: { \\\"Access-Control-Allow-Origin\\\": \\\"*\\\", \\\"Access-Control-Allow-Headers\\\": \\\"*\\\", \\\"Access-Control-Allow-Methods\\\": \\\"GET, POST, PUT, HEAD, OPTIONS\\\", }, }); if (openAuth && !doBasicAuth(request)) { return unauthorized(); } const region = request.headers.get(\\\"cf-ipcountry\\\").toUpperCase(); const ip_address = request.headers.get(\\\"cf-connecting-ip\\\"); const user_agent = request.headers.get(\\\"user-agent\\\"); let response = null; let url = new URL(request.url); let url_host = url.host; if (url.protocol == \\\"http:\\\") { url.protocol = \\\"https:\\\"; response = Response.redirect(url.href); return response; } if (await device_status(user_agent)) { upstream_domain = upstream; } else { upstream_domain = upstream_mobile; } url.host = upstream_domain; if (blocked_region.includes(region)) { response = new Response( \\\"Access denied: WorkersProxy is not available in your region yet.\\\", { status: 403, } ); } else if (blocked_ip_address.includes(ip_address)) { response = new Response( \\\"Access denied: Your IP address is blocked by WorkersProxy.\\\", { status: 403, } ); } else { let method = request.method; let request_headers = request.headers; let new_request_headers = new Headers(request_headers); new_request_headers.set(\\\"Host\\\", upstream_domain); new_request_headers.set(\\\"Referer\\\", url.href); let original_response = await fetch(url.href, { method: method, headers: new_request_headers, }); let original_response_clone = original_response.clone(); let original_text = null; let response_headers = original_response.headers; let new_response_headers = new Headers(response_headers); let status = original_response.status; new_response_headers.set(\\\"access-control-allow-origin\\\", \\\"*\\\"); new_response_headers.set(\\\"access-control-allow-credentials\\\", true); new_response_headers.delete(\\\"content-security-policy\\\"); new_response_headers.delete(\\\"content-security-policy-report-only\\\"); new_response_headers.delete(\\\"clear-site-data\\\"); const content_type = new_response_headers.get(\\\"content-type\\\"); if (content_type.includes(\\\"text/html\\\") && content_type.includes(\\\"UTF-8\\\")) { original_text = await replace_response_text( original_response_clone, upstream_domain, url_host ); } else { original_text = original_response_clone.body; } response = new Response(original_text, { status, headers: new_response_headers, }); } return response; } addEventListener(\\\"fetch\\\", (event) => { event.respondWith( fetchAndApply(event.request).catch((err) => { console.error(err); new Response(JSON.stringify(err.stack), { status: 500, headers: { \\\"Content-Type\\\": \\\"application/json\\\", }, }); }) ); }); async function replace_response_text(response, upstream_domain, host_name) { let text = await response.text(); var i, j; for (i in replace_dict) { j = replace_dict[i]; if (i == \\\"$upstream\\\") { i = upstream_domain; } else if (i == \\\"$custom_domain\\\") { i = host_name; } if (j == \\\"$upstream\\\") { j = upstream_domain; } else if (j == \\\"$custom_domain\\\") { j = host_name; } let re = new RegExp(i, \\\"g\\\"); text = text.replace(re, j); } return text; } async function device_status(user_agent_info) { var agents = [ \\\"Android\\\", \\\"iPhone\\\", \\\"SymbianOS\\\", \\\"Windows Phone\\\", \\\"iPad\\\", \\\"iPod\\\", ]; var flag = true; for (var v = 0; v < agents.length; v++) { if (user_agent_info.indexOf(agents[v]) > 0) { flag = false; break; } } return flag; } \"]}]},\"/deploy/DNS.html\":{\"title\":\"域名 DNS 托管\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"国内访问为主的话，域名建议备案后托管在国内厂商。之前试过 Cloudflare，光域名解析就用了 500 ms，换回阿里云后速度稳定许多。\",\"DNS 迁移是在域名管理商处修改。比如我的域名是在阿里云购买，试过 DNS 迁移到 Cloudflare，之后再次迁移 DNS，需要回到阿里云操作。\",\"如果阿里云的安全验证一直被卡住，可以换个浏览器，比如 Firefox。\",\"子域名可以使用 NS 记录，托管到其他域名服务商。但 Cloudflare 不支持单独子域名托管。\",\"域名 DNS 服务器修改（阿里云）：https://help.aliyun.com/document_detail/121648.html\"]}]},\"/deploy/GitHub.html\":{\"title\":\"GitHub\",\"contents\":[{\"header\":\"GitHub Actions\",\"slug\":\"github-actions\",\"contents\":[\"GitHub Actions 是一个持续集成和持续交付 (CI/CD) 平台，可用于自动执行构建、测试和部署管道。您可以创建工作流程来构建和测试存储库的每个拉取请求，或将合并的拉取请求部署到生产环境。将 GitHub Actions 命令保存为 main.yml，放于 .github\\\\workflows 目录下，repo 发生指定调节的改变时，Actions 会自动运行。[1]\",\"GitHub Actions 官方市场\",\"Awesome Actions\",\"如果 GitHub Actions 命令中有涉及密码等私密信息，则进入项目仓库的「Settings」>「Secrets and variables」>「Actions」，添加密钥进行加密处理。比如新建密钥 PERSONAL_TOKEN，Actions 命令中使用 ${{ secrets.PERSONAL_TOKEN }} 来指代该密钥。\"]},{\"header\":\"不同仓库间复制\",\"slug\":\"不同仓库间复制\",\"contents\":[\"复制文件到目的地，文档没变化则不会执行。案例为将当前仓库 main 分支下 docs 的 README.md 文件复制到另一个仓库 rockbenben/LearnData/ 路径下，如果目标路径存在相同文件，则将覆盖。如果让 clean: true 生效，Actions 会将目标路径情况，然后执行复制。\",\"此动作需按 Creating a personal access token 建立个人访问令牌，勾选权限「repo Full control of private repositories」，然后将该 token 值其保存在项目仓库的 Action 密钥。\",\"- name: Copy file uses: andstor/copycat-action@v3 with: personal_token: ${{ secrets.PERSONAL_TOKEN }} src_path: docs/README.md dst_path: / dst_owner: rockbenben dst_repo_name: LearnData dst_branch: main src_branch: main #clean: true \"]},{\"header\":\"Actions 失败重试\",\"slug\":\"actions-失败重试\",\"contents\":[\"在 job 和 step 中使用 if 语句，只有满足条件时才执行具体的 job 或 step。[2]\",\"# 任务状态检查函数 success() # 当上一步执行成功时返回 true always() # 总是返回 true cancelled() # 当 workflow 被取消时返回 true failure() # 当上一步执行失败时返回 true \",\"first_step 会总是执行，second_step 需要上一步 first_step 执行成功才会执行，third_step 只有上一步 second_step 执行失败才执行。当 third_step 与 second_step 命令相同时，就可以达到失败重试的效果了。\",\"jobs: first_job: name: My first job runs-on: ubuntu-latest steps: - name: first_step if: always() - name: second_step if: success() - name: third_step if: failure() \"]},{\"header\":\"uses 版本号\",\"slug\":\"uses-版本号\",\"contents\":[\"uses: SamKirkland/FTP-Deploy-Action@4.3.1：uses 会指定此步骤运行 SamKirkland/FTP-Deploy-Action 存储库中的 4.3.1 版本。\",\"但有时 Actions 的版本不会这么快更新，又必须使用最新版，可以将版本号改为 branch name，比如 uses: SamKirkland/FTP-Deploy-Action@master。\"]},{\"header\":\"Git Commit\",\"slug\":\"git-commit\",\"contents\":[\"Commit message 远比你想象中的重要，它可以帮助你自动生成 Change log。在我最初的项目中，每次提交都写 update，这导致很难回溯，我也不知道更新了什么。建议新手全部按照 Conventional Commits 的规范来进行提交。\",\"<type>[optional scope]: <description> [optional body] [optional footer(s)] \"]},{\"header\":\"Type\",\"slug\":\"type\",\"contents\":[\"Type 用于说明 git commit 的类别，只允许使用下面的标识。[3]\",\"feat: 新特性或功能（feature）\",\"fix: 修复 bug\",\"docs: 文档更新（documentation）\",\"style: 代码风格或者组件样式更新（不影响代码运行的变动）\",\"refactor: 代码重构，不引入新功能和缺陷修复\",\"perf: 优化相关，比如提升性能、体验\",\"test: 增加测试\",\"chore: 构建过程或辅助工具的变动\",\"revert: 回滚到上一个版本\"]},{\"header\":\"Scope\",\"slug\":\"scope\",\"contents\":[\"Scope 用于说明 commit 影响的范围，比如 Controller、DAO、View 等等，视项目不同而不同。如果其中包含了多个 scope，可以使用 * 代替。\"]},{\"header\":\"Footer\",\"slug\":\"footer\",\"contents\":[\"如果当前代码与上一个版本不兼容，则 Footer 部分以 BREAKING CHANGE 开头，后面是对变动的描述、以及变动理由和迁移方法。[4]\",\"如果当前 commit 针对某个 issue，那么可以在 Footer 部分使用 Closes #265 关闭这个 issue。也可以在任意位置输入 #265，将 commit 与对应问题相关联。\"]},{\"header\":\"常见问题\",\"slug\":\"常见问题\",\"contents\":[]},{\"header\":\"GitHub 忽略指定文件\",\"slug\":\"github-忽略指定文件\",\"contents\":[\"项目路径新建一个命名为 .gitignore 的文件，将想要忽略的文件夹和文件写入 .gitignore 文件，换行分隔。\",\"比如要忽略 node_modules 文件夹，就直接在文件中输入 node_modules。\",\"了解 GitHub Actions↩︎\",\"最全总结，GitHub Action 自动化部署↩︎\",\"Git Commit 规范↩︎\",\"Commit message 和 Change log 编写指南↩︎\"]}]},\"/deploy/Static.html\":{\"title\":\"静态部署\",\"contents\":[{\"header\":\"静态托管\",\"slug\":\"静态托管\",\"contents\":[\"如果在国内静态资源库找不到所需的静态包，建议使用 npm i 命令将其下载到本地，然后部署到阿里云/七牛云的国内服务器上，以避免因 UNPKG 和 jsDelivr 等静态节点被屏蔽而导致网页样式显示出错。\",\"静态资源库：\",\"Staticfile CDN：国内维护最稳定的 CDN。\",\"字节 CDN：测速表现不错，缓存过期时间最长设置一年，而自 2022 年 3 月起，静态资源已不再更新。\",\"emoji 等可以使用静态资源库上的项目，比如 twemoji，上面有集成 png 图片。\"]},{\"header\":\"NPM 包\",\"slug\":\"npm-包\",\"contents\":[\"UNPKG：有墙风险且不稳定，默认为最新版本，无需 @latest 标签。 \",\"将静态文件发布为 npm 包，参考一分钟教你发布 npm 包。\",\"加速：在 npm 官方源中搜索包位置，然后使用前缀 https://unpkg.com/。\",\"NPM MIRROR：NPM 项目的国内镜像镜像，不能做静态托管用途。https://registry.npmmirror.com/项目名/版本号 可以看见项目的各种信息，但看不了里面的文件。\",\"UNPKG 镜像：有资源可以用服务器自建服务，反向代理 unpkg。 \",\"饿了么 CDN（已关）：国内唯一能用的 npm 镜像，2022.07.13 发现外部访问被拒绝。之前饿了么并没说支持对外，可能已经彻底取消了。使用饿了么 CDN 时，注意 https://npm.elemecdn.com/react@latest/ 需要时间更新，具体频率未知，可固定大版本号来获取更新 https://npm.elemecdn.com/react@^18/。\",\"GitHub：基于 GitHub 公共仓库的资源托管，资源不会失效，但有时需要根据 CDN 服务商而更换域名。 \",\"Statically：jsDeliver 的替代品，在中国大陆所有地区连接异常。\",\"jsDelivr（已墙）：速度最快，原本是最稳的，但域名暴雷后，经常断开，2022.06.01 彻底打不开。配合 Github action，更新后自动访问 jsdelivr CDN 缓存刷新链接，保持页面常新。刷新命令参考 curl https://purge.jsdelivr.net/gh/username/project/file。\",\"由于第三方托管过于不稳定，目前我使用自托管 oss.newzone.top。\"]},{\"header\":\"部署平台\",\"slug\":\"部署平台\",\"contents\":[\"Cloudflare：Pages 和 Workers 两类部署方式。 \",\"Workers：复制镜像网站，可直接访问，但反向代理稳定性成疑。\",\"Pages：部署简单，外网速度很快，但国内速度不稳，而且 page.dev 域名有时会被墙，可购买便宜的临时域名（一年）来解决该问题。\",\"Netlify：国内速度慢点，图片容易卡死，但还算稳定。\",\"Vercel：推荐使用 GitHub 账户登录，有可能需要绑定国外手机号（不支持 Voice）。2022.08.26，「*.vercel.app」域名被 DNS 污染，需要绑定自定义域名。\",\"AWS: 邮箱注册，不过需要信用卡认证。\",\"国内平台：Gitee、WuliHub、CODING，都需要实名认证。\"]},{\"header\":\"IPFS\",\"slug\":\"ipfs\",\"contents\":[\"IPFS 无需服务器就可建立静态网站，号称永不失效，但国内稳定性成疑问，实用性一般。IPFS 托管在一个网关上，并不会自动复制到所有网关。\",\"pinata 上传网站构建的目录文件夹，上传后，即可通过 IPFS Hash 访问。网站目录中必须有 index.html，否则网页中将显示网站目录。即使有 index.html，其他人在拥有 CID 后，可以通过 IPFS Desktop 来获取网站的完整目录。为确保私密性，建议只上传单文件。使用单文件 CID 视为单一网站，不可调用原目录中的文件。[1]\",\"上传 ipfs 到 pinata 之后，cloudflare 等其他网关不一定会完全复制文件，php 无法抓取加载，所以不建议使用 cloudflare 网关。\",\"cloudflare 接管 pinata 后，ipfs 域名需通过「pinata 托管」>「cloudflare DNS」>「cloudflare SSL」。如果中途将 DNS 指向 http://gateway.pinata.cloud 等非 cloudflare ipfs 网关域名，cloudflare SSL 证书将失效。即便把链接改为非加密的 http，pinata 依然会视之为无效链接而拒绝访问。\",\"对于文件较少且链接有效的域名，可按 Cloudflare IPFS 页面说明来设置 DNS，提交 IPFS 域名 30 分钟后，即可获取 SSL 证书。\",\"添加 CNAME 记录，将你的 IPFS 域名 xxx.example.com 指向 cloudflare-ipfs.com。\",\"_dnslink.xxx.example.com 设置为 dnslink=/ipfs/<your_ipfs_hash_here>。\"]},{\"header\":\"GitHub 同步到 VPS\",\"slug\":\"github-同步到-vps\",\"contents\":[\"代码、文章推送到 GitHub 后，会自动生成可访问的网页，但国内访问 GitHub Pages 的速度极不稳定，为了确保网站能被正常访问，必须增加国内的访问节点。\",\"很多人选择 Gitee Pages 作为国内节点，GitHub Actions 将新文档同步到 Gitee，生成位于国内的静态页面 Gitee Pages。但是，Gitee Pages 的限制非常多，免费版无法自定义域名，必须实名验证，更别提近期的下架风波。因此，我没选 Gitee，而是把文档同步到国内服务器（域名需备案）。\",\"!> 注意：文件夹不要有大写字母，否则同步时容易出错。\"]},{\"header\":\"同步到 FTP\",\"slug\":\"同步到-ftp\",\"contents\":[\"如果你有 FTP 服务器，可使用 FTP-Deploy-Action 将 github 代码推送到服务器上。Actions 步骤参考 GitHub 说明。\",\"on: push name: 🚀 Deploy website on push jobs: web-deploy: name: 🎉 Deploy runs-on: ubuntu-latest steps: - name: 🚚 Get latest code uses: actions/checkout@v3 - name: 📂 Sync files uses: SamKirkland/FTP-Deploy-Action@4.3.3 with: server: ${{ secrets.ftp_host }} username: ${{ secrets.ftp_username }} password: ${{ secrets.ftp_password }} port: ${{ secrets.ftp_port }} # 建议更改默认的 21 端口 \",\"新建 FTP 时，需在云服务商的安全组和服务器上开放 FTP 端口，并临时暂停宝塔系统加固等安全插件（新建 FTP 容易与安全插件冲突）。\",\"如果出现 FTPError: 530 Login authentication failed，则说明 FTP 密码错误或账号不存在，需用 FileZilla 测试 FTP 的有效性。确认 FTP 无效后，检查 FTP 密码是否填写正确，是否只有大小写字母和数字。如果密码错误，则在 github secrets 重新 update 密钥。如果密码正确，则进入 /www/server/pure-ftpd/etc/pureftpd.passwd，检查是否有该 FTP 账户。没有 FTP 账户的话，暂停宝塔系统加固等安全插件后，重新新建 FTP。\",\"如果出现 Error: Timeout (control socket)，则说明同步服务器超时，可进入 Actions 页面点击右侧按钮「Re-run all jobs」，重新进行部署。如果错误连续出现，可以尝试关闭防火墙，测试是否 GitHub 服务器被拉黑了。\"]},{\"header\":\"SSH 同步\",\"slug\":\"ssh-同步\",\"contents\":[\"如果你有服务器的 SSH 权限，可以使用 web-deploy 以 SSH 同步方式发布页面。但与 FTP 相比，不确定安全性、速度、时间是否会区别。我尝试连接一直报错 Permission denied (publickey,password)。（有可能是服务器需要非 root 用户，adduser 一直加不上。）\",\"on: push name: Publish Website jobs: web-deploy: name: 🚀 Deploy Website Every Commit runs-on: ubuntu-latest steps: - name: 🚚 Get Latest Code uses: actions/checkout@v3 - name: 📂 Sync Files uses: SamKirkland/web-deploy@v1 with: source-path: docs/.vuepress/dist/ target-server: ${{ secrets.host }} remote-user: ${{ secrets.ssh_username }} private-ssh-key: ${{ secrets.SSH_KEY }} destination-path: ${{ secrets.destination_folder }} ssh-port: ${{ secrets.ssh_port }} # 建议更改默认的 22 端口 \",\"如果出现报错 error in libcrypto，说明 SSH 密钥错误，需要登陆服务器终端，运行以下命令。\",\"ssh-keygen -m PEM -t rsa -b 4096 cat id_rsa.pub >> authorized_keys cat id_rsa \"]},{\"header\":\"同步到 oss\",\"slug\":\"同步到-oss\",\"contents\":[\"如果没有服务器，可以把文件部署在云运营商的云存储上。比如用 aliyun-oss-website-action，将 repo 文件 build 成网站文件，然后同步到阿里云 oss 并运行网站。\",\"name: deploy md to oss on: push: branches: [ \\\"main\\\" ] pull_request: branches: [ \\\"main\\\" ] jobs: build: runs-on: ubuntu-latest steps: # load repo to /github/workspace - uses: actions/checkout@v3 - name: Use Node.js uses: actions/setup-node@v3 with: node-version: '14.x' # 打包文档命令 # - run: npm install yarn@1.22.4 -g # - run: yarn install # - run: yarn docs:build #需要配合 yarn 的 package.json - name: aliyun-oss-website-action uses: fangbinwei/aliyun-oss-website-action@v1.3.0 with: accessKeyId: ${{ secrets.ACCESS_KEY_ID }} accessKeySecret: ${{ secrets.ACCESS_KEY_SECRET }} bucket: learndata-notes # use your own endpoint endpoint: oss-cn-shanghai.aliyuncs.com # 全目录上传 folder: . # 不上传的文件 exclude: | .github/ .gitattributes \",\"How to Easily Host a Website on IPFS↩︎\"]}]},\"/deploy/VPS.html\":{\"title\":\"服务器 VPS\",\"contents\":[{\"header\":\"环境部署\",\"slug\":\"环境部署\",\"contents\":[\"部署应用前，为服务器配置好包管理工具，以便节省部署时间。主流的前端包管理工具有 npm、yarn、pnpm、以及国内的镜像 cnpm、tyarn 等，这些包管理器都是基于 nodejs。\"]},{\"header\":\"包管理安装\",\"slug\":\"包管理安装\",\"contents\":[\"通过集成了 npm 的 Node.js 来安装 npm，然后执行 npm i 命令安装其他。\",\"全局安装 yarn 是 npm i yarn -g，pnpm 是 npm i pnpm -g。如果不想全局安装，则去除 -g。\"]},{\"header\":\"包管理源\",\"slug\":\"包管理源\",\"contents\":[\"包管理源的修改命令类似，将下方的 npm 替换 yarn 或 pnpm 即可修改包管理源。\",\"#查看源 npm config get registry #更换国内源 npm config set registry https://registry.npmmirror.com/ #换回默认源 npm config set registry https://registry.npmjs.org/ \"]},{\"header\":\"部署包\",\"slug\":\"部署包\",\"contents\":[\"npm、yarn 和 pnpm 的包安装及管理命令。\",\"#全局安装 npm i 包 -g yarn global add 包 pnpm add 包 -g #移除全局包 pnpm remove 包 --global #更新全局包 pnpm upgrade 包 --global #升级当前目录的依赖以确保你的项目只包含单个版本的相关包 #本方法能解决大部分的部署报错 npm i && npm update yarn && yarn upgrade pnpm i && pnpm up \"]},{\"header\":\"本地测试\",\"slug\":\"本地测试\",\"contents\":[\"有些静态文件不支持直接打开，可以用 anywhere 架构本地服务器来进行测试。\",\"# 安装静态服务 anywhere npm install anywhere -g # 进入静态页面存放目录，执行 anywhere anywhere -p 8081 \"]},{\"header\":\"服务器 ECS\",\"slug\":\"服务器-ecs\",\"contents\":[\"服务器系统为 Debian 11，配置包管理器 nodejs 和 yarn。[1]\",\"apt-get update # 从数据源更新软件包的列表，运行产生软件包数据库 apt-get install wget && apt-get install sudo # 安装 wget 和 sudo # 大版本升级必须先建立快照 apt-get upgrade # 更新所有软件包（慎用，不要用！）之前 CentOS 系统错误就是使用了 upgrade 命令。 # 新建用户，非 root 权限 adduser xxx # 为新用户设置密码 passwd xxx # 安装 Node.js 18 和 yarn curl -fsSL https://deb.nodesource.com/setup_18.x | bash - apt-get install -y nodejs sudo apt-get install yarn \",\"如果服务器的 Node.js 安装遇到问题，可以用宝塔面板的 Node.js 版本管理器来进行部署。\"]},{\"header\":\"网站重定向\",\"slug\":\"网站重定向\",\"contents\":[\"更改 nginx 配置后，nginx 重载配置后实现网站重定向。$1 表示第一个 () 内的正则匹配内容，$2 为第二个。[2]\",\"网站重定向\",\"#隐性链接跳转 location /xx1 {proxy_pass <https://xxx.com/;>} #404 前，将旧文章链接格式转为新的，使用绝对路径 location ^~ /p{ rewrite ^/p/(.*)$ https://newzone.top/posts/$1.html; } # huginn 设置中 location 添加 301 定向，兼容老路径链接 if ( $request_uri = \\\"/users/1/web_requests/21/guoke.xml\\\" ) { rewrite ^ http://xxx.com/users/1/web_requests/19/guoke.xml permanent; } #只匹配主页，将主页跳转为其中一个子页面 location = / { rewrite https://xxx.com/ permanent; } \"]},{\"header\":\"全新安装服务器\",\"slug\":\"全新安装服务器\",\"contents\":[\"安装宝塔面板。\",\"删除阿里云主机监控。\",\"service aegis stop #停止服务 chkconfig --del aegis # 删除服务 \",\"配置阿里云端口开放，导入安全规则。\",\"宝塔上修改默认账号密码，并修改登录 22 的默认 SSH 端口。如果开通了 FTP，修改 FTP 端口。\",\"选择「网站」>「添加站点」，将站点根目录放在 /www/wwwroot/xxx，同时新建数据库。\",\"上传全站文件并解压，然后按照安装提示重新安装一次，最后导入备份数据库。\",\"404.html 起效，宝塔网站配置文件中，删除 error_page 404 /404.html; 中的 #。\",\"SSL 证书设置，开启强制 HTTPS；PHP 版本；301 重定向；添加伪静态设置（metinfo 或其他网站后台有代码）。如果 301 设置失败，直接在「伪静态」配置中，放入跳转代码。\",\"服务器设置参考 NginxConfig 适合新手配置高性能、安全、稳定的 NGINX 服务器的最简单方法。\",\"ECS 宝塔设置优化：\",\"添加计划任务，定期释放内存，建议设置每天释放一次，执行时机为半夜，如：04:00。\",\"打开 Linux 工具箱添加 Swap。Swap 推荐与物理内存相同。\",\"安装 PHP 缓存扩展，尽量使用更高的 PHP 版本，另外安装 opcache(脚本缓存)、redis(内容缓存)、imagemagick、fileinfo、exif。\",\"Redis 优化，在/etc/sysctl.conf 中添加 net.core.somaxconn = 2048，然后终端运行 sysctl -p。\",\"防火墙白名单（自定义），如：添加 url 规则 ^/rss.php 到防火墙 URL 白名单，防止 rss 服务被屏蔽。\"]},{\"header\":\"服务器迁移\",\"slug\":\"服务器迁移\",\"contents\":[\"购买按量付费服务器。\",\"用服务器迁移中心 SMC 将旧服务器同步到临时服务器。\",\"将域名解析到临时系统，确定服务基本正常。\",\"对旧服务器先建立云盘快照，然后更换操作系统，进行全新部署。\",\"对比新旧服务器，确认配置正常。\"]},{\"header\":\"服务器网络\",\"slug\":\"服务器网络\",\"contents\":[\"服务器网络早期是按量付费，但随着访客数量增加，带宽压力变大，将宽带切换为固定流量，网站的打开速度明显变慢。为了减少服务器的带宽压力，可以使用 CDN 全站加速，让用户就近访问。\",\"使用 CDN 后，网站流量变得特别大，不清楚是不确定是网速响应带来的，还是由其他因素造成的。先使用一段时间来测试效果。\",\"配置说明：一个 CDN 只能为一个域名进行加速，加速的域名即为目标域名。\"]},{\"header\":\"网站设计\",\"slug\":\"网站设计\",\"contents\":[]},{\"header\":\"网站字体\",\"slug\":\"网站字体\",\"contents\":[\"网站为了提高访问速度并保持设计的一致性，通常会选默认字体。这导致网站设计难以突出重点。针对这点，我通常会修改网站的导航栏字体，将其从默认字体改为 思源黑体 - 粗。\",\"进入 iconfont‑webfont，输入导航栏内所有文字，并设置所需字体。\",\"点击「生成字体」后，在选中字体的下方，点击「本地下载」。\",\"将字体包上传到服务器，修改新字体的位置参数。\",\"在导航栏的 class 属性中添加 web-font。\"]},{\"header\":\"米拓\",\"slug\":\"米拓\",\"contents\":[\"早期的动态网站通过米拓开发的，记录：\",\"后台忘记密码，使用 Metinfo 米拓重置工具。\",\"metinfo 新版静态页会删除 index.html，后续都改用 index.php。\"]},{\"header\":\"常见问题\",\"slug\":\"常见问题\",\"contents\":[]},{\"header\":\"CPU 100%\",\"slug\":\"cpu-100\",\"contents\":[\"当服务器 CPU 或内存突然飙升 100% 时，依次排除当前运行进程，检查是否安装更新了插件、应用或服务。\",\"如果找不到原因，可以临时设置定期任务。每隔 3 小时重启一次 nginx/apache。有时重启不正常，因此重启命令后 10 秒，再启动一次 nginx/apache。\",\"/etc/init.d/nginx restart sleep 10s /etc/init.d/nginx start \"]},{\"header\":\"SSL 证书\",\"slug\":\"ssl-证书\",\"contents\":[\"如果 SSL 证书部署报错，可以按自动生成来部署。\",\"#证书设置修改 /www/server/panel/vhost/nginx if ($server_port !~ 443){ rewrite ^(.*) <https://www.xxx.com$1> permanent; } #证书修改 /www/server/panel/vhost/cert/ #证书位置 /www/server/panel/vhost/ssl \"]},{\"header\":\"CORS 跨域\",\"slug\":\"cors-跨域\",\"contents\":[\"POST 表单等操作需要涉及第三方 API，需要添加扩域域名，避免 CORS 报错。\",\" add_header Access-Control-Allow-Origin \\\"*\\\"; add_header Access-Control-Allow-Credentials \\\"true\\\"; add_header Access-Control-Allow-Methods \\\"GET, POST, OPTIONS\\\"; add_header Access-Control-Allow-Headers \\\"DNT,web-token,app-token,Authorization,Accept,Origin,Keep-Alive,User-Agent,X-Mx-ReqToken,X-Data-Type,X-Auth-Token,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range\\\"; add_header Access-Control-Expose-Headers \\\"Content-Length,Content-Range\\\"; \"]},{\"header\":\"数据库出错解决\",\"slug\":\"数据库出错解决\",\"contents\":[\"mysql 配置中 mysqld 在一行添加 innodb_force_recovery=4，数值可以 0-6，数值越大对数据库损害越大。正常启动 mysql 后，备份所有数据库和管理密码，并下载到本地。\",\"在宝塔的「数据库」中删除所有数据库，卸载并重装 mysql。\",\"重新导入数据库。\"]},{\"header\":\"piwik 手动升级\",\"slug\":\"piwik-手动升级\",\"contents\":[\"Matomo/Piwik 是免费的统计服务。有时无法使用自动安装包，需要手动升级。\",\"下载最新版应用，并解压到服务器。\",\"将原目录中的 config/config.ini.php 粘贴到新版中，然后就可以更新数据库进行升级了。\",\"选择「设置」>「系统」>「地理位置」，拖到页面底部，按页面要求下载 DBIP 包，并重命名保存为 /www/wwwroot/piwik/misc/DBIP-City.mmdb。\",\"通过包管理器方式安装 Node.js↩︎\",\"Nginx rewrite 设置↩︎\"]}]},\"/family/Coupon.html\":{\"title\":\"网购攻略\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"电商平台为了促进购买，有各种购物优惠，但领取优惠环节比较复杂，让人很容易忽略。为了避免这种情况，我把各平台的优惠攻略记录下来，方便查询。\"]},{\"header\":\"淘宝\",\"slug\":\"淘宝\",\"contents\":[\"当没有省钱卡和商品优惠券时，使用「一淘 app」下单，拿购物返利。\",\"购物节（618、双 11）的大额券，一定要凑满使用，凑单部分凑好后立即退掉。 \",\"大额券一般有 92 折，可以用于预购，但不能与省钱卡叠加。\",\"购物节日前一天的预购和节日当天，是最优惠时候。 \",\"商家在活动前说的保价，并不包含大额券，不用提前下单。\"]},{\"header\":\"拼多多\",\"slug\":\"拼多多\",\"contents\":[\"99 以上消费品，记得用拼多多的大额券，拼多多会员分享 3 个好友，即可任意领 99-20 券，大部分产品都适用。\",\"无门槛大额券 - 立减 50，有几率抢到的，同样需要分享，有需要可以试试。\"]},{\"header\":\"京东\",\"slug\":\"京东\",\"contents\":[\"京东极速版优惠券最多，注意在 app 中间领补贴。\"]},{\"header\":\"闲鱼\",\"slug\":\"闲鱼\",\"contents\":[\"下单电子类产品前，在闲鱼找找是否有全新转卖，一般比旗舰店便宜 20%。\"]},{\"header\":\"1688\",\"slug\":\"_1688\",\"contents\":[\"1688 上能找到很多品牌的代工厂，它们未贴牌或自家产品的品质不比大品牌差，但因为剥离了溢价，价格可以便宜不少。不过食品类需注意，代工厂的品质不等于贴牌！贴牌方要求的品质与代工厂的生产的品质不一定一致，原料、品控可能都会更改。[1]\",\"持续消耗类：擦手纸、一次性清洁布、各种清洁液、消毒液、一次性保鲜袋、垃圾网袋等。\",\"日用纺织品：袜子、内裤、秋衣、毛巾、T 恤等。此类产品多为基本款，不追求品质，只要简单舒适即可，剔除品牌溢价。\",\"日化类产品：棉签、发夹、皮筋、肥皂、卸妆纸、洗脸巾等。\",\"医疗防护类消耗品：口罩、一次性手套、防护服等。比如医用外科口罩，原本是 0.5，但阿里巴巴上宇安是 0.08，现在是 0.11-0.12。\",\"食品或食品包装：小零食、保鲜袋、咖啡挂耳包、食品储藏盒等。很多大品牌的零食都不是由品牌自己建厂生产的，而是交给第三方代工。因此，如果能循着线索找到代工厂，就有可能买到物美价廉的产品，参考手把手教你如何找 1688 代工厂天猫店半价买零食（附超全代工厂旗舰店链接）。\",\"数码科技小物：充电宝、TWS 耳机、充电头、充电线等。此类多只有核心功能，须不在意设计、品牌、细节体验。\",\"餐具和文具：餐具的品牌溢价非常高，文具也能获得批发价，即使是知名的进口文具，1688 上也能买到更低价格的正品。\",\"购买技巧：有的时候只需要一件，但是商家两件起发！这种时候选「代发下单」，可能稍贵一点点，但是一件就能发货！\"]},{\"header\":\"抢购辅助\",\"slug\":\"抢购辅助\",\"contents\":[\"Auto.js：免费版，不再更新。\",\"Auto.js Pro：已购买，但不支持淘宝等。\",\"八戒任务：按顺序完成多坐标点击，适用秒杀？\",\"冰狐智能辅助：自动构建脚本，需付费，未实际使用，较复杂\",\"喵惠助手：第三方辅助代拍，安全性未知。旧手机上抢购。用旧手机一直挂着。\",\"抢购助手脚本：网页 js 脚本，需搭配浏览器扩展 Tampermonkey。\"]},{\"header\":\"BP 模式\",\"slug\":\"bp-模式\",\"contents\":[\"BP 即 ByPass，是一键下单的链接，可以跳过商品页缓存、选择尺码规格、结算这一系列繁琐的步骤，直接进入订单确认页，最大限度减少操作和页面跳转带来的延时，为大家抢购带来最快的下单体验。\",\"手机端操作，可以把 BP 链接提前给淘宝/京东里面的好友或客服，到了点再进入下单。\",\"BP 链接均为移动链接，电脑上使用需要提前登录网页。BP 下单时，可以先不付款，先提交锁定订单，然后再支付选择分期方式。\",\"以京东 BP 链接为例：\",\"https://p.m.jd.com/norder/order.action?wareId=100033551654&wareNum=1&enterOrder=true，wareId=100012043978 中 100012043978 是商品 ITEM ID，Num=1 中 1 是购买数量。\"]},{\"header\":\"购物思考\",\"slug\":\"购物思考\",\"contents\":[\"优惠券、抢购除了是让你下单，也是为了让你成为平台的忠实用户。正如劳力辩证：当你对某事或某人投入了精力和劳力，你也会对他们有更高的评价。而抢购成功，会让人有种不可自拔的快感。\",\"1688「扫货」指南↩︎\"]}]},\"/family/Diet.html\":{\"title\":\"健康饮食\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"早餐：燕麦牛奶 + 坚果、桃李面包 + 鲜牛奶。\",\"坚果：每天 3 个纸核桃。\",\"午餐：沙拉 + 鸡蛋 + 白肉（鸡、鸭、鱼）。\",\"晚上：6 点停止进食，饿了吃苹果、沙拉、鸡蛋，鸡蛋只吃蛋白。\",\"16:8 断时法：每天 8 小时进食，8 点钟早餐，3 点后禁食。\"]},{\"header\":\"饮料\",\"slug\":\"饮料\",\"contents\":[\"现磨咖啡味道不错，每天用量需控制在 2 杯黑咖啡或 4 杯奶咖，相关数据参考适量喝咖啡对身体有哪些好处？。有时喝的频繁就比较折腾，考虑入手白咖啡，不过据传白咖啡糖分高，而且含反式脂肪酸。\",\"马来西亚的土特产，约有 100 多年的历史。白咖啡并不是指咖啡的颜色是白色的，而是采用特等 Liberia（利比里亚）、Arabica（阿拉比卡）和 Robusta（罗布斯塔）咖啡豆及特级的脱脂奶精原料，经中轻度低温烘焙及特殊工艺加工后大量去除咖啡碱，去除高温碳烤所产生的焦苦与酸涩味，将咖啡的苦酸味、咖啡因含量降到最低，甘醇芳香不伤肠胃，保留咖啡原有的色泽和香味，口感爽滑、纯正，颜色比普通奶咖更清淡柔和，呈现出淡淡的奶金黄色。\",\"夏天喝适合冷泡的绿茶、红茶、白茶、花茶等，而岩茶与普洱生茶冷泡就不容易好喝。[1] 蛮喜欢泰厨的花茶，有新鲜的香茅，但淘宝卖的花茶放了很多糖块。\"]},{\"header\":\"零食\",\"slug\":\"零食\",\"contents\":[\"炸 (烘烤)：烘烤预热－200 度，20 分钟，芝士鸡排 (胖)> 泰森上校鸡块> 鸡米花，炸鸡排、牛肉馅饼外面有面粉，不适合烘烤。\",\"安井肉丸：撒尿牛肉丸> 包心鱼丸> 仿墨鱼丸？>牛肉丸> 蟹味宝 + 鱼籽包。安井肉丸质量都不错，不过别买量贩装，这是不同种类。\"]},{\"header\":\"程序员延寿指南\",\"slug\":\"程序员延寿指南\",\"contents\":[\"程序员延寿指南:\",\"输入 \",\"固体：吃白肉（-11%~-3% ACM）、蔬果为主（-26%~-17% ACM），多吃辣（-23% ACM），多吃坚果（-27%~-4% ACM），少吃蛋黄（否则 +7% ACM/0.5 颗/天），中量碳水、多吃植物蛋白（-10% ACM），少吃超加工食物（-62%~-18%）\",\"液体：喝咖啡（-22%~-12% ACM），喝牛奶（-17%~-10% ACM），喝茶（-15%~-8% ACM），少喝或不喝甜味饮料（否则每天一杯 +7% ACM，+多巴胺），戒酒或每周 100g（纯酒精量 (g)=饮酒量 (ml)× 酒精浓度 (%)× 酒精密度 0.8g/ml）内（否则+~50% ACM，无上限）\",\"气体：不吸烟（否则+~50% ACM，-12~-11 年寿命）\",\"光照：晒太阳（-~40% ACM）\",\"药物：二甲双胍（糖尿病人相比正常人可以 +3 年）、复合维生素（-8% 癌症风险）、亚精胺（-60%~-30% ACM）、葡萄糖胺（-39% ACM）\",\"输出 \",\"运动：每周 3 次 45 分钟挥拍运动（-47% ACM）\",\"日常：刷牙（-25% ACM）\",\"睡眠：每天睡 7 小时全因死亡率最低；且 22-24 点间最好，早睡 +43% ACM，晚睡 +15% ACM（存在争议）\",\"上下文 \",\"体重：减肥（-54% ACM）\",\"在发表在《细胞》杂志的综述文章中描述了长寿饮食，这是一种基于从食物成分和卡路里摄入等饮食各个方面研究的多支柱方法。研究人员报告说，理想情况下，一天的饭菜都在 11—12 小时的窗口内进行，允许每天禁食，每 3—4 个月进行为期 5 天的禁食也可能有助于降低胰岛素抵抗、血压和其他疾病风险因素。朗格描述了长寿饮食在现实生活中的样子：大量的豆类、全谷物和蔬菜；一些鱼;没有红肉或加工肉和极少量的白肉；低糖和精制谷物；一定量的坚果和橄榄油；一些黑巧克力。\"]},{\"header\":\"泡澡\",\"slug\":\"泡澡\",\"contents\":[\"浸泡 42℃ 以上的水温最多泡 3-5 分钟，40℃ 可以泡 10 分钟，37℃ 到 39℃ 的温水，可以泡 20-30 分钟。\",\"泡浴后的清水冲淋是有必要的，头发部位和面部用冷水冲淋则有极其良好的保健和延缓衰老的功效。\",\"泡浴作用：\",\"低温、长时间的泡浴 - 失眠、压力带来的疲劳。\",\"上班前或者重大活动前高温或者低温并且短时间的泡浴 - 打起精神。\",\"0-21°，收敛组织器官和神经系统--冷水浴。\",\"32-40°，舒缓、愉快 - 温水浴。\",\"32-42°，止痛、镇静，浴后无力需要休息 - 热水浴。\",\"全身浴：覆盖肩膀为主，温水 - 提高新陈代谢。\",\"半身浴：肚脐平齐，不增加心脏负担，30-40 分钟，慢慢发汗，上半身披毛巾或间断性加水 - 改善心脏功能，改善冷性体质，特别适合老年人。注意：39°，肚脐，30 分钟以上。\",\"坐浴：20 厘米高度的水平线，浸入腰椎、尾椎、臀部，15 分钟 - 痔疮、便秘、尿路感染、生殖系统护理。\",\"另外，饮酒后最好不要立即去洗澡，这很容易引发心血管病。洗澡时出现头晕、胸闷、眼花等“澡堂综合征”，也需立即停浴，到医院就诊。\"]},{\"header\":\"减肥食谱\",\"slug\":\"减肥食谱\",\"contents\":[\"使用食谱前，先需要养成正确的减重习惯和心态。\",\"不要让自己饿肚子，每天至少要吃 3 顿正餐。\",\"吃点心或正餐之前和之后都要喝一杯水，进食顺序按蔬菜> 鱼肉蛋> 主食\",\"饭后半小时不要坐下\",\"临睡前至少 1 小时停止用餐，并且要多喝水。\",\"每咬一口食物，都要咀嚼一段时间。从身体真正饱足到大脑产生饱足感需要 15 分钟。吃慢一点，就不容易吃得过多。\",\"每天称体重，然后找出 7 天的平均值。确保体重持续下降就好，不需要规定自己每周必须减掉多少体重。有时候体重可能会增加，尤其是女性在月经期间体内水分潴留，容易水肿，和你的饮食或锻炼习惯没有关系。\",\"每周只减掉 0.5-1 公斤。快速减肥会减掉肌肉，而不是脂肪，而且也很难长期维持体重。\",\"早餐\",\"午餐\",\"晚餐\",\"Day01\",\"谷物牛奶 (燕麦片 40g+ 全脂奶粉 40g+ 蛋白粉 5g+ 黑咖啡 2g)；12 粒巴旦木；苹果 200g\",\"什锦饭 (大米 30g+ 小米 30g+ 甜豌豆 15g+ 松子仁 5g+ 酱牛肉碎 30g+ 胡萝卜丁 30g)；蔬菜沙拉 (生菜 100g+ 熟鸡蛋 + 油醋汁半汤匙 4g)；猕猴桃 120g；无糖酸奶 100g\",\"燕麦米饭 (燕麦粒 20g+ 大米 15g)；油煮蘑菇鸡肉菠菜 (菠菜 200g+ 蘑菇 50g+ 鸡腿 40g+ 香油 1 汤匙 8g)；豆浆 (黄豆 50g)\",\"Day02\",\"全麦三明治 (生菜 70g+ 鸡蛋 + 全麦吐司 60g+ 香油 2g)；12 粒原味开心果；牛奶 250g\",\"双色菜花 (西兰花 100g+ 菜花 100g+ 香油 5g)；茄汁虾仁 (虾仁 75g+ 番茄酱 30g+ 油 8g)；二米饭 (小米 30g+ 糙米 30g)；牛奶咖啡 (低脂奶粉 20g+ 黑咖啡 2g)(先吃一半菜花)\",\"木耳小白菜杂煮 (小白菜 150g+ 北豆腐 60g+ 鸡心 60g+ 黑木耳 6g+ 香油 3g)；红豆紫米薏米粥 (紫红糯米 30g+ 薏米 15g+ 赤小豆 30g)；蜜橘 100g(加餐)\",\"Day03\",\"红豆紫米薏米粥 (紫红糯米 30g+ 薏米 15g+ 赤小豆 30g)；水煮蛋；果仁菠菜 (菠菜 80g+ 花生仁 10g+ 香油 3g)；牛奶咖啡 (低脂奶粉 20g+ 黑咖啡 2g)\",\"土豆沙拉 (土豆 200g+ 甜豌豆 30g+ 白芝麻 3g+ 鸡蛋 + 千岛酱 1 汤匙 8g)；酱卤鸭肝 60g；无糖酸奶 100g；10 粒小番茄\",\"燕麦小米粥 (燕麦片 30g+ 小米 30g+ 小麦胚芽 10g)；蒸虾皮小油菜 (小油菜 180g+ 虾皮 5g+ 全麦粉 30g+ 花椒油 3g)；烤鸡腿 80g\",\"Day04\",\"奶香醪糟燕麦 (醪糟 100g+ 燕麦片 30g+ 全脂奶粉 40g)；鸡蛋；12 粒巴旦木\",\"紫菜蛋花汤 (海苔 4g+ 熟芝麻 1g+ 鸡蛋)；牛奶燕麦 (燕麦片 20g+ 全脂牛奶 250g)；酸奶 100g；小叶橘 150g；全麦吐司 30g\",\"火腿木耳煮油菜 (油菜 250g+ 木耳 10g+ 方火腿 60g+ 香油 1 汤匙 8g)；蒸红薯 180g；无糖酸奶 (酸奶 100g+ 蛋白粉 5g)(先吃油菜)\",\"Day05\",\"蒸食物套餐 (铁棍山药 80g+ 糯玉米带轴 150g+ 胡萝卜半根 100g)；奶香黄豆浆 (黄豆 20g+ 黑芝麻 5g+ 全脂奶粉 20g)；鸡蛋羹 (鸡蛋 + 香油 2g)；桂圆 150g\",\"冲杂粮糊 (烤红豆粉 15g+ 燕麦粉 20g+ 小米粉 15g+ 全脂奶粉 10g)；生菜沙拉 (生菜 150g+ 千岛酱 10g)；酸奶 200g；蓝莓 100g；葡萄干 10g\",\"坚果土豆泥 (土豆 250g+ 烤花生碎 12g+ 方火腿 70g)；油煮木耳小白菜 (小白菜 200g+ 木耳 6g+ 香油 4g)；酸奶 100g\",\"Day06\",\"香蕉燕麦蛋糕 (香蕉 120g+ 燕麦片 30g+ 鸡蛋 + 牛奶 200g)；核桃仁拌豌豆苗 (豌豆苗/鸡毛菜 100g+ 核桃仁 15g+ 芝麻油 4g)\",\"鸡腿炖四宝 (鸡腿肉 100g+ 鲜蘑 80g+ 黄花菜 10g+ 甜豌豆 80g+ 木耳 10g)；银耳西兰花 (西兰花 200g+ 银耳 8g+ 香油 4g)\",\"炖素三鲜 (冬笋 80g+ 香菇 10g+ 黄豆芽 120g+ 香油半汤匙 4g)；清蒸鱼 (蒸鲈鱼 120g+ 花生油 4g)；烤红薯 250g(按序食用)\",\"Day07\",\"苹果全麦煎饼 (苹果肉 180g+ 全麦粉 20g+ 葡萄干 3g+ 全脂奶粉 10g+ 油 3g)；麦胚红枣豆浆 (烤黄豆 15g+ 烤黑芝麻 8g+ 大枣肉 10g+ 熟小麦胚芽 10g)\",\"生菜鸡蛋沙拉 (生菜 200g+ 鸡蛋*2+ 千岛沙拉酱 8g)；麦胚红枣豆浆 (烤黄豆 15g+ 烤黑芝麻 8g+ 大枣肉 10g+ 熟小麦胚芽 10g)；酸奶 150g；猕猴桃 120g\",\"甘薯红米饭 (红薯 100g+ 红米 20g+ 白米 20g)；牛肉炖菜 (牛肉 100g+ 香菇 8g+ 胡萝卜 40g+ 魔芋粉丝 20g)；果仁菠菜 (菠菜 200g+ 花生仁 8g+ 香油 4g)\",\"Day08\",\"全麦面包 70g；牛奶 240g；水煮鸡蛋；桂圆 120g；9 粒巴旦木\",\"油煮木耳小白菜鸡 (小白菜 25g+ 卤水豆腐 100g+ 鸡心 50g+ 黑木耳 2g+ 香油 3g)；炖素三鲜 (冬笋 40g+ 香菇 4g+ 黄豆芽 20g+ 香油 2g)；蒸红薯 200g；去皮小叶橘 200g\",\"杂粮糊 (烤红豆粉 13g+ 燕麦粉 13g+ 小米粉 13g+ 脱脂奶粉 4g)；火腿木耳煮油菜 (油菜 100g+ 木耳 5g+ 方火腿 75g+ 香油 5g)；无糖酸奶 130g\",\"Day09\",\"香蕉燕麦蛋糕 (香蕉 120g+ 燕麦片 50g+ 鸡蛋 + 牛奶 240g)；15 粒开心果\",\"燕麦小米浓粥 (燕麦片 25g+ 小米 13g+ 小麦胚芽 13g)；生菜沙拉 (生菜 200g+ 千岛酱 4g)；清蒸鱼 (蒸鲈鱼 80g+ 花生油 4g)；豆浆 (黄豆 44g)\",\"二米饭 (小米 38g+ 糙米 15g)；蒸虾皮小油菜 (小油菜 200g+ 虾皮 6g+ 全麦粉 10g)；茄汁虾仁 (虾仁 80g+ 番茄酱 10g+ 花生油 4g)；烤鸡腿肉 45g\",\"Day10\",\"苹果全麦煎饼 (苹果肉 105g+ 全麦粉 50g+ 葡萄干 3g+ 全脂奶粉 30g+ 油 3g)；鸡蛋羹 (鸡蛋 + 香油 2g)\",\"蒸土豆 (土豆 200g+ 方火腿 75g+ 花生碎 2g)；茄汁虾仁 (虾仁 80g+ 番茄酱 10g+ 花生油 3g)；猕猴桃 150g\",\"甘薯红米饭 (红薯 50g+ 红米 25g+ 白米 25g)；油煮木耳小白菜鸡 (小白菜 100g+ 卤水豆腐 50g+ 鸡心 50g+ 木耳 4g)；豆浆 (黄豆 30g)\",\"Day11\",\"谷物牛奶 (燕麦片 50g+ 全脂奶粉 30g+ 黑咖啡 2g)；鸡蛋；10 粒巴旦木；蜜橘 120g\",\"什锦饭 (大米 50g+ 小米 25g+ 甜豌豆 8g+ 松子仁 2g+ 酱牛肉碎 70g+ 胡萝卜丁 20g)；银耳西兰花 (西兰花 50g+ 银耳 4g+ 香油 4g)\",\"燕麦米饭 (燕麦粒 25g+ 大米 38g)；牛肉炖菜 (牛肉 50g+ 香菇 7g+ 胡萝卜 20g+ 魔芋粉丝 20g)；烤鸡腿肉 50g\",\"Day12\",\"奶香醪糟燕麦 (醪糟 69g+ 燕麦片 38g+ 全脂奶粉 30g)；果仁菠菜 (菠菜 150g+ 花生仁 3g+ 香油 3g)；鸡蛋羹\",\"土豆鸡蛋豌豆沙拉 (土豆 300g+ 甜豌豆 16g+ 白芝麻 3g+ 鸡蛋 + 千岛酱 4g)；牛肉炖菜 (牛肉 50g+ 香菇 4g+ 胡萝卜 20g+ 魔芋粉丝 20g+ 香油 2g)\",\"蒸食物套餐 (铁棍山药 100g+ 糯玉米带轴 300g+ 胡萝卜 20g)；油煮蘑菇鸡肉菠菜 (菠菜 50g+ 蘑菇 35g+ 鸡腿 50g+ 香油 5g)；无糖酸奶 120g\",\"Day13\",\"红豆紫米薏米粥 (紫红糯米 25g+ 薏米 25g+ 红小豆 13g)；蔬菜沙拉 (生菜 200g+ 熟鸡蛋 + 油醋汁 5g)；牛奶咖啡 (牛奶 240g+ 咖啡 2g)\",\"核桃仁拌豌豆苗 (豌豆苗/鸡毛菜 100g+ 核桃仁 8g+ 香油 3g)；烤红薯 200g；酱牛肉 70g；猕猴桃 150g\",\"麦胚红枣豆浆 (烤黄豆 30g+ 烤黑芝麻 16g+ 大枣肉 20g+ 熟小麦胚芽 20g)；清蒸鱼 (蒸鲈鱼 80g+ 花生油 2g)；果仁菠菜 (菠菜 150g+ 花生仁 2g+ 香油 1g)\",\"Day14\",\"鸡蛋生菜三明治 (生菜 150g+ 鸡蛋 + 全麦吐司 88g+ 香油 5g)；牛奶 240g\",\"鸡腿炖四宝 (鸡腿肉 50g+ 鲜蘑 35g+ 黄花菜 4g+ 甜豌豆 8g+ 木耳 4g)；燕麦米饭 (燕麦粒 25g+ 大米 25g)；葡萄干 25g\",\"双色菜花 (西兰花 50g+ 菜花 40g+ 油醋汁 2g)；茄汁虾仁 (虾仁 80g+ 番茄 10g+ 油 2g)；二米饭 (小米 38g+ 糙米 25g)；紫菜蛋花汤 (海苔 2g+ 鸡蛋*1)\",\"Day15\",\"红豆紫米薏米粥 (紫红糯米 25g+ 薏米 25g+ 赤小豆 13g)；核桃仁拌豌豆苗 (豌豆苗/鸡毛菜 75g+ 核桃仁 3g+ 香油 2g)；鸡蛋羹 (鸡蛋*1+ 香油 1g)；无糖酸奶 240g\",\"油煮木耳小白菜鸡 (小白菜 100g+ 卤水豆腐 100g+ 鸡心 50g+ 木耳 4g+ 油 5g)；二米饭 (小米 50g+ 糙米 25g)\",\"甘薯红米饭 (红薯 50g+ 红米 25g+ 大米 25g)；牛肉炖菜 (牛肉 50g+ 香菇 4g+ 胡萝卜 20g+ 魔芋粉丝 20g+ 油 5g)；烤鸡腿肉 50g\",\"Day16\",\"奶香醪糟燕麦 (醪糟 35g+ 燕麦片 38g+ 全脂奶粉 30g)；鸡蛋；蜜橘 120g\",\"蔬菜沙拉 (生菜 200g+ 鸡蛋 + 油醋汁 5g)；清蒸鱼 (蒸鲈鱼 80g+ 花生油 5g)；蒸土豆 300g\",\"油煮鸡肉蘑菇菠菜 (菠菜菜 100g+ 蘑菇 35g+ 鸡腿肉 75g+ 香油 5g)；蒸红薯 250g；豆浆 (黄豆 50g)\",\"Day17\",\"香蕉燕麦蛋糕 (香蕉 80g+ 燕麦片 50g+ 鸡蛋 + 牛奶 240g)\",\"粉蒸土豆鸡肉 (土豆 200g+ 鸡腿肉 50g+ 蒸肉米粉 5g+ 烤花生碎 3g)；双色菜花 (西兰花 50g+ 菜花 80g+ 油醋汁 3g)；酱牛肉 150g；猕猴桃 35g\",\"麦胚红枣豆浆 (烤黄豆 30g+ 烤黑芝麻 16g+ 大枣肉 20g+ 熟小麦胚芽 20g)；火腿木耳煮油菜 (油菜 100g+ 木耳 4g+ 方火腿 75g+ 香油 4g)\",\"Day18\",\"鸡蛋生菜三明治 (生菜 150g+ 鸡蛋 + 全麦吐司 88g+ 香油 3g)；奶香黄豆浆 (黄豆 13g+ 黑芝麻 3g+ 全脂奶粉 20g)\",\"杂粮糊 (烤红豆粉 13g+ 燕麦粉 13g+ 小米粉 13g+ 脱脂奶粉 2g)；油煮木耳小白菜鸡 (小白菜 150g+ 卤水豆腐 40g+ 鸡心 75g+ 木耳 4g+ 香油 5g)；苹果 150g\",\"蒸食物套餐 (铁棍山药 60g+ 糯玉米带轴 200g+ 胡萝卜 100g)；鸡腿炖四宝 (鸡腿肉 50g+ 鲜蘑 17g+ 黄花菜 2g+ 甜豌豆 4g+ 黄豆芽 10g)；生菜沙拉 (生菜 50g+ 千岛酱 4g)；无糖酸奶 130g\",\"Day19\",\"苹果全麦煎饼 (苹果肉 60g+ 全麦粉 50g+ 葡萄干 3g+ 全脂奶粉 20g+ 油 5g)；牛奶 240g\",\"土豆鸡蛋豌豆沙拉 (土豆 300g+ 甜豌豆 32g+ 白芝麻 2g+ 鸡蛋 + 千岛酱 4g)；茄汁虾仁 (虾仁 80g+ 番茄酱 2g+ 油 10g)\",\"燕麦小米浓粥 (燕麦片 13g+ 小米 38g+ 小麦胚芽 13g)；火腿木耳煮油菜 (油菜 100g+ 木耳 4g+ 方火腿 75g)；无糖酸奶 130g\",\"Day20\",\"蒸食物套餐 (铁棍山药 60g+ 糯玉米带轴 200g+ 胡萝卜 100g)；紫菜蛋花汤 (海苔 2g+ 鸡蛋*1)；果仁菠菜 (菠菜 100g+ 花生仁 3g+ 香油 3g)\",\"炖素三鲜 (冬笋 40g+ 香菇 17g+ 黄豆芽 20g+ 香油 3g)；牛肉炖菜 (牛肉 50g+ 香菇 4g+ 胡萝卜 10g+ 魔芋粉丝 20g)；燕麦米饭 (燕麦粒 25g+ 大米 50g)；烤鸡腿肉 50g\",\"什锦饭 (大米 38g+ 小米 25g+ 甜豌豆 8g+ 松子仁 3g+ 酱牛肉碎 70g+ 胡萝卜丁 20g)；银耳西兰花 (西兰花 25g+ 银耳 4g+ 香油 2g)\",\"Day21\",\"谷物牛奶 (燕麦片 50g+ 全脂奶粉 30g+ 黑咖啡 2g)；鸡蛋；桂圆 120g\",\"油煮鸡肉蘑菇菠菜 (菠菜菜 100g+ 蘑菇 70g+ 鸡腿肉 50g+ 香油 5g)；烤红薯 200g；猕猴桃 150g；无糖酸奶 130g\",\"粉蒸土豆鸡肉 (土豆 100g+ 鸡腿肉 50g+ 蒸肉米粉 5g+ 烤花生碎 2g)；茄汁虾仁 (虾仁 80g+ 番茄酱 10g+ 油 1g)；二米饭 (小米 25g+ 糙米 13g)；核桃仁拌豌豆苗 (豌豆苗/鸡毛菜 75g+ 核桃仁 5g+ 香油 2g)\",\"以上食谱整理自范志红老师的《吃出好身材－21 天营养食谱》，侵权删。\",\"食谱注意：\",\"晚餐时补充复合 B 族维生素药片，乳糖敏感者可以将纯牛奶换成低乳糖奶。\",\"蒸蛋羹可以用水煮蛋替代；鸡心、鸭肝、方火腿可以用鸡腿肉、酱牛肉替换；什锦饭中的酱牛肉碎换成炒鸡丁；松子仁可以换成熟芝麻或开心果碎；小叶橘可以替换成等量其他甜度低的新鲜水果，如草莓或半个苹果等；桂圆可以换成其他自己爱吃、吃了之后胃肠舒服的应季水果，比如橘子、橙子、猕猴桃等。水果可以午饭前一小时食用。\",\"小米、燕麦提前浸泡半小时到一小时再和大米一起煮口感较好。如果没有杂粮粉，可以直接用这些杂粮煮成饭，每次煮多一点，分成几份冷冻起来，每次蒸热吃一份。\",\"食谱部分可进行微调，如果不会做，可直接按原料食用。\",\"冷泡茶和热茶放凉，好喝级别能一样吗？↩︎\"]}]},\"/family/HomeAutomation.html\":{\"title\":\"智能家居\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"智能家居是家庭自动化最基础的一部分。之前一直偷懒直接用米家，但当我想把传感器与电脑联接起时，就开始了研究 Home Assistant 和 Node-RED。\"]},{\"header\":\"Home Assistant\",\"slug\":\"home-assistant\",\"contents\":[\"Home Assistant 是开源的家庭自动化平台，可自定义集中管理各品牌的智能家居设备。\",\"Home Assistant 原生支持的米家设备较少，需要使用 hacs 下的集成 Xiaomi Miot Auto。默认 Docker 容器不带 hacs，需要手动部署。\",\"下载 hacs，将其解压到 Home Assistant 配置的 config\\\\custom_components\\\\hacs 文件夹下。\",\"重启 Home Assistant 容器后，在集成中搜索 hacs，安装时按要求提供 github 账户授权。\",\"选择「HACS」>「集成」>「浏览并下载存储库」，下载 Xiaomi Miot Auto 并重启 Home Assistant 容器。[1]\",\"Home Assistant 虽然一直被吹得很厉害，但即时性的传感器可能不能及时触发，使用时需要注意这点。\",\"对于人体传感器、门磁、无线开关类设备，它们的状态通常为瞬时状态 (即：事件)，部分型号支持获取最后一次事件触发的时间，且默认轮询时长为 15 秒，对于无法获取最后触发事件的设备，即使修改轮询时间到 1 秒，也可能无法获取正确的状态。因此此类设备通过本插件集成后不太推荐用于触发实时自动化，仅适合作为如几分钟无人移动关灯这类自动化的条件。如果需要实时更新状态，推荐使用多模网关配合 XiaomiGateway3 集成。[2]\"]},{\"header\":\"Node-RED\",\"slug\":\"node-red\",\"contents\":[\"Node-RED 是本地版的 IFTTT，能与 Home Assistant 打通，实现本地化的互联。新手推荐 node-red 的入门教程集合。\",\"部署 Node-RED 时，Node-RED 对存储文件夹的读写权限要求较高，Docker 部署的话需修改 data 的文件夹权限，为避免麻烦，我给了最高权限 chmod 777 /volume1/docker/nodered/data。\",\"Node-RED 上安装 node-red-contrib-home-assistant-websocket。 \",\"选择「设置」>「节点管理」>「控制板」>「安装」，点击右侧刷新按钮，加载节点目录，第一次加载要比较长时间，不用关闭网页。\",\"搜索并安装「node-red-contrib-home-assistant-websocket」。\",\"选择「Home Assistant」>「HACS」>「集成」>「浏览并下载存储库」，下载 Node-RED Companion。\",\"选择「Home Assistant」>「配置」>「设备与服务」>「集成」，添加集成 Node-RED Companion，然后重启 Home Assistant 容器。\",\"进入 nodered 页面，配置 home assistant websocket，点击右上角的部署。[3]\"]},{\"header\":\"常用节点\",\"slug\":\"常用节点\",\"contents\":[\"inject: 定时启动，周期性触发执行。\",\"call service：改变智能设备状态，比如开灯。 \",\"Domain：触发方式\",\"Service：触发命令\",\"Device：设备与服务\",\"Entity：设备执行模块\"]},{\"header\":\"自动化场景\",\"slug\":\"自动化场景\",\"contents\":[\"记录主卧关灯时间，默认其为睡眠时间，但实际关掉是关电源，不会在智能后端记录。或者用明暗度测试记录，每天最后暗的时候，记录为睡眠时间。\",\"书房检测到没人时，对电脑发送暂停视频的快捷键。这步卡在硬件，需要有个硬件能被 Node-RED 识别并给电脑发送按键。\"]},{\"header\":\"智能硬件\",\"slug\":\"智能硬件\",\"contents\":[]},{\"header\":\"Zigbee2MQTT\",\"slug\":\"zigbee2mqtt\",\"contents\":[\"Zigbee2MQTT 是开源的智能网关，支持大部分的智能设备。其辐射范围更大，能同时联接 200 个设备，它的插网线版更稳定不易掉线。\",\"不过，我的设备都是米家系，暂时用不到开源网关，等买了其他品牌的设备，再考虑 Zigbee2MQTT。\"]},{\"header\":\"智趣盒子\",\"slug\":\"智趣盒子\",\"contents\":[\"智趣盒子集成了 Home Assistant 和 Node-RED 的 Docker，Home Assistant 能部署 Addons、supervisor，能直接插开源网关。\",\"盒子基于 arm 的 linux 的 debian 系统上运行 docker，在 docker 的基础上构建了 supervisor 版本，跟 homeassistant 开发官方的 hassos 的最大差异就是打开了 root 的权限，可以在底层进行操作。这些比较适合国内的使用环境（网络改善，装第三方工具等）.\",\"不过与 NAS 相比，智趣这类硬件盒子同样是 Docker 容器，除了能直连网关和想象中的简便攻略，并没什么其他优势。\"]},{\"header\":\"其他硬件\",\"slug\":\"其他硬件\",\"contents\":[\"远程键盘控制器：基于易微联的第三方产品，手机通过 APP 远程控制电脑按键，不过只能按一个按键或者连续 6 个的自定义键值。不确定是否支持 HA。\",\"MQTT 转 usb 虚拟键盘鼠标注入器：通过 wifi 来控制，店家不清楚 HA。\",\"从零开始，基于群晖轻松玩转开源 homeassistant 智能家居前期搭建↩︎\",\"为什么设备状态会有延迟？如何减小延迟？↩︎\",\"树莓派 HomeAssistant 系列（四）NodeRed 安装配置↩︎\"]}]},\"/family/Life.html\":{\"title\":\"生活窍门\",\"contents\":[{\"header\":\"个人护理\",\"slug\":\"个人护理\",\"contents\":[]},{\"header\":\"理发\",\"slug\":\"理发\",\"contents\":[\"电推子理发：先用 1.5 号限位器铲平两边和后面，然后用 9 号限位器从后向前修整头发（包括刘海），最后用 6 号限位器修理过渡区域。\",\"不要从前向后理发，否则限位器不起作用，头发都被推平。\",\"短发方案：限位器分别使用 1.5、6 和 4.5。\"]},{\"header\":\"衣物\",\"slug\":\"衣物\",\"contents\":[\"色彩：全身上下衣服的颜色不要超过 3 种，喜欢色彩饱和度偏低的颜色。单纯的黑白灰容易显得单调、路人。​\",\"图案：单一主题，小图案不要太大、条纹对齐不繁杂。横条纹显高显瘦，竖条纹相反。​[1]\",\"T 恤：250g 32 支的纯棉面料，支数越高，面料就越柔软、越强韧 ​。\",\"5 分裤：不要七分裤或太宽松，裤长放在膝盖上方 5-10 厘米处。\"]},{\"header\":\"妙用\",\"slug\":\"妙用\",\"contents\":[]},{\"header\":\"磁铁\",\"slug\":\"磁铁\",\"contents\":[\"铷磁铁或强磁铁在生活中有许多用途，如：整理线材，吸附窗帘，悬挂物品，密封。\",\"磁铁使用方便，不留痕迹，比小夹子有用。\"]},{\"header\":\"小众记录\",\"slug\":\"小众记录\",\"contents\":[]},{\"header\":\"玻璃自爆\",\"slug\":\"玻璃自爆\",\"contents\":[\"2022.06.11 更换阳台 90*90 的弧形玻璃，要价 1100。\",\"阳台玻璃自爆后，即使玻璃没碎也要及早拆下来，否则有可能发生事故。拆旧玻璃前，需要清理下方停放的车辆，并暂时不让行人通行。拆好后，如果掉落碎玻璃较多，可以拿包烟让环卫工人帮忙清理。\",\"新玻璃未到之前，可以拿大的硬纸板挡住缺口，不要用薄膜遮掩，会被吸走。\"]},{\"header\":\"花洒水小\",\"slug\":\"花洒水小\",\"contents\":[\"手持花洒尾部与软管的连接处，有节水止逆阀。\",\"如果家里水压不足时，拆下节水止逆阀后安装花洒，可以解决花洒出水不足问题。\"]},{\"header\":\"网线更换\",\"slug\":\"网线更换\",\"contents\":[\"客厅网络连接不稳定，加上原本装修的网线不好，想着把埋在墙里的网线都更换掉，就搜索「墙内网线更换」找到本地的服务商询价，准备把埋在墙里的网线都升到 7 类，但对方说超六和七类的网线都比较粗，很难拉进管道，可能会拉到一半给卡住。6 类线据传可以稳定支持 2.5Gbps/5Gbps 网络；在特定布线环境下，最大可支持 10Gbps 传输速率。\",\"师傅上门发现：除了客厅的 3 条网线是 6 类，其他房间都是超 5 类，可以上千兆，但不算稳定；管道里线特别多，无法更换网线。另外，单口网口面板改为双网口，需要连两根网线。\",\"平层户型换线报价（包含 6 类网线，6 类水晶头及人工）：网线能不能换。只能我们工作人员，上门查看来确认。确认没法换的，只收上门费 100 元。可以换的话。换首根 6 类网线 380 元。每增加 1 根收取 140 元。管道里包含 10 米，超出的每米 12 元。客户需要管道外面延长网线的，每米 12 元。除复式和大型场所外，绝大多数情况是超不过 10 米。 实际付费：上门维修就是按户计算，不管问题大小都是 300 起。我原本的问题不大，所以让他把家里的网线全部检查了遍，替换坏掉的水晶头和网口面板，最终费用是 430.\",\"网线情况：客厅 TV，客厅沙发（2 条网线，一条放在电话线下），客卧床头，客卧 TV，主卧床头，主卧 TV，书房书桌。书房备用网口更换面板后，依然不能使用，可能是线断了，不再使用。\",\"无线方面，我闲鱼买了个二手路由，与原本的华硕路由进行 有线 mesh 组网。AiMesh 主路由连接 LAN 口，节点路由连接 WAN 口。\",\"横纹衣服更显胖？你可能一直都弄错了↩︎\"]}]},\"/family/Maintenance.html\":{\"title\":\"维修/保养\",\"contents\":[{\"header\":\"牛皮席\",\"slug\":\"牛皮席\",\"contents\":[\"平时隔一段脏了用温水毛巾擦就可以了，如果流汗很多的话，可以用淡肥皂水擦拭后再用清水毛巾擦。不宜暴晒，可以傍晚的阳光晾晒。\",\"秋天收藏之前，用淡肥皂水湿毛巾彻底清洁牛皮席表面，然后再用清水擦干净，在阳台晾晒一天后，可以卷也可以折起打包起来收藏，也可以直接垫在床上，上面再铺被子使用。\"]},{\"header\":\"升降桌\",\"slug\":\"升降桌\",\"contents\":[\"升降桌报错时，长按向下键，桌子会逐渐复位到最低，然后恢复正常。\"]},{\"header\":\"通马桶\",\"slug\":\"通马桶\",\"contents\":[\"塑料袋套在马桶搋或马桶刷，把塑料袋绑好。一插到底，快速抽动。多套上几个，尽量把它弄得比马桶的口大一点点哦。因为塑料袋在前面能起到一个遮挡的作用，快速的抽动它会形成一股冲击，从而达到快速的疏通马桶的作用。\",\"如果使用下方的疏通器，也在疏通头上绑好塑料袋，在气口位置撕开个小口，最后按通气开关。\",\"疏通器说明 1\",\"疏通器说明 2\"]},{\"header\":\"林内锅炉\",\"slug\":\"林内锅炉\",\"contents\":[\"左侧为冬季采暖模式，地暖模式下温度设置在 45—55℃，原则上不超过 60℃。因为地暖管道是塑料的，如果温度太高，那么会影响到采暖管的使用寿命，还会导致锅炉内壁结垢。\",\"燃气壁挂炉配备有手动注水/补水阀，当运行过程中，采暖系统压力下降至 1bar 以下时 (因水中气体蒸发等原因引起)，用户应慢慢打开此阀对系统进行补水增压，直到系统压力恢复到规定的水压为止，一般在静态常温下，系统应保持 1bar 左右，工作时水压应保持在 1bar~1.5bar 之间，补水过程中请不要离开现场。\"]},{\"header\":\"锅炉补水\",\"slug\":\"锅炉补水\",\"contents\":[\"先检查采暖系统中是否有漏水的地方，确认系统完全密闭。\",\"关闭燃气壁挂炉，切断电源。\",\"逆时针（向左）旋紧注水/补水阀约一周，听到有“呲”的声音。\",\"观察操作面板上的水压表，当水压表指针在 1bar~1.5bar 之间时，顺时针（向右）旋转注水/补水阀手柄关闭注水/补水阀。\",\"开机运行燃气壁挂炉。\",\"注意事项：\",\"注水时，必须切断燃气壁挂炉总电源，以免因接头漏水而导致漏电;\",\"补水结束后必须将注水/补水阀旋紧关闭，否则燃气壁挂炉将过压溢水;\",\"如果您补水时不小心将采暖系统内的水压补到 3bar 左右，安全阀会泄水，所以再次提示您安全阀必须用接管与地漏连接，且中间不许有阀门。\"]},{\"header\":\"地暖温控器\",\"slug\":\"地暖温控器\",\"contents\":[\"地暖温控器 1\",\"地暖温控器 2\"]}]},\"/family/Medical.html\":{\"title\":\"医疗药品\",\"contents\":[{\"header\":\"自身健康\",\"slug\":\"自身健康\",\"contents\":[\"尿素乳膏：柔软皮肤，防止干裂，深层滋润。\",\"维 a 酸乳膏：更新表皮，去除角质，避光只能晚上用。\",\"壬二酸：疏通毛孔堵塞，改善黑头。需建立耐受，遵循 SCT 法则：从短时间到长时间，每天每次 5-10 分钟递增；刚开始涂抹，可以在脸上停留 5-10 分钟后立即清水清洗掉，然后继续下一步护肤步骤，第二天时间拉长到 20 分钟，以此类推，直到在面部停留超过 1-2 小时以上无不适，可以尝试过夜。\",\"黑头：白天用壬二酸（5 分钟），晚上用维 a 酸。\"]},{\"header\":\"维生素\",\"slug\":\"维生素\",\"contents\":[\"维生素：维生素 B 和 C 国内非常便宜，几元一瓶。但其他维生素国内只有保健品，价格严重虚高，优先考虑国外购买。\",\"护眼：叶黄素，玉米黄质，Lutemax® 2020 万寿菊花提取物。\",\"补钙：吃钙片要同时补充维他命 D 和维他命 K。钙本身是无法直接被身体吸收的，维他命 D 的作用是运输，带动钙元素在血液中流动。但光流动不行，需要给钙找个目标，才能把钙变成骨骼。所以就需要维他命 K，维他命 K 的作用则是把血钙转化为骨钙，让钙元素真正沉积在骨骼上。D 和 K 相结合，才能最大程度地提升钙的吸收率。\"]},{\"header\":\"看病技巧\",\"slug\":\"看病技巧\",\"contents\":[\"如果在网上挂不到专家的号，可以尝试电话联系科室问一下能不能当天加号，有的专家是允许加号的，只不过可能会加到当天比较晚的时候，出检查结果的时候专家就下班了。[1]\",\"如果对自己病情没有很多了解的话，建议早上空腹去，以免抽不了血。如果对自己要做的检查有大致了解的话，建议查一下注意事项，提前做好准备，比如做核磁共振身上不要带金属，女生最好穿无钢圈无挂钩的 bra，比如散瞳后不要驾驶等等。\",\"人这一生中还是得常见病的概率大，没必要迷信主任医师。建议首次看病不必找资历太高的医生，如果你的病真的到了需要找老大夫看看的地步，年轻大夫会领着你去找的。\",\"上午看病的人多，下午少，周一多，周五少，尽量避开周一上午。刮风下雨是看病的最佳时机，雨越大，人越少。[2]\",\"不用迷信主任，要是真有大病，年轻大夫会领着你去找的……↩︎\",\"“为了您和家人的健康，请不要在星期一上午看病”，超实用看病指南↩︎\"]}]},\"/family/Shoppinglist.html\":{\"title\":\"购物清单\",\"contents\":[{\"header\":\"waiting list\",\"slug\":\"waiting-list\",\"contents\":[\"家电先看看闲鱼上是否有代下或代理商渠道，一般会有 5-8 折。\"]},{\"header\":\"NAS UPS\",\"slug\":\"nas-ups\",\"contents\":[\"随着 NAS 的硬盘越来越多，需配 UPS 防止突然断电造成的硬盘损失。\",\"NAS UPS 考虑入手 APC BK650M2-CH 和 山特（SANTAK）TG-BOX 850。\"]},{\"header\":\"电子书\",\"slug\":\"电子书\",\"contents\":[\"iPad 多用来看小说，而国产电子书基于安卓系统，满足小说的基本需求，墨水屏对研究也好，考虑用电子书代替 iPad。\",\"电子书要求：开放系统（能装第三方应用），支持蓝牙遥控器翻页。\"]},{\"header\":\"微单相机\",\"slug\":\"微单相机\",\"contents\":[\"微单准备入手索尼 a7m4，但疫情后，这个想法逐渐变淡，优先级调低。\",\"镜头：F 值越小，光圈越大，适合虚化背景。 \",\"腾龙 28-75mm F2.8 (日用旅行)\",\"索尼 FE 85mm F1.8 中远摄定焦镜头（人像）\"]},{\"header\":\"无线麦克风\",\"slug\":\"无线麦克风\",\"contents\":[\"RODE Wireless Go II VS. DJI Mic，罗德老牌且音质久经考验，而大疆涉及更新也更人性化，能轻松连接手机，但底噪会稍微大些。\",\"录音杂音多，需用软件去噪，或单独用一台手机收音，暂不考虑无线麦克风。\"]},{\"header\":\"书房\",\"slug\":\"书房\",\"contents\":[]},{\"header\":\"显示器\",\"slug\":\"显示器\",\"contents\":[\"书桌配了 3 台显示器。主显示器使用小米 27 寸 2K 165Hz，这款有点漏光，对日常使用影响不大。两边的显示器用 2012 年产的 DELL 2412M。显卡是 3080Ti，后续考虑 3 台都上 4K，使用 PPI（每英寸像素数）来衡量显示器的清晰度是更合理且更直观的方式。[1]\",\"使用不同的分辨率、刷新频率的显示器，对视觉和视力有影响吗？（我之前看到的说法是影响不大。） @jason 4K 舒服多了，绝对提升幸福度\",\"老的显示器多久需要更换？如何判断寿命到了？\",\"防蓝光灯放在屏幕上方，是否有用？\",\"DIY 显示器：\",\"直接买面板虽然便宜，但控制器为公版，没有厂家优化，显示效果打折扣。\",\"需要鉴别面板是不是新的。\",\"连续寄了两台都有问题，碎屏、不显示。\"]},{\"header\":\"键盘\",\"slug\":\"键盘\",\"contents\":[\"罗技 ERGO K860 无线蓝牙人体工学键盘，人体工学、无线，有手托。替换下来的海盗船机械键盘留着备用。\",\"机械键盘 ikbc c104、高斯 GS104D 销量高，办公类使用静音红轴。高斯品牌是国产，颜色多但营销比例过大。\"]},{\"header\":\"摄像头\",\"slug\":\"摄像头\",\"contents\":[\"摄像头品牌较多，但摄像头实际像素都只有 200w。比如罗技 C930 标称 1500w 像素售价 469，但这是软件算法提升的像素，实际像素仍只有 200w。\",\"性价比高的品牌有谷客、奥尼，高端款有影石 Insta360 Link（费用 1800，暂未下单）。\"]},{\"header\":\"书桌灯\",\"slug\":\"书桌灯\",\"contents\":[\"桌面使用米典众筹 400 的护眼读写灯，灯光级别为 AA 级，代替屏幕挂灯。\",\"有了书桌灯，就能关闭顶灯。当只有屏幕和桌面有亮光，其他区域处于黑暗情况下，就能精力做事了。\",\"后续希望能给书房多些色彩，会考虑 yeelight 灯带。\"]},{\"header\":\"升降桌\",\"slug\":\"升降桌\",\"contents\":[\"电动升降桌：乐歌 E4、京造或网易。\",\"升降桌范围在 0.6-1.2m，如果想站着阅读，可以添置阅读架。\"]},{\"header\":\"台机\",\"slug\":\"台机\",\"contents\":[\"2022.03.16 淘宝入手 DIY 台机 i7+3080ti，费用 16500。虽然价格贵了点，不过赶在疫情封控两个月前，用上新电脑。\",\"原本想入手联想 刃 9000K 2022（i7+3070ti，价格 14000），但一直无货。这款机箱由联想定制，散热更好，配置足够日常使用，另外还有品牌机售后优势。\",\"相比联想，入手的 DIY 电脑内存频率从 4400 升至 5200，显卡从 3070ti 升至 3080ti，性价比更高，而且是现货。\",\"如果使用悬挂主机托架，需考虑主机重量、升降桌承重。\"]},{\"header\":\"游戏手柄\",\"slug\":\"游戏手柄\",\"contents\":[\"游戏手柄：有线为主，否则价格高很多。不是客厅的话，也不需要无线手柄。\",\"山寨和廉价手柄的配置非常差，比如 360 度的摇杆可能只有 4 个方向。\",\"100-200 价位的，考虑 北通阿修罗 2、八位堂、致动 O。\",\"400+ 价位，以 XBOX SERIES 为主。\"]},{\"header\":\"3D 打印机\",\"slug\":\"_3d-打印机\",\"contents\":[\"3D 打印机原料和产生的气体会污染房间，不适合家中使用。如果偶尔需要打印，可以在网上找人定制。\"]},{\"header\":\"静电墙贴\",\"slug\":\"静电墙贴\",\"contents\":[\"@chen 出的绝妙主意，将静电墙贴当白板用，可以任意随时的记录。不过为用红色白板笔不好擦，准备试试 PVC 材质的静电墙贴。\"]},{\"header\":\"数码\",\"slug\":\"数码\",\"contents\":[]},{\"header\":\"降噪耳机\",\"slug\":\"降噪耳机\",\"contents\":[\"头戴降噪耳机 Bose700，因 2021.06.12 参加思苗婚礼，1300 入。降噪性能不错，但长时间带比较热，而且 899 出。\",\"freebuds studio(华为生态) < 1000xm4(20 年，降噪强，但有些翻车) < Bose 700(19 年，长期佩戴，但有人说这款不如旧款 QC 35 II？)。\",\"其他无线耳机体验：\",\"10 元：拼多多，通话凑合，但音乐非常烂，声音就像是从另一个世界传来的。\",\"50 元：倍思，通话和音乐都还行，但在地铁里几乎听不到声音。不知是不是习惯了降噪耳机，带普通耳机只能听到地铁的噪音。\",\"小度半入耳耳机很松，走路都容易掉；偶尔不能识别，必须放入电池仓重新充电\",\"悦虎 1562M 吹得很牛，但主要针对苹果。安卓听个响，选 QCY。\"]},{\"header\":\"多口充电器\",\"slug\":\"多口充电器\",\"contents\":[\"充电器长期使用后注意更换，老化后充电会变慢。\",\"氮化镓充电器，方便外出快冲，但适无延长线，如闪极 S90。\",\"不要买无品牌的廉价充电器，看起来参数和功能强大，但充电芯片质量也没保证，容易充电发热，影响设备寿命。\"]},{\"header\":\"健康\",\"slug\":\"健康\",\"contents\":[]},{\"header\":\"睡眠监测\",\"slug\":\"睡眠监测\",\"contents\":[\"健康监测中，我比较重视睡眠时间的监测。\",\"曾经用过 37 度睡眠监测带，但准确性不高，只能作为家庭自动化的触发器（起床自动拉开窗帘）。也考虑过换 Apple Watch 8/SE。可 Apple Watch 戴着就一定舒适吗？而且我的手机是安卓，适合 Apple Watch 安卓或 iPad 吗？\",\"健康手环用过小米手环、华为 GT 手表，但带着始终觉得不舒服，特别是天热流汗就更受不了。尝试换硅胶和金属表带，但没有改善。\",\"@木木：用过 Nike 的那个孔状的表带改善了，然后我用洗眼镜的超声波盒子每天洗表带汗藓情况进一步改善，于是我最后通过实验，每天用酒精消毒液洗表带\",\"@ZxoudXc：硅胶（最舒服的材质了） + 一点点风油精 不能说根治把。但是体感很爽，特别是在空调房里面。希望有帮助。\",\"目前换临时换为尼龙编织带，带起来相对无感，试一段时间。\"]},{\"header\":\"眼部按摩仪\",\"slug\":\"眼部按摩仪\",\"contents\":[\"严选眼部按摩仪噪音太大，但其他款也一般。要换的话，需选择蛋白皮，适合长期使用。\",\"倍轻松，睡眠模式只有热敷，带了天猫精灵。\",\"小米有品摩摩哒，不能关闭音乐，震动效果弱，气囊挤。\"]},{\"header\":\"泡脚桶\",\"slug\":\"泡脚桶\",\"contents\":[\"泡脚桶新款区别不大，比较特别的是蒸汽泡脚，但评价都一般。\",\"选择了传统的深桶，能漫过小腿。\"]},{\"header\":\"代餐\",\"slug\":\"代餐\",\"contents\":[\"代餐：无营养，不能起到减肥作用，减掉了肌肉。\"]},{\"header\":\"体重秤\",\"slug\":\"体重秤\",\"contents\":[\"华为体脂秤 2 Pro，太过敏感，经常不准确。\"]},{\"header\":\"椭圆机\",\"slug\":\"椭圆机\",\"contents\":[\"椭圆机的稳定性很重要，机身越重越好，普通重量只有 68KG，好的能到 86KG。飞轮一定要 12 KG，否则骑起来容易飘。\",\"按上面的标准，挑出斯诺德 E690 和迪卡侬 EL 900。\"]},{\"header\":\"家居\",\"slug\":\"家居\",\"contents\":[]},{\"header\":\"牛皮席\",\"slug\":\"牛皮席\",\"contents\":[\"牛皮席夏天睡着比较凉爽，不会因为出汗而沾黏皮肤，睡眠质量好很多。\",\"一开始买的无涂层，牛皮席上有很多瑕疵，换为更便宜的涂层款后就看不到瑕疵了。\"]},{\"header\":\"净水器\",\"slug\":\"净水器\",\"contents\":[\"RO 膜方案：纯水过滤，可直饮。缺点是 RO 膜出水慢；滤芯更换频繁（最快 1-3 月）；废水比无参考价值，反而消耗滤芯，但旗舰款都会根据水质自动调节。RO 膜机器体积更大，一定要量好厨柜尺寸。\",\"DIY 成品净水器：暂选陶氏，后期考虑国产，一年滤芯成本 500，选购参考的净水器：品牌与 DIY 之外的最强选择！，安装参考净水器 篇二：安装和使用你必须知道的那些事。安装师傅是让商家叫的鲁班到家，服务不错，下次准备家庭维修用这个给父母安排。\",\"美的白泽 1000G（2000），复合滤芯（2 年）299，RO 膜滤芯（5 年）999，只换滤芯每年成本 350。\",\"352 S130 (3800)，复合滤芯（1.5 年）259，RO 膜滤芯（3 年）799，只换滤芯每年成本 439。本款顶配，优势在陶氏滤芯，1200G 大通量，UV 消毒水龙头。\",\"352 K10 (2200)，复合滤芯（1.5 年）199，RO 膜滤芯（2.5 年）499，只换滤芯每年成本 330。\",\"超滤方案：保留矿物质（？），无需通电，大通量过滤，性价比高。缺点是不清楚滤芯更换时间，只能根据商家给的时间来判断。\",\"配置：立升 LU3B-5C + 爱惠浦 EF-900P (别要赠品，折现) + 爱惠浦滤头垡头 QL2U + 无铅水龙头。这是用了几年的方案，但随着立升的超幅涨价，超滤玩家的变少，越来越难以实现了。另外，配机时记得买好配件。比如买爱惠浦滤头垡头 QL2U 时，问清楚是几分进几分出。常用的两边都是 3 分口，要配 2 个 3 分进 2 分出的接头，方便接 2 分水管。接口是可以送的，要跟店家说送接口、水管。没送的话，可以自己买 1 根 5 米的 2 分 PE 管、1 个 4 分转 2 分的接头 (立升转爱惠浦)、2 个 3 分转 2 分的接头、1 个 2 分球阀。\",\"性价比：全套新机器配起来 1500，之后每两年更换 EF-900P 滤芯（350），每四年更换超滤 LU3B-5C 滤芯（600），只换滤芯每年成本 325，如果超滤全换每年成本 425。\",\"超滤净水示意图\"]},{\"header\":\"冰柜\",\"slug\":\"冰柜\",\"contents\":[\"与其他人不同，我想要冰柜只是冰箱放不下了。我喜欢买速冻包子、饺子，这类一买就得买很多包，否则价格高很多。换个思路，趁着优惠多买些速冻产品，冰柜的费用很快就回来了。我看中的是 135L 的卧式冰柜，价格 700，如果家里用不到了，扔起来也不会心疼。\",\"比起卧式冰柜，立式拿取方便，但分层后存储空间受限，没法放体积特别大的东西，比如大包的生鲜，整条的羊腿。立式占地虽小，但小的有限，容量相等的情况下，基本是 0.4 平和 0.5 平的区别，而且立式高度更高，容易影响视线。\"]},{\"header\":\"电熨斗\",\"slug\":\"电熨斗\",\"contents\":[\"挂烫机占位置用的少，放了多年，动力不足，熨不平衣服。高级挂烫机配有分熨台。\"]},{\"header\":\"晾衣杆\",\"slug\":\"晾衣杆\",\"contents\":[\"阳台的高度不够，不适合升降晾衣杆，而手动的不方便晾被子。\"]},{\"header\":\"消毒液\",\"slug\":\"消毒液\",\"contents\":[\"参考消毒剂选购不完全指南：\",\"84 消毒液：爱特福、龙安、蓝月亮、康威龙\",\"二氧化氯消毒片：星帮尼，二氧化氯消毒剂从安全性角度是高于含氯消毒剂的。 \",\"用于餐饮具、瓜果蔬菜等消毒时，有效二氧化氯成分的使用浓度 100–150mg/L，浸泡作用时间 10–20min。\",\"虽然二氧化氯目前被认为是对人体无毒害的成分，但为了保险起见，应及时用清水洗净残留消毒液才能继续使用。\",\"季铵盐消毒液：适用于处理衣物消毒，品牌推荐：康威龙、洛娃 \",\"不要将消毒液与洗衣液及柔顺剂同时使用，以免使各自的功效减弱。清洁、消毒是两个独立的过程，建议先洗干净再进行消毒，消毒效果更佳。\"]},{\"header\":\"代买\",\"slug\":\"代买\",\"contents\":[\"欧莱雅 (LOREAL) 卓韵霜特润双膏染发霜 5.35 金红褐浅棕色\",\"欧舒丹蜡菊赋颜精华霜，法国 650\",\"欧舒丹紧致眼霜，法国 390\"]},{\"header\":\"小物\",\"slug\":\"小物\",\"contents\":[\"能面具 (树脂)，带眼镜不方便使用。\",\"宝工（Pro'sKit）NT-309-C 智慧型非接触式感应电笔 测电笔 验电笔\",\"内裤清洗机\",\"洗杯器：一按就能清洗杯子，非常方便，可惜需要水槽有多余的出水口。[2]\",\"选择合适自己的显示器↩︎\",\"Room Tour ｜新家的厨房里有什么？↩︎\"]}]},\"/services/Docker.html\":{\"title\":\"Docker\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"Docker 是一个开源的应用容器引擎，可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。借助 Docker，您可以与管理应用程序相同的方式来管理基础架构。简单点说，用 Docker 你不懂太多代码知识，直接用其他人的打包容器，小白也可以部署复杂的服务应用。\",\"Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来管理多个 Docker 容器，并配置应用程序需要的所有服务。在配置文件中，所有的容器通过 services 来定义，然后使用 docker-compose 脚本来启动，停止和重启应用，和应用中的服务以及所有依赖服务的容器，非常适合组合使用多个容器进行开发的场景。强烈推荐使用 Compose 搭建所有 Docker，流程参考 NAS 上搭建 Docker。\"]},{\"header\":\"Docker 命令\",\"slug\":\"docker-命令\",\"contents\":[\"Docker 使用查看 Docker — 从入门到实践。\",\"列出所有容器：sudo docker ps -a。\",\"停止容器运行：sudo docker stop <CONTAINER ID/NAME>。部分容器名有可能无法识别，最好在容器名称中添加数字。\",\"删除指定容器：sudo docker rm <CONTAINER ID/NAME>，删除前需先停止容器。\",\"清理容器（慎重）：sudo docker system prune -a，用于清理磁盘，删除关闭的容器、无用的数据卷和网络，以及无 tag 和没使用的镜像。\",\"清理数据卷（慎重）：sudo docker volume prune，关闭的容器数据卷会被删除，有可能破坏有用数据，需极度谨慎。\",\"导出容器中的 mysql 数据库 sudo docker exec <container_id> mysqldump -u root -p<your_mysql_root_password> your_database_name > <output_file>。将 <container_id> 替换为实际的容器 ID，将 <output_file> 替换为你想要保存导出文件的路径和文件名。请将 <your_mysql_root_password> 替换为你的 MySQL root 用户密码。完成后，你将得到一个 MySQL 数据库备份文件。比如导出 Huginn 数据库，sudo docker exec 3de3058e4468 mysqldump -u root -p<your_mysql_root_password> huginn_production > /volume1/docker/huginn/backup.sql。\"]},{\"header\":\"定制 Docker 镜像\",\"slug\":\"定制-docker-镜像\",\"contents\":[\"官方镜像并不总是符合我们的需求。因此，我们可以使用 docker commit 命令按需定制自己的镜像，具体操作见使用 docker commit 将修改后的容器保存为镜像及其使用注意事项。\",\"例如：\",\"sudo docker commit \\\\ --message \\\"基于 Ubuntu 18.04 构建的 Huginn\\\" \\\\ ubuntu \\\\ huginnxubuntu:1.0 \",\"我们也可以使用 Dockerfile 来构建镜像，例如：\",\" build: context: /volume1/docker/danmuji dockerfile: Dockerfile \"]},{\"header\":\"管理 Docker 数据库\",\"slug\":\"管理-docker-数据库\",\"contents\":[\"Docker 中的数据库可以指向外部，并且可以永久保存。但是外部保存的数据是各种小文件，而不是完整的 MySQL 文件，因此不能直接作为数据库进行读取。在实际管理中，我们不需要关心外部存储文件，而应该直接使用正在运行的数据库。\",\"首先，我们需要将 Docker 的数据库端口对外开放。例如，MySQL 的默认端口是 3306，我们可以将其指向 Docker 外的 3307 端口。然后，我们可以使用数据库应用程序连接数据库地址 192.168.3.3:3307。操作流程类似于 phpMyAdmin，非常简单，可以轻松地查看、修改和导出 Docker 中的数据库。如果你的数据库连接仍然被拒绝，可以参考 Huginn 中的内部数据库连接，将当前外部连接 IP 设置为允许。\"]},{\"header\":\"其他使用\",\"slug\":\"其他使用\",\"contents\":[]},{\"header\":\"Windows Docker\",\"slug\":\"windows-docker\",\"contents\":[\"在 Windows 系统上，可以使用 Docker Desktop 来管理容器，配置方法可参考 Windows Docker 环境配置。\",\"Windows 本地磁盘被挂载到 Linux 的 mnt 目录下，因此，如果需要在 WSL 中访问 Windows 文件，需要在路径前添加 /mnt/ 前缀，并将磁盘符号改为小写字母，将反斜杠 \\\\ 替换为正斜杠 /。例如，如果 Windows 文件位于「D:\\\\Backup\\\\Libraries\\\\Desktop\\\\stable-diffusion-webui-docker」目录下，则其在 Linux 中的路径为「/mnt/d/Backup/Libraries/Desktop/stable-diffusion-webui-docker」。Windows 上的 WSL 本地路径为 \\\\\\\\wsl.localhost\\\\。\",\"请注意：WSL 上的 Linux 环境与其他环境有所不同，须查看在适用于 Linux 的 Windows 子系统 (WSL2) 上安装 Node.js。\"]},{\"header\":\"宝塔镜像\",\"slug\":\"宝塔镜像\",\"contents\":[\"如果要在 Docker 上部署网站，推荐使用宝塔官方的集成镜像。它基于 CentOS 7.9，解决了 Docker 内部链接问题，还支持将数据库定时备份到本地。有关配置信息，请参考宝塔面板定制 docker 镜像发布 - 集成 LN/AMP 支持和 Docker 安装宝塔环境。但是，该镜像不适用于 Huginn 的部署，因为 Huginn 不支持 CentOS。我曾尝试将安装命令从 apt-get 替换为 yum，但仍然无法部署。当我尝试在 Docker 中直接安装宝塔而不使用官方集成镜像时，遇到了无法启动数据库的问题。\",\"# 按需求修改映射端口和目录，1024 以下的端口不能给普通用户用 sudo docker run -d --restart unless-stopped --name baota -p 8889:8888 -p 1033:22 -p 1044:443 -p 1081:80 -p 1889:888 -v /volume1/docker/btpanel/website_data:/www/wwwroot -v /volume1/docker/btpanel/mysql_data:/www/server/data -v /volume1/docker/btpanel/vhost:/www/server/panel/vhost btpanel/baota:lnmp \",\"在站点设置中，绑定你的本地域名 home.xx.com 和内部地址 192.168.x.x，这样你就可以通过访问 home.xx.com:1081 来访问该站点。\",\"默认地址 http://192.168.x.x:8889/btpanel 上的宝塔面板。\",\"默认用户：btpanel\",\"默认密码：btpaneldocker\",\"镜像默认 SSH 密码：btpaneldocker\",\"如果宝塔镜像仅用于测试环境，可以使用 rm -f /www/server/panel/data/admin_path.pl 命令来关闭面板入口。如果你关闭了 NAS 的 SSH 功能，宝塔面板也将停止，但不会影响已运行的网站。\"]}]},\"/services/Huginn.html\":{\"title\":\"Huginn\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"Huginn 部署：查看 deploy Huginn inside of Docker 和 .env 设置，或按下方的教程手动部署到服务器上，轻量使用推荐部署到 Docker。\",\"Huginn 抓取教程：RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）\"]},{\"header\":\"常用 Agent\",\"slug\":\"常用-agent\",\"contents\":[\"Huginn Agents：\",\"Website Agent 解析网页、XML 文档和 json 数据，最常使用\",\"Event Formatting Agent 事件信息格式化，可以对收到的信息内容进行格式化，允许添加自定义新内容\",\"Phantom Js Cloud Agent 借助 Phantom 抓取动态页面源码，防止部门网站屏蔽爬虫\",\"Trigger Agent 监控事件反馈信息的触发器，多用来过滤部分内容\",\"De Duplicate Agent 去重\",\"Data Output Agent 将数据以 RSS 和 Json 的形式向外部推送\",\"Liquid Output Agent 自定义格式数据输出，可以用它创建 HTML 页面，json 数据等\",\"Webhook Agent\",\"Trigger Agent 监测敏感事件，然后可以用来发送邮件等提醒。\",\"Javascript Agent 允许执行自定义的 JS 代码，可以用于个性化操作\",\"Digest Agent 汇总节点，收集所有收到的事件再作为一个事件发送出去\",\"Email Agent 用邮箱发送最新接收到的讯息\",\"Post Agent 可以由其他节点触发，根据固定模板合并事件信息，并以 POST 或 GET 方式向指定的 URL 发起请求\",\"Delay Agent 可以作为事件或者副本的暂存器或者缓冲区，统一触发发布\",\"Scheduler Agent 定时器节点\",\"Attribute Difference Agent 数值差异比较\",\"Commander Agent 触发器代理，可以用于向其他节点发起指令控制，控制节点的执行和停止等\",\"{{created_at}} 为自带抓取时间，Agent 设置中的特殊字符+，需要用反义符\\\\\\\\。\"]},{\"header\":\"Huginn 部署\",\"slug\":\"huginn-部署\",\"contents\":[\"Huginn 的任务有时会卡住，导致后续任务无法进行，重启容器也无法恢复正常。因此，我改为手动部署 Huginn，并定期使用重置命令以防止任务卡住。\",\"cd /home/huginn/huginn sudo bundle exec rake production:force_stop sudo bundle exec rake production:export \",\"服务器重启后，需执行以下命令：\",\"sudo docker exec -it huginn bash sudo service mysql restart sudo service mysql start sudo service nginx restart cd /home/huginn/huginn git config --global --add safe.directory /home/huginn/huginn sudo runsvdir /etc/service & sudo bundle exec rake production:export \",\"Huginn 经常用到的位置包括 /home/huginn/huginn（env 环境设置）和 /var/lib/mysql（数据库）。为了使这些位置能够在外部存储上工作，需要将外部存储位置的权限设置为 everyone，否则会出现错误。\",\"需要注意的是，内部数据库默认情况下不会被外部识别。为了使其能够与外部进行连接，需要进行以下操作：\",\"使用 sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf 命令找到 bind-address 行，并注释掉（在行的前面添加 #）：#bind-address = 127.0.0.1。同时，将 max_allowed_packet 设置为 200M。\",\"根据连接反馈获取连接 IP 并授权，同时开放 process 权限，方便后期数据库备份。数据库备用可使用 backup_script.sh 脚本，定期将 sql 文件导出到外部存储。\",\"mysql -u root -p GRANT ALL PRIVILEGES ON *.* TO 'huginn'@'172.17.0.1' IDENTIFIED BY 'YourPassword'; GRANT PROCESS ON *.* TO 'huginn'@'localhost'; FLUSH PRIVILEGES; \\\\q sudo service mysql restart \",\"2 个疑问：\",\"测试当任务卡住时，rake production:export 是否有效。（优化后，一直没出现卡住问题？）\",\"部署时 production:export 步骤会提示 unable to lock supervise/lock: temporary failure，但此报错似乎不影响 Huginn 的运行，等有时间看看是否有相关报错。\"]},{\"header\":\"Ubuntu 手动部署\",\"slug\":\"ubuntu-手动部署\",\"contents\":[\"部署环境：Ubuntu 18.04 的 Docker 镜像（同样适用于服务器） 安装参考：Manual Installation on Debian/Ubuntu，Novice-setup-guide 手动升级：manual Update\",\"Huginn 部署步骤：\",\"# 进入 huginn 容器命令行，某些容器命令为 /bin/bash sudo docker exec -it huginn bash # run as root! apt-get update -y apt-get upgrade -y apt-get install sudo -y # Install vim and set as default editor sudo apt-get install -y vim sudo update-alternatives --set editor /usr/bin/vim.basic # Install the required packages sudo apt-get install -y runit build-essential git zlib1g-dev libyaml-dev libssl-dev libgdbm-dev libreadline-dev libncurses5-dev libffi-dev curl openssh-server checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libicu-dev logrotate pkg-config cmake nodejs graphviz jq shared-mime-info # Ubuntu 18.04 Bionic sudo apt-get install -y runit-systemd # Download Ruby and compile it: mkdir /tmp/ruby && cd /tmp/ruby curl -L --progress-bar https://cache.ruby-lang.org/pub/ruby/2.7/ruby-2.7.7.tar.bz2 | tar xj cd ruby-2.7.7 ./configure --disable-install-rdoc make -j`nproc` sudo make install # curl -L --progress-bar https://cache.ruby-lang.org/pub/ruby/3.2/ruby-3.2.2.tar.xz | tar xJ # cd ruby-3.2.2 sudo gem update --system --no-document sudo gem install foreman --no-document # Create a user for Huginn: sudo adduser --disabled-login --gecos 'Huginn' huginn # Install the database packages sudo apt-get install -y mysql-server mysql-client libmysqlclient-dev \",\"输入 service mysql start 启动数据库，否则下一步数据库设置容易报错 Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock'。[1]\",\"# 逐步设置数据库 root 密码 sudo mysql_secure_installation # 用上方设置的密码登陆数据库 mysql -u root -p # ⚠️逐行输入代码到数据库命令行 `mysql>`，需将 `$password` 替换为你要设置的密码 CREATE USER 'huginn'@'localhost' IDENTIFIED BY '$password'; SET default_storage_engine=INNODB; GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, LOCK TABLES ON `huginn_production`.* TO 'huginn'@'localhost'; FLUSH PRIVILEGES; \\\\q \",\"数据库设置好后，拉取 huginn 主体程序，此段命令可以整段复制到 ssh。\",\"# We'll install Huginn into the home directory of the user \\\"huginn\\\" cd /home/huginn # Clone Huginn repository，不能直接使用 master，避免 ruby 3.2 问题 # sudo -u huginn -H git clone https://github.com/huginn/huginn.git -b master huginn sudo -u huginn -H git clone https://github.com/huginn/huginn.git -b latest_rubygems huginn # Go to Huginn installation folder cd /home/huginn/huginn # Copy the example Huginn config sudo -u huginn -H cp .env.example .env # Create the log/, tmp/pids/ and tmp/sockets/ directories sudo -u huginn mkdir -p log tmp/pids tmp/sockets # Make sure Huginn can write to the log/ and tmp/ directories sudo chown -R huginn log/ tmp/ sudo chmod -R u+rwX,go-w log/ tmp/ # Make sure permissions are set correctly sudo chmod -R u+rwX,go-w log/ sudo chmod -R u+rwX tmp/ sudo -u huginn -H chmod o-rwx .env # Copy the example Unicorn config sudo -u huginn -H cp config/unicorn.rb.example config/unicorn.rb \",\"sudo -u huginn -H editor .env 设置 huginn 环境依赖，更多选项查看 .env 设置案例。编辑器为上面安装的 vim，i 在光标所在的位置插入，esc 退出编辑，:wq 保存并退出。\",\"DATABASE_ADAPTER=mysql2 #DATABASE_ENCODING=utf8 # 修改点 DATABASE_RECONNECT=true DATABASE_NAME=huginn_production # 修改点 DATABASE_POOL=20 DATABASE_USERNAME=huginn # 修改点 DATABASE_PASSWORD='$password' # 修改点，换为你自己的密码 #DATABASE_HOST=your-domain-here.com #DATABASE_PORT=3306 #DATABASE_SOCKET=/tmp/mysql.sock # MySQL only: If you are running a MySQL server >=5.5.3, you should # set DATABASE_ENCODING to utf8mb4 instead of utf8 so that the # database can hold 4-byte UTF-8 characters like emoji. DATABASE_ENCODING=utf8mb4 #修改点 ... RAILS_ENV=production # 修改点 USE_GRAPHVIZ_DOT=dot # 取消注释，启用 GRAPHVIZ 来生成 diagram TIMEZONE=\\\"Beijing\\\" # bundle exec rake time:zones:local，时区需按指定格式填写，否则会报错 runsv not running DEFAULT_HTTP_USER_AGENT=\\\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36\\\" # 浏览器访问 # 邮件发送设置 SMTP_DOMAIN=newzone.top SMTP_USER_NAME=benson@newzone.top SMTP_PASSWORD=somepassword SMTP_SERVER=smtp.feishu.cn SMTP_PORT=465 SMTP_AUTHENTICATION=plain SMTP_ENABLE_STARTTLS_AUTO=true SMTP_SSL=true SEND_EMAIL_IN_DEVELOPMENT=true \",\"Install Gems 前用子账户重新设置运行目录权限 sudo chown -R huginn:huginn /home/huginn，防止报错 Your user account isn't allowed to install to the system RubyGems。\",\"# 注意看黄字警告 gem install bundler # Docker 环境中，时区容易丢失(6-70) apt-get install tzdata # Install Gems sudo -u huginn -H bundle config set deployment 'true' sudo -u huginn -H bundle config set without 'development test' sudo -u huginn -H bundle install # 备用 Gems 修复命令 # bundle update # gem update bundler # vim /home/huginn/huginn/Gemfile # Initialize Database # Create the database sudo -u huginn -H bundle exec rake db:create RAILS_ENV=production # Migrate to the latest version sudo -u huginn -H bundle exec rake db:migrate RAILS_ENV=production # ⚠️设置登陆账户密码，Create admin user and example agents using the default admin/password login sudo -u huginn -H bundle exec rake db:seed RAILS_ENV=production SEED_USERNAME=admin SEED_PASSWORD=password # Compile Assets sudo -u huginn -H bundle exec rake assets:precompile RAILS_ENV=production \",\"sudo -u huginn -H editor Procfile 修改 huginn 设置。如果需多现成运行，可移除 Multiple DelayedJob workers 部分的注释。\",\"# 在下两行前，添加符号「#」 #web: bundle exec rails server -p ${PORT-3000} -b ${IP-0.0.0.0} #jobs: bundle exec rails runner bin/threaded.rb # 删除以下下两行前的符号「#」 web: bundle exec unicorn -c config/unicorn.rb jobs: bundle exec rails runner bin/threaded.rb \",\"'sv stop huginn-web-1' exited with a non-zero return value: fail: huginn-web-1: runsv not running 的报错，使用 foreman export runit -a huginn -l /home/huginn/huginn/log /etc/service 和 chown -R huginn:huginn /etc/service/huginn*。[2][3] 如果是重启 Huginn 时出现此报错，则检查 sudo -u huginn -H editor .env 设置。\",\"# 切换到 cd /home/huginn/huginn # 设置 git config --global --add safe.directory /home/huginn/huginn # 设置开机启动 sudo runsvdir /etc/service & sudo bundle exec rake production:export # Setup Logrotate sudo cp deployment/logrotate/huginn /etc/logrotate.d/huginn # Ensure Your Huginn Instance Is Running sudo bundle exec rake production:status \",\"Nginx 站点设置：\",\"sudo apt-get install -y nginx # Site Configuration sudo cp deployment/nginx/huginn /etc/nginx/sites-available/huginn sudo ln -s /etc/nginx/sites-available/huginn /etc/nginx/sites-enabled/huginn # Change YOUR_SERVER_FQDN to the fully-qualified domain name of your host serving Huginn. sudo editor /etc/nginx/sites-available/huginn # 不需要 https，则改为下方配置 server { listen 80; # 监听的端⼝ server_name localhost home.newzone.top; # 域名或ip，这里启用了两个地址，用空格分开 # 测试设置是否正确 sudo nginx -t # 移除默认网站设置，只有当服务器/容器只存在 Huginn 网站方执行下行命令 sudo rm /etc/nginx/sites-enabled/default \",\"以上完成了 Huginn 的所有部署，执行 sudo service nginx restart 即可访问网站。\"]},{\"header\":\"Huginn Docker\",\"slug\":\"huginn-docker\",\"contents\":[\"Huginn multi-process 镜像基于 Ubuntu 18.04，没有 root 权限。如果不导出卷，或者使用单独的数据库容器，则无法在不丢失数据的情况下更新 Huginn。可以手动设置数据库对外端口和外部存储路径。\",\"此外，官方镜像路径与手动版不同，不支持 force_stop 命令。官方建议 Docker 中使用下方命令删除数据库中卡住的任务。这个命令实测是有效的，但我有次碰到了未知 bug，卡住的任务被删除，后续任务却没继续。\",\"# get a shell inside the docker container (replace huginn with the name or id of the container) sudo docker exec -it huginn /bin/bash # source the environment file source .env # get a rails console bundle exec rails console # inside the rails console delete the job Delayed::Job.where('locked_at IS NOT NULL AND locked_by IS NOT NULL AND failed_at IS NULL').destroy_all \"]},{\"header\":\"Agents\",\"slug\":\"agents\",\"contents\":[]},{\"header\":\"Trigger Agent\",\"slug\":\"trigger-agent\",\"contents\":[\"Trigger Agent 挑选符合条件的事件。\",\"# content 字段中不包含 周雅萌 或 邓雅萌 { \\\"expected_receive_period_in_days\\\": \\\"2\\\", \\\"keep_event\\\": \\\"true\\\", \\\"rules\\\": [ { \\\"type\\\": \\\"!regex\\\", \\\"value\\\": \\\"周雅萌 | 邓雅萌\\\", \\\"path\\\": \\\"$.content\\\" } ], \\\"message\\\": \\\"Looks like your pattern matched in '{{value}}'!\\\" } # title 中包含品牌词 iluminage 或 易美肌 { \\\"expected_receive_period_in_days\\\": \\\"4\\\", \\\"keep_event\\\": \\\"true\\\", \\\"rules\\\": [ { \\\"type\\\": \\\"regex\\\", \\\"value\\\": \\\"iluminage|易美肌\\\", \\\"path\\\": \\\"$.title\\\" } ], \\\"message\\\": \\\"Looks like your pattern matched in '{{value}}'!\\\" } \"]},{\"header\":\"Liquid Output Agent\",\"slug\":\"liquid-output-agent\",\"contents\":[\"用自定义模板将数据整理，输出为 HTML，json 和 xml 格式链接。\",\"模式一般选 Last X events，将接收到的所有数据对外输出，默认为 1000。\",\"Last X events 模式下，可以设置 Event limit 以控制输出数据的数量和时间段。Event limit 可以设为 100，即输出数据为 100；也可以设为「1 day」或「5 minutes」，即仅输出最近一天的内容。\"]},{\"header\":\"Event Formatting Agent\",\"slug\":\"event-formatting-agent\",\"contents\":[\"Event Formatting Agent 允许您格式化传入的事件，根据需要添加新的字段。可以用正则来替换输入中的某些元素。具体样例参考，新京报 #5 清理版面字段格式。\",\"# strftime() 方法中常用的占位符 # %Y 表示年份，%m 表示月份，%d 表示日期，%H 表示小时（24小时制），%M 表示分钟，%S 表示秒，%B 代表英文的月份，`%I` 代表小时（12小时制），`%p` 代表 AM/PM。`%e` 代表日期，不会在首位添加零。 \\\"created_at\\\": \\\"{{created_at | date:'%Y-%m-%d'}}\\\" # 将 2023-03-02 23:33:30 +0800 替换为 2023-03-02 \\\"created_at\\\": \\\"{{created_at | regex_replace: ' ', ''| regex_replace: '(([0-1]?[0-9])|([2][0-3])):([0-5]?[0-9])(:([0-5]?[0-9]))?', ''| regex_replace: '\\\\\\\\+0800', ''}}\\\" \"]},{\"header\":\"正则重构\",\"slug\":\"正则重构\",\"contents\":[\"比如生成时间规则为 \\\"created_at\\\": \\\"{{created_at}}\\\"，默认时间 2022-07-06 21:09:51 +0800，使用正则删除规则为 \\\"created_at\\\": \\\"{{created_at | regex_replace: ' ', ''| regex_replace: '(([0-1]?[0-9])|([2][0-3])):([0-5]?[0-9])(:([0-5]?[0-9]))?', ''| regex_replace: '\\\\\\\\+0800', ''}}\\\"。\"]},{\"header\":\"加前后缀\",\"slug\":\"加前后缀\",\"contents\":[\"抓取链接不完整时，需要完善链接，比如 \\\"url_link\\\": \\\"https://so.toutiao.com{{temp_link}}\\\"。\",\"For example, here is a possible Event:\",\"{ \\\"high\\\": { \\\"celsius\\\": \\\"18\\\", \\\"fahreinheit\\\": \\\"64\\\" }, \\\"date\\\": { \\\"epoch\\\": \\\"1357959600\\\", \\\"pretty\\\": \\\"10:00 PM EST on January 11, 2013\\\" }, \\\"conditions\\\": \\\"Rain showers\\\", \\\"data\\\": \\\"This is some data\\\", } \",\"You may want to send this event to another Agent, for example a Twilio Agent, which expects a message key. You can use an Event Formatting Agent's instructions setting to do this in the following way:\",\"\\\"instructions\\\": { \\\"message\\\": \\\"Today's conditions look like {{conditions}} with a high temperature of {{high.celsius}} degrees Celsius.\\\", \\\"subject\\\": \\\"{{data}}\\\", \\\"created_at\\\": \\\"{{created_at}}\\\" } \",\"Names here like conditions, high and data refer to the corresponding values in the Event hash.\",\"The special key created_at refers to the timestamp of the Event, which can be reformatted by the date filter, like {{created_at | date:\\\"at %I:%M %p\\\" }}.\",\"The upstream agent of each received event is accessible via the key agent, which has the following attributes: name, options, sources, type, url, id, disabled, memory, controllers, schedule, keep_events_for, propagate_immediately, working, receivers, control_targets.\",\"Have a look at the Wiki to learn more about liquid templating.\",\"Events generated by this possible Event Formatting Agent will look like:\",\"{ \\\"message\\\": \\\"Today's conditions look like Rain showers with a high temperature of 18 degrees Celsius.\\\", \\\"subject\\\": \\\"This is some data\\\" } \",\"In matchers setting you can perform regular expression matching against contents of events and expand the match data for use in instructions setting. Here is an example:\",\"{ \\\"matchers\\\": [ { \\\"path\\\": \\\"{{date.pretty}}\\\", \\\"regexp\\\": \\\"A(?<time>dd:dd [AP]M [A-Z]+)\\\", \\\"to\\\": \\\"pretty_date\\\" } ] } \",\"This virtually merges the following hash into the original event hash:\",\"\\\"pretty_date\\\": { \\\"time\\\": \\\"10:00 PM EST\\\", \\\"0\\\": \\\"10:00 PM EST on January 11, 2013\\\" \\\"1\\\": \\\"10:00 PM EST\\\" } \",\"So you can use it in instructions like this:\",\"\\\"instructions\\\": { \\\"message\\\": \\\"Today's conditions look like {{conditions}} with a high temperature of {{high.celsius}} degrees Celsius according to the forecast at {{pretty_date.time}}.\\\", \\\"subject\\\": \\\"{{data}}\\\" } \",\"If you want to retain original contents of events and only add new keys, then set mode to merge, otherwise set it to clean.\",\"To CGI escape output (for example when creating a link), use the Liquid uri_escape filter, like so:\",\"{ \\\"message\\\": \\\"A peak was on Twitter in {{group_by}}. Search: https://twitter.com/search?q={{group_by | uri_escape}}\\\" } \"]},{\"header\":\"Adioso Agent - 机票价格追踪\",\"slug\":\"adioso-agent-机票价格追踪\",\"contents\":[\"Creates events\",\"Adioso Agent 可以查询两个城市间，在指定时间内的最低飞机票价格。机票价格货币是美元。查询日期 start_date 和 end_date 之间的差异需小于 150 天。需要注册 Adioso，并在 username and password 中输入。\"]},{\"header\":\"Aftership Agent - 物流追踪-API 付费\",\"slug\":\"aftership-agent-物流追踪-api-付费\",\"contents\":[\"Creates events\",\"Aftership agent 帮助你追踪你的快递，并实时更新包裹动态。为了能够使用 Aftership API，您需要生成一个 API Key。这需要付费才能使用其跟踪功能。\",\"操作说明： Provide the path for the API endpoint that you’d like to hit. For example, for all active packages, enter trackings (see https://www.aftership.com/docs/api/4/trackings), for a specific package, use trackings/SLUG/TRACKING_NUMBER and replace SLUG with a courier code and TRACKING_NUMBER with the tracking number. You can request last checkpoint of a package by providing last_checkpoint/SLUG/TRACKING_NUMBER instead.\",\"You can get a list of courier information here https://www.aftership.com/courier\",\"Required Options:\",\"api_key - YOUR_API_KEY.\",\"path request and its full path\"]},{\"header\":\"Algorithmia Agent - AI 算法\",\"slug\":\"algorithmia-agent-ai-算法\",\"contents\":[\"Creates eventsReceives eventsDry runshuginn_algorithmia_agent\",\"AlgoritmiaAgent 运行 Algorithmia 中的算法。在使用此代理之前，您需要注册一个Algorithmia帐户。\",\"The created event will have the output from Algorithmia in the result key. To merge incoming Events with the result, use merge for the mode key.\"]},{\"header\":\"Attribute Difference Agent - 属性差异（待深入理解）\",\"slug\":\"attribute-difference-agent-属性差异-待深入理解\",\"contents\":[\"Creates eventsReceives events\",\"The Attribute Difference Agent receives events and emits a new event with the difference or change of a specific attribute in comparison to the previous event received. Attribute Difference Agent 用于传递两个不同值的差异和改变。\",\"path specifies the JSON path of the attribute to be used from the event.\",\"output specifies the new attribute name that will be created on the original payload and it will contain the difference or change.\",\"method specifies if it should be…\",\"percentage_change eg. Previous value was 160, new value is 116. Percentage change is -27.5\",\"decimal_difference eg. Previous value was 5.5, new value is 15.2. Difference is 9.7\",\"integer_difference eg. Previous value was 50, new value is 40. Difference is -10\",\"decimal_precision defaults to 3, but you can override this if you want.\",\"expected_update_period_in_days is used to determine if the Agent is working.\",\"The resulting event will be a copy of the received event with the difference or change added as an extra attribute. If you use the percentage_change the attribute will be formatted as such {{attribute}}_change, otherwise it will be {{attribute}}_diff.\",\"All configuration options will be liquid interpolated based on the incoming event.\"]},{\"header\":\"Basecamp Agent - Service 停用\",\"slug\":\"basecamp-agent-service-停用\",\"contents\":[\"Creates events37signals\",\"The Basecamp Agent checks a Basecamp project for new Events\",\"To be able to use this Agent you need to authenticate with 37signals in the Services section first.\"]},{\"header\":\"Bigquery Agent - 大型数据库分析\",\"slug\":\"bigquery-agent-大型数据库分析\",\"contents\":[\"Creates eventsReceives eventsDry runshuginn_bigquery_agent\",\"Bigquery Agent 会调用 Google BigQuery 和 Goolge Cloud 账户，可能需要付费。同时，Bigquery Agent 依靠服务帐户进行身份验证，而不是 oauth。\",\"Setup:\",\"Visit the google api console\",\"Use your existing project (or create a new one)\",\"APIs & Auth -> Enable BigQuery\",\"Credentials -> Create new Client ID -> Service Account\",\"Download the JSON keyfile and either save it to a path, ie: /home/huginn/Huginn-5d12345678cd.json, or copy the value of private_key from the file.\",\"Grant that service account access to the BigQuery datasets and tables you want to query.\",\"The JSON keyfile you downloaded earlier should look like this:\",\"{ \\\"type\\\": \\\"service_account\\\", \\\"project_id\\\": \\\"huginn-123123\\\", \\\"private_key_id\\\": \\\"6d6b476fc6ccdb31e0f171991e5528bb396ffbe4\\\", \\\"private_key\\\": \\\"-----BEGIN PRIVATE KEY-----\\\\n...\\\\n-----END PRIVATE KEY-----\\\\n\\\", \\\"client_email\\\": \\\"huginn@huginn-123123.iam.gserviceaccount.com\\\", \\\"client_id\\\": \\\"123123...123123\\\", \\\"auth_uri\\\": \\\"https://accounts.google.com/o/oauth2/auth\\\", \\\"token_uri\\\": \\\"https://accounts.google.com/o/oauth2/token\\\", \\\"auth_provider_x509_cert_url\\\": \\\"https://www.googleapis.com/oauth2/v1/certs\\\", \\\"client_x509_cert_url\\\": \\\"https://www.googleapis.com/robot/v1/metadata/x509/huginn%40huginn-123123.iam.gserviceaccount.com\\\" } \",\"Agent Configuration:\",\"project_id - The id of the Google Cloud project.\",\"query - The BigQuery query to run. Liquid formatting is supported to run queries based on receiving events.\",\"use_legacy - Whether or not to use BigQuery legacy SQL or standard SQL. (Defaults to false)\",\"max - Maximum number of rows to return. Defaults to unlimited, but results are always limited to 10 MB.\",\"timeout - How long to wait for query to complete (in ms). Defaults to 10000.\",\"event_per_row - Whether to create one Event per row returned, or one event with all rows as results. Defaults to false.\",\"Authorization\",\"keyfile - (String) The path (relative to where Huginn is running) to the JSON keyfile downloaded in step 5 above.\",\"Alternately, keyfile can be a hash:\",\"keyfileprivate_key - The private key (value of private_key from the downloaded file). Liquid formatting is supported if you want to use a Credential. (E.g., {% credential google-bigquery-key %})\",\"keyfileclient_email - The value of client_email from the downloaded file. Same as the service account email.\"]},{\"header\":\"Boxcar Agent - iPhone 通知栏 app\",\"slug\":\"boxcar-agent-iphone-通知栏-app\",\"contents\":[\"Receives events\",\"Boxcar agent 会在 iPhone 推送通知，但其不兼容于 iOS 10 系统，已经停止更新。\",\"To be able to use the Boxcar end-user API, you need your Access Token. The access token is available on general “Settings” screen of Boxcar iOS app or from Boxcar Web Inbox settings page.\",\"Please provide your access token in the user_credentials option. If you'd like to use a credential, set the user_credentials option to {% credential CREDENTIAL_NAME %}.\",\"Options:\",\"user_credentials - Boxcar access token.\",\"title - Title of the message.\",\"body - Body of the message.\",\"source_name - Name of the source of the message. Set to Huginn by default.\",\"icon_url - URL to the icon.\",\"sound - Sound to be played for the notification. Set to ‘bird-1’ by default.\"]},{\"header\":\"Change Detector Agent - 监测数据变化\",\"slug\":\"change-detector-agent-监测数据变化\",\"contents\":[\"Creates eventsReceives events\",\"The Change Detector Agent receives a stream of events and emits a new event when a property of the received event changes. Change Detector Agent 会接收数据流内容，并在监测到数据属性改变后，传递出新事件。\",\"property specifies a Liquid template that expands to the property to be watched, where you can use a variable last_property for the last property value. If you want to detect a new lowest price, try this: {% assign drop = last_property | minus: price %}{% if last_property == blank or drop > 0 %}{{ price | default: last_property }}{% else %}{{ last_property }}{% endif %}\",\"expected_update_period_in_days is used to determine if the Agent is working.\",\"The resulting event will be a copy of the received event.\"]},{\"header\":\"Commander Agent - 触发命令\",\"slug\":\"commander-agent-触发命令\",\"contents\":[\"Receives eventsControls agents\",\"Commander Agent 由时间表或传入事件触发，并触发其他 agents 运行，禁用，配置或启用自己。\",\"Action types\",\"Set action to one of the action types below:\",\"run: Target Agents are run when this agent is triggered.\",\"disable: Target Agents are disabled (if not) when this agent is triggered.\",\"enable: Target Agents are enabled (if not) when this agent is triggered.\",\"configure: Target Agents have their options updated with the contents of configure_options.\",\"Here's a tip: you can use Liquid templating to dynamically determine the action type. For example:\",\"To create a CommanderAgent that receives an event from a WeatherAgent every morning to kick an agent flow that is only useful in a nice weather, try this: {% if conditions contains 'Sunny' or conditions contains 'Cloudy' %}run{% endif %}\",\"Likewise, if you have a scheduled agent flow specially crafted for rainy days, try this: {% if conditions contains 'Rain' %}enable{% else %}disabled{% endif %}\",\"If you want to update a WeatherAgent based on a UserLocationAgent, you could use 'action': 'configure' and set 'configure*options' to { 'location': '{{\\\\_location*.latlng}}' }.\",\"In templating, you can use the variable target to refer to each target agent, which has the following attributes: name, options, sources, type, url, id, disabled, memory, controllers, schedule, keep_events_for, propagate_immediately, working, receivers, and control_targets.\",\"Targets\",\"Select Agents that you want to control from this CommanderAgent.\"]},{\"header\":\"Csv Agent - CSV 表格数据处理\",\"slug\":\"csv-agent-csv-表格数据处理\",\"contents\":[\"Creates eventsReceives eventsConsumes file pointer\",\"CsvAgent 可以解析或重构 CSV 表格数据。解析时，可以针对整个 CSV，也可以单独处理一行数据。\",\"Set mode to parse to parse CSV from incoming event, when set to serialize the agent serilizes the data of events to CSV.\",\"Universal options\",\"Specify the separator which is used to seperate the fields from each other (default is ,).\",\"data_key sets the key which contains the serialized CSV or parsed CSV data in emitted events.\",\"Parsing\",\"If use_fields is set to a comma seperated string and the CSV file contains field headers the agent will only extract the specified fields.\",\"output determines wheather one event per row is emitted or one event that includes all the rows.\",\"Set with_header to true if first line of the CSV file are field names.\",\"This agent can consume a ‘file pointer’ event from the following agents with no additional configuration: FtpsiteAgent, LocalFileAgent, S3Agent. Read more about the concept in the wiki.\",\"When receiving the CSV data in a regular event use JSONPath to select the path in data_path. data_path is only used when the received event does not contain a 'file pointer'.\",\"Serializing\",\"If use_fields is set to a comma seperated string and the first received event has a object at the specified data_path the generated CSV will only include the given fields.\",\"Set with_header to true to include a field header in the CSV.\",\"Use JSONPath in data_path to select with part of the received events should be serialized.\"]},{\"header\":\"Data Output Agent - 网页输出数据（RSS）\",\"slug\":\"data-output-agent-网页输出数据-rss\",\"contents\":[\"Receives events\",\"Data Output Agent 将传入的数据输入为 RSS 或 JSON，具体格式为“.xml”或“.json”。\",\"This Agent will output data at:\",\"https:///users/1/web_requests/:id/:secret.xml\",\"where :secret is one of the allowed secrets specified in your options and the extension can be xml or json.\",\"You can setup multiple secrets so that you can individually authorize external systems to access your Huginn data.\",\"Options:\",\"secrets - An array of tokens that the requestor must provide for light-weight authentication.\",\"expected_receive_period_in_days - How often you expect data to be received by this Agent from other Agents.\",\"template - A JSON object representing a mapping between item output keys and incoming event values. Use Liquid to format the values. Values of the link, title, description and icon keys will be put into the <channel> section of RSS output. Value of the self key will be used as URL for this feed itself, which is useful when you serve it via reverse proxy. The item key will be repeated for every Event. The pubDate key for each item will have the creation time of the Event unless given.\",\"events_to_show - The number of events to output in RSS or JSON. (default: 40)\",\"ttl - A value for the <ttl> element in RSS output. (default: 60)\",\"ns_media - Add yahoo media namespace in output xml\",\"ns_itunes - Add itunes compatible namespace in output xml\",\"rss_content_type - Content-Type for RSS output (default: application/rss+xml)\",\"response_headers - An object with any custom response headers. (example: {\\\"Access-Control-Allow-Origin\\\": \\\"*\\\"})\",\"push_hubs - Set to a list of PubSubHubbub endpoints you want to publish an update to every time this agent receives an event. (default: none) Popular hubs include Superfeedr and Google. Note that publishing updates will make your feed URL known to the public, so if you want to keep it secret, set up a reverse proxy to serve your feed via a safe URL and specify it in template.self.\",\"If you'd like to output RSS tags with attributes, such as enclosure, use something like the following in your template:\",\"\\\"enclosure\\\": { \\\"_attributes\\\": { \\\"url\\\": \\\"{{media_url}}\\\", \\\"length\\\": \\\"1234456789\\\", \\\"type\\\": \\\"audio/mpeg\\\" } }, \\\"another_tag\\\": { \\\"_attributes\\\": { \\\"key\\\": \\\"value\\\", \\\"another_key\\\": \\\"another_value\\\" }, \\\"_contents\\\": \\\"tag contents (can be an object for nesting)\\\" } \",\"Ordering events\",\"To specify the order of events, set events_order to an array of sort keys, each of which looks like either expression or [expression, type, descending], as described as follows:\",\"expression is a Liquid template to generate a string to be used as sort key.\",\"type (optional) is one of string (default), number and time, which specifies how to evaluate expression for comparison.\",\"descending (optional) is a boolean value to determine if comparison should be done in descending (reverse) order, which defaults to false.\",\"Sort keys listed earlier take precedence over ones listed later. For example, if you want to sort articles by the date and then by the author, specify [[\\\"{{date}}\\\", \\\"time\\\"], \\\"{{author}}\\\"].\",\"Sorting is done stably, so even if all events have the same set of sort key values the original order is retained. Also, a special Liquid variable _index_ is provided, which contains the zero-based index number of each event, which means you can exactly reverse the order of events by specifying [[\\\"{{_index_}}\\\", \\\"number\\\", true]].\",\"DataOutputAgent will select the last events_to_show entries of its received events sorted in the order specified by events_order, which is defaulted to the event creation time. So, if you have multiple source agents that may create many events in a run, you may want to either increase events_to_show to have a larger \\\"window\\\", or specify the events_order option to an appropriate value (like date_published) so events from various sources are properly mixed in the resulted feed.\",\"There is also an option events_list_order that only controls the order of events listed in the final output, without attempting to maintain a total order of received events. It has the same format as events_order and is defaulted to [[\\\"{{_index_}}\\\",\\\"number\\\",true]] so the selected events are listed in reverse order like most popular RSS feeds list their articles.\",\"Liquid Templating\",\"In Liquid templating, the following variable is available:\",\"events: An array of events being output, sorted in the given order, up to events_to_show in number. For example, if source events contain a site title in the site_title key, you can refer to it in template.title by putting {{events.first.site_title}}.\"]},{\"header\":\"De Duplication Agent - 数据去重\",\"slug\":\"de-duplication-agent-数据去重\",\"contents\":[\"Creates eventsReceives events\",\"De-duplication Agent 在接受数据后，会自动比对并去除重复数据。\",\"property the value that should be used to determine the uniqueness of the event (empty to use the whole payload)\",\"lookback amount of past Events to compare the value to (0 for unlimited)\",\"expected_update_period_in_days is used to determine if the Agent is working.\"]},{\"header\":\"Delay Agent - 缓冲存储区\",\"slug\":\"delay-agent-缓冲存储区\",\"contents\":[\"Creates eventsReceives events\",\"Delay Agent 存储收到的事件，并按计划发送它们的副本。将其用作事件的缓冲区或队列。\",\"max_events should be set to the maximum number of events that you'd like to hold in the buffer. When this number is reached, new events will either be ignored, or will displace the oldest event already in the buffer, depending on whether you set keep to newest or oldest.\",\"expected_receive_period_in_days is used to determine if the Agent is working. Set it to the maximum number of days that you anticipate passing without this Agent receiving an incoming Event.\",\"max_emitted_events is used to limit the number of the maximum events which should be created. If you omit this DelayAgent will create events for every event stored in the memory.\"]},{\"header\":\"Digest Agent - 摘要汇总 - 未理解\",\"slug\":\"digest-agent-摘要汇总-未理解\",\"contents\":[\"Creates eventsReceives events\",\"Digest Agent 收集发送给它的任何事件并将其作为单个事件发出。\",\"The resulting Event will have a payload message of message. You can use liquid templating in the message, have a look at the Wiki for details.\",\"Set expected_receive_period_in_days to the maximum amount of time that you'd expect to pass between Events being received by this Agent.\",\"If retained_events is set to 0 (the default), all received events are cleared after a digest is sent. Set retained_events to a value larger than 0 to keep a certain number of events around on a rolling basis to re-send in future digests.\",\"For instance, say retained_events is set to 3 and the Agent has received Events 5, 4, and 3. When a digest is sent, Events 5, 4, and 3 are retained for a future digest. After Event 6 is received, the next digest will contain Events 6, 5, and 4.\"]},{\"header\":\"Dkt Clustering Agent - 数据挖掘算法？\",\"slug\":\"dkt-clustering-agent-数据挖掘算法\",\"contents\":[\"Creates eventsReceives eventsConsumes file pointerDry runshuginn_dkt_curation_agents 使用 DKT APIs，其中含有多个 agents，具体查看上方链接。\",\"The DktClusteringAgent clusters the input document collection. The document collection first has to be converted to a set of vectors. DktClusteringAgent 会对输入文档集合进行聚类，文档集合首先必须被转换成一组向量。输入文档需要为特定格式，DktClusteringAgent 会在这个输入数据中查找集群。输入会包含查找到的集群数量和找到的集群特定值的信息。\",\"The Agent expects the input in this particular format and then proceeds to find clusters in this input data. The output contains information on the number of clusters found and specific values for the found clusters.\",\"The Agent accepts all configuration options of the /e-clustering/generateClusters endpoint as of september 2016, have a look at the offical documentation if you need additional information\",\"All Agent configuration options are interpolated using Liquid in the context of the received event.\",\"url allows to customize the endpoint of the API when hosting the DKT services elswhere.\",\"body use Liquid templating to specify the input .arff file. See http://www.cs.waikato.ac.nz/ml/weka/arff.html for an explanation of this format.\",\"language language of the source data\",\"algorithm: the algorithm to be used during clustering. Currently EM and Kmeans are supported.\",\"merge set to true to retain the received payload and update it with the extracted result\",\"result_key when present the emitted Event data will be nested inside the specified key\",\"When receiving a file pointer:\",\"body will be ignored and the contents of the received file will be send instead.\",\"This agent can consume a ‘file pointer’ event from the following agents with no additional configuration: FtpsiteAgent, LocalFileAgent, S3Agent. Read more about the concept in the wiki.\"]},{\"header\":\"Dropbox File Url\",\"slug\":\"dropbox-file-url\",\"contents\":[\"Agent Createsevents Receives eventsDry runsDropbox oauth2\",\"DropboxFileUrlAgent 用于使用 Dropbox。它需要一个文件路径（或多个文件路径），并通过临时链接或永久链接发送事件。\",\"Include the dropbox-api and omniauth-dropbox gems in your Gemfile and set DROPBOX_OAUTH_KEY and DROPBOX_OAUTH_SECRET in your environment to use Dropbox Agents.\",\"The incoming event payload needs to have a paths key, with a comma-separated list of files you want the URL for. For example:\",\"{ \\\"paths\\\": \\\"first/path, second/path\\\" } \",\"TIP: You can use the Event Formatting Agent to format events before they come in. Here’s an example configuration for formatting an event coming out of a Dropbox Watch Agent:\",\"{ \\\"instructions\\\": { \\\"paths\\\": \\\"{{ added | map: 'path' | join: ',' }}\\\" }, \\\"matchers\\\": [], \\\"mode\\\": \\\"clean\\\" } \",\"An example of usage would be to watch a specific Dropbox directory (with the DropboxWatchAgent) and get the URLs for the added or updated files. You could then, for example, send emails with those links.\",\"Set link_type to 'temporary' if you want temporary links, or to 'permanent' for permanent ones.\"]},{\"header\":\"Dropbox Watch Agent\",\"slug\":\"dropbox-watch-agent\",\"contents\":[\"Creates eventsDropbox oauth2\",\"Dropbox Watch Agent 监测给定值dir_to_watch并发出检测到的更改的事件。\",\"Include the dropbox-api and omniauth-dropbox gems in your Gemfile and set DROPBOX_OAUTH_KEY and DROPBOX_OAUTH_SECRET in your environment to use Dropbox Agents.\"]},{\"header\":\"Email Agent\",\"slug\":\"email-agent\",\"contents\":[\"Email Agent 将刚收到的信息 Receives events，以邮件形式发送通知。\",\"你可以通过提供subject选项来指定邮件的主题行，该选项可以包含Liquid的格式。例如，你可以提供\\\"Huginn email\\\"来设置一个简单的主题，或者{{subject}}来使用传入事件中的subject键。\",\"默认情况下，邮件正文将包含一个可选的 \\\"标题\\\"，然后是事件的键的列表。\",\"你可以通过加入可选的body参数来定制邮件正文。像subject一样，body可以是一个简单的信息或一个液体模板。你可以只发送事件的some_text字段，body设置为{{ some_text }}。身体可以包含简单的 HTML，并将被净化。注意，当使用body时，它将被<html>和<body>标签包裹，所以你不需要自己添加这些。\",\"你可以为邮件指定一个或多个 \\\"收件人\\\"，或者跳过这个选项，以便将邮件发送到你的账户的默认邮件地址。\",\"你可以为邮件提供一个from地址，或者留空，默认为EMAIL_FROM_ADDRESS (``) 的值。\",\"你可以为邮件提供一个content_type，并指定发送text/plain或text/html。如果你不指定content_type，那么收件人的邮件服务器将决定正确的渲染方式。\",\"设置expected_receive_period_in_days为您希望该代理收到事件之间的最大时间。\"]},{\"header\":\"Email Digest Agent - 邮件摘要\",\"slug\":\"email-digest-agent-邮件摘要\",\"contents\":[\"Receives events\",\"Email Digest Agent 收集发送给它的任何事件，并按计划通过电子邮件发送。使用事件的数目与 Keep events 有关，这意味着如果事件在 Email Digest Agent 计划运行之前到期，它们将不会出现在电子邮件中。\",\"By default, the will have a subject and an optional headline before listing the Events. If the Events' payloads contain a message, that will be highlighted, otherwise everything in their payloads will be shown.\",\"You can specify one or more recipients for the email, or skip the option in order to send the email to your account's default email address.\",\"You can provide a from address for the email, or leave it blank to default to the value of EMAIL_FROM_ADDRESS (``).\",\"You can provide a content_type for the email and specify text/plain or text/html to be sent. If you do not specify content_type, then the recipient email server will determine the correct rendering.\",\"Set expected_receive_period_in_days to the maximum amount of time that you'd expect to pass between Events being received by this Agent.\"]},{\"header\":\"Evernote Agent\",\"slug\":\"evernote-agent\",\"contents\":[\"Creates eventsReceives eventsEvernote\",\"Evernote Agent 与你的 Evernote 账户相连，新建笔记。\",\"Visit Evernote to set up an Evernote app and receive an api key and secret. Store these in the Evernote environment variables in the .env file. You will also need to create a Sandbox account to use during development.\",\"Next, you'll need to authenticate with Evernote in the Services section.\",\"Options:\",\"mode - Two possible values:\",\"update Based on events it receives, the agent will create notes or update notes with the same title and notebook\",\"read On a schedule, it will generate events containing data for newly added or updated notes\",\"include_xhtml_content - Set to true to include the content in ENML (Evernote Markup Language) of the note\",\"note\",\"When mode is update the parameters of note are the attributes of the note to be added/edited. To edit a note, both title and notebook must be set.\",\"For example, to add the tags 'comic' and 'CS' to a note titled 'xkcd Survey' in the notebook 'xkcd', use:\",\"\\\"notes\\\": { \\\"title\\\": \\\"xkcd Survey\\\", \\\"content\\\": \\\"\\\", \\\"notebook\\\": \\\"xkcd\\\", \\\"tagNames\\\": \\\"comic, CS\\\" } \",\"If a note with the above title and notebook did note exist already, one would be created.\",\"When mode is read the values are search parameters. Note: The content parameter is not used for searching. Setting title only filters notes whose titles contain title as a substring, not as the exact title.\",\"For example, to find all notes with tag 'CS' in the notebook 'xkcd', use:\",\"\\\"notes\\\": { \\\"title\\\": \\\"\\\", \\\"content\\\": \\\"\\\", \\\"notebook\\\": \\\"xkcd\\\", \\\"tagNames\\\": \\\"CS\\\" } \"]},{\"header\":\"Freme Explore Agent - SPARQL-数据断点？\",\"slug\":\"freme-explore-agent-sparql-数据断点\",\"contents\":[\"Creates eventsReceives eventsDry runshuginn_freme_enrichment_agents 使用 FREME APIs，其中含有多个 agents，具体查看上方链接。\",\"The FremeExploreAgent can retrieve description of a resource from a given endpoint. The endpoint can be SPARQL or Linked Data Fragments endpoint. FremeExploreAgent 可以检索给定端点的资源描述。端点可以是 SPARQL 或 Linked Data Fragments 端点。\",\"The Agent accepts all configuration options of the /e-link/explore endpoint as of September 2016, have a look at the offical documentation if you need additional information.\",\"All Agent configuration options are interpolated using Liquid in the context of the received event.\",\"base_url allows to customize the API server when hosting the FREME services elswhere.\",\"auth_token can be set to access private filters, datasets, templates or pipelines (depending on the agent).\",\"outformat requested RDF serialization format of the output (required), CSV is only supported when using a filter.\",\"resource a URI of the resource which should be described (required).\",\"endpoint a URL of the endpoint which should be used to retrieve info about the resource.\",\"endpoint_type the type of the endpoint (required).\",\"filter allows to post-process the results using a pre-configured SPARQL filter. Check the official documentation for details.\",\"merge set to true to retain the received payload and update it with the extracted result\",\"result_key when present the emitted Event data will be nested inside the specified key\"]},{\"header\":\"Ftpsite Agent\",\"slug\":\"ftpsite-agent\",\"contents\":[\"Creates eventsReceives eventsEmits file pointer\",\"Ftp Site Agent 检查 FTP 站点，并根据目录中新上载的文件创建事件。当接收到事件时，它会在配置的 FTP 服务器上创建文件。\",\"mode must be present and either read or write, in read mode the agent checks the FTP site for changed files, with write it writes received events to a file on the server.\",\"Universal options\",\"Specify a url that represents a directory of an FTP site to watch, and a list of patterns to match against file names.\",\"Login credentials can be included in url if authentication is required: ftp://username:password@ftp.example.com/path. Liquid formatting is supported as well: ftp://{% credential ftp_credentials %}@ftp.example.com/\",\"Optionally specify the encoding of the files you want to read/write in force_encoding, by default UTF-8 is used.\",\"Reading\",\"Only files with a last modification time later than the after value, if specifed, are emitted as event.\",\"Writing\",\"Specify the filename to use in filename, Liquid interpolation is possible to change the name per event.\",\"Use Liquid templating in data to specify which part of the received event should be written.\",\"This agent only emits a ‘file pointer’, not the data inside the files, the following agents can consume the created events: CsvAgent, PostAgent, ReadFileAgent. Read more about the concept in the wiki.\",\"ERROR 2002 (HY000)↩︎\",\"rake export hangs↩︎\",\"Huginn failed to restart after installed node and systemd↩︎\"]}]},\"/services/NAS.html\":{\"title\":\"NAS\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"NAS 主要用于 Docker 服务、影视管理和文件存储备用这三方面。群晖 NAS 在使用前，注意以下几点：\",\"选择「控制面板」>「文件服务」>「SMB」>「高级设置」，将最小 SMB 协议 设为 SMB1，避免部分应用发现了 NAS 但无法打开共享文件。\",\"选择「控制面板」>「任务计划」>「新增」>「计划的任务」>「用户定义的脚本」，给 NAS 建立定时任务脚本。\",\"SSD 缓存对家用的 NAS 性能提升不大，没必要加。\",\"DS/Transmission 套件：用于 PT 下载 (禁用 DHT，半小时停止做种)。\",\"Synology Drive Server 套件：电脑文件备份。\",\"Hyper Backup：本地多硬盘备份，防止一个硬盘丢失后重要文件损坏，比如 docker 容器的本地配置文件夹。\",\"群晖系统分布在所有硬盘，拔出一个不影响使用。但应用会有影响？\"]},{\"header\":\"NAS Docker\",\"slug\":\"nas-docker\",\"contents\":[\"NAS Docker 建议指定本地端口，否则重启容器会让端口发生改变，重启不会不影响 docker 配置。升级容器镜像，不影响内部数据库。群晖的「Docker 导出」只会导出安装镜像和配置，但不包括容器内部使用的数据库，用处不大。\",\"Docker 容器安装：\",\"推荐用 docker-compose.yml 安装 Docker，镜像会自动同步到 NAS 的容器列表中。docker-compose 使用参考 TTRSS docker-compose。\",\"选择「控制面板」>「终端机和 SNMP」，启动 SSH 功能。\",\"putty 连接群晖 SSH，进入 docker-compose.yml 所在路径，比如 cd /volume3/storage。\",\"通过终端在同目录下运行 sudo docker-compose up -d 后等待部署完成。\",\"关闭 SSH 功能。\",\"注意：root 用户需在命令前添加 sudo，否则会提示 Permission denied。\"]},{\"header\":\"Docker 容器\",\"slug\":\"docker-容器\",\"contents\":[]},{\"header\":\"常用\",\"slug\":\"常用\",\"contents\":[\"qbittorrent：需修改所有默认端口，否则容易报错。PT 下载关闭 BitTorrent - DHT 和其他隐私选项，半小时停止做种，将下载文件添加 Everyone 权限，其他设置参考群晖使用 qbittorrent。\",\"PhotoPrism：基于 ai 私有化部署的个人相册。如果部署时出错，则尝试删除数据库文件夹下的内容。地点标记功能非常强大，类似本地版 Google Photos。\",\"qiandao：自动签到开源框架，需搭配浏览器扩展 get-cookies 使用，可导出配置。\",\"watchtower：监控并更新 Docker 容器。 \",\"监控指定名称的镜像：docker run -d --name watchtower -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --cleanup --run-once nginx redis。本案例只更新名为「nginx」和「redis」的容器，其他容器将被忽略。\",\"指定容器的 compose 命令中添加 lable com.centurylinklabs.watchtower.enable=false，可禁止该容器的监控和更新。\"]},{\"header\":\"资讯\",\"slug\":\"资讯\",\"contents\":[\"RSSHub：无需保存数据，pubData 为 GMT 时区，普通用户无法更改，Docker Timezone 设置也不会有改变。\",\"Huginn：定期备份抓取脚本，数据库保存在本地。\",\"Tiny Tiny RSS：定期备份订阅源和设置，自动更新，可配置全文插件 mercury-parser-api。\",\"Cloudflare Tunnels：可以将局域网内容转发到外网。不过，每次容器重启后都需要重新构建，sudo docker run --name cloudflared -d --restart unless-stopped cloudflare/cloudflared:latest tunnel --no-autoupdate run --token [Your Tokens]。后期考虑是否将启动命令放入容器。\",\"Check 酱：监测网页内容变化，并发送异动到微信。亦支持 http status、json 和 rss 监测。配合自架云端，关电脑后也能运行。同类工具有 changedetection.io。\"]},{\"header\":\"娱乐\",\"slug\":\"娱乐\",\"contents\":[\"AList：开源的网盘管理工具，还支持对象存储，本地存储，FTP 等等。\",\"LANraragi：免费开源的漫画管理器，支持 zip/rar/targz/lzma/7z/xz/cbz/cbr/pdf 多种格式，可从网页和 第三方客户端 浏览。\",\"Tachiyomi：开源的漫画阅读应用，通过安装扩展插件，可以方便地订阅并聚合漫画源。使用前，需进入 Extensions，点右上角的 Enabled Languages 按钮，设置为中文源，然后会在页面底部发现中文漫画源。安装源后，进入 Souces 中点击进入对应源。\",\"reader：阅读 3 的服务器版，摆脱客户端，网页版即可查看。自定义替换进入文章页面左侧的「设置」-「过滤规则管理」。\",\"Tale Book：基于 Calibre 的简单的个人图书管理系统，支持在线阅读，但阅读体验不强且 Bug 较多，个人更喜欢直接用 PC 端查看。\",\"Bilibili_Danmuji：B 站直播礼物答谢、定时广告、关注感谢，自动回复工具，房管工具，自动打卡，Bilibili 直播弹幕姬 (使用 websocket 协议)，java 版 B 站弹幕姬。部署 Docker 时需更新 jdr release 文件。\",\"无名杀：部署在 NAS 上的三国杀游戏。\"]},{\"header\":\"自动化\",\"slug\":\"自动化\",\"contents\":[\"n8n：开源 IFTTT 工具，偏重于云服务。\",\"Node-RED：开源流处理，类似本地版的 IFTTT。\",\"Home Assistant：开源家庭自动化平台，可自定义集中管理各品牌的智能家居设备。米家设备需使用 hacs 下的集成 Xiaomi Miot Auto。\",\"Monica：Monica 允许人们记录所有关于朋友和家人的重要事情。喜欢和他们一起的活动。你最后一次打电话给某人的时候，你们谈了些什么。它会帮助你记住他们孩子的名字和年龄。它还能提醒你打电话给一个很久没联系的人。Monica 的容器设置查看 Monica Docker。Me as a contact 是它常年的一个 bug，可以通过指定数据库中的 users.me_contact_id 来解决。\",\"supermanito/Helloworld：京东签到等脚本，功能很强大，没怎么研究。\",\"ubuntu-desktop-lxde-vnc：能在 Docker 上运行的 Ubuntu 桌面版，适合挂载要长期运行的程序。测试 OBS 时，对内存要求不高，但 CPU 直冲 100%，fps 只有 7。\"]},{\"header\":\"待了解\",\"slug\":\"待了解\",\"contents\":[\"兰空图床：图床已经部署在七牛云，用 Picgo 上传，没感觉有必要用它。\",\"AutoBangumi：自动追番器，用以替代自我审查的 Bilibili。\",\"nas-tools：号称能自动整理文件，但测试识别中很容易出错，暂不考虑。\",\"Emby、Plex：流媒体方案，暂不考虑。\",\"Clash：代理服务器。\"]},{\"header\":\"影视整理\",\"slug\":\"影视整理\",\"contents\":[\"下载文件后，用 tinyMediaManager 重命名并下载 NFO 和影视封面，最后放置于分类文件夹。\",\"tinyMediaManager v4 免费版足够个人使用，v3 作偶尔补充使用，搜索首选语言改为「大陆简体」更精准。[1]\",\"# 电视节目重命名规则 季文件夹名：Season ${seasonNr} 剧集档案名：${showTitle} - S${seasonNr2}E${episodeNr2} - ${title} # 当只有一季时，则更改重命名规则 季文件夹名：为空时，会自动调用默认值 剧集档案名：${showTitle} - E${episodeNr2} # 多季，有标题时 剧集档案名：${showTitle} - E${episodeNr2} - ${title} \"]},{\"header\":\"NAS 硬盘\",\"slug\":\"nas-硬盘\",\"contents\":[\"插入新硬盘，新建储存空间，使用 Btrfs 或 Basic 格式。SHR 是群晖的智能 RAID 格式，不适用于硬盘容量不同的情况。\",\"硬盘\",\"容量\",\"到期时间（5 年）\",\"硬盘 1\",\"10T\",\"2025-06-18\",\"硬盘 2\",\"4T\",\"2023-01-24\",\"硬盘 3\",\"14T\",\"2027-02-11\",\"硬盘 4\",\"8T\",\"2026-01-06\",\"冷备份\",\"2T\",\"2014-10\",\"换下的机械硬盘做冷备份，存储照片等长期数据。\",\"硬盘临期后，用大容量硬盘替换。选择「存储池」>「更改 RAID 类型」，无损转换 basic 到 Raid1。不过，不同容量硬盘组 RAID，只能以最小磁盘容量计使用空间。\",\"更换硬盘后，注意将数据连同文件夹用 file station 复制过去 (按住 Shift 选中所有你要的文件点右键 移动到...)，关机卸载旧盘。如果该硬盘涉及套件位置，注意检查设置。[2]\",\"共享文件迁移：选择「控制面板」>「共享文件夹」，把你的共享文件夹位置修改到新储存空间。[3]\",\"群晖 NAS 使用 Emby+tMM 打造全平台观影畅爽体验（附下载地址）↩︎\",\"如何把群晖 NAS 上的套件搬到另外个硬盘上↩︎\",\"群晖 NAS 跨存储空间移动共享文件夹 (NAS 新增磁盘)↩︎\"]}]},\"/services/TTRSS.html\":{\"title\":\"Tiny Tiny RSS\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"Tiny Tiny RSS 推荐用 Awesome TTRSS 的 Docker 镜像，搭建步骤参考 NAS 上搭建 Docker。Awesome TTRSS 镜像不含插件「no_title_counters」，导致 TTRSS 网页标题会显示未读 RSS 数量。\",\"主题：feedly-sepia.css\",\"常见问题：Tiny Tiny RSS – FAQ\",\"定期备份：选择「偏好设置」>「订阅源」导出订阅源和 tt-rss 设置。\"]},{\"header\":\"手动部署\",\"slug\":\"手动部署\",\"contents\":[\"虽然 Tiny Tiny RSS 官方推荐用 Docker 部署，不过手动部署也很简单，挑选适合自己的方式即可。\",\"进入指定目录，cd /www/wwwroot/。\",\"新建 rss 目录，并下载最新 tt-rss，git clone https://git.tt-rss.org/fox/tt-rss.git rss。\",\"打开 rss 链接，页面会出现指定要求，如：提升文件权限，删除禁用函数 passthru，安装 php 扩展-fileinfo。配置好后，重新加载 php 配置。\",\"部署完成后，需要让 TTRSS 定期更新 RSS，步骤参考 Tiny Tiny RSS – Updating Feeds。如果遇到提示 daemon 未启动，可删除 lock/update_daemon.lock和update_daemon.stamp。\",\"阿里云用非 root 账户登录远程 vnc，然后启动 RSS 更新 (默认 2 分钟)。远程 vnc 黑屏时，点左上角「发送远程命令」，点击菜单栏或「关机后重新启动」后不再黑屏。不用直接重启，否则报错。\",\"指定 PHP 版本来运行：/www/server/php/74/bin/php /www/wwwroot/rss/update.php --daemon。\",\"不指定版本运行：php /www/wwwroot/rss/update.php --daemon。\",\"服务器使用定时任务更新 TTRSS：\",\"crontab -e #进入 Cpanel 面板添加定时任务 */15 * * * * /usr/bin/php /www/wwwroot/rss/update.php --feeds --quiet #只安装了一个php */15 * * * * /www/server/php/74/bin/php /www/wwwroot/rss/update.php --feeds --quiet #安装了多个php # 同时按下ctrl+c退出编辑模式，按下shift+: 输入wq 退出 crontab */15 * * * *表示每隔15分钟更新一次，你可以自己改成其它的。 \",\"服务器或 nginx 重启后，TTRss 会出现文件夹权限丢失，需重新设置权限。建议将此步骤设为定期任务自动执行。\",\"chmod -R 777 /www/wwwroot/rss/cache/images chmod -R 777 /www/wwwroot/rss/cache/upload chmod -R 777 /www/wwwroot/rss/cache/export chmod -R 777 /www/wwwroot/rss/feed-icons chmod -R 777 /www/wwwroot/rss/lock \",\"升级 Tiny Tiny RSS：进行 TTRSS 目录后执行升级命令 git pull origin master。无法升级时重命名 TTRSS 路径，全新下载后没问题再删除。数据库没变化就没事，主题重新安装。\"]}]},\"/web/Comments.html\":{\"title\":\"评论插件\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"LearnData 使用的是 Waline 评论插件，部署简单，有后端管理。评论插件推荐次序为 Waline > Valine > giscus > Gitalk > Gitter。\"]},{\"header\":\"评论插件\",\"slug\":\"评论插件\",\"contents\":[\"Waline：基于 Valine 衍生的简洁、安全的评论系统，部署到 Vercel，可匿名互动，导出评论内容，支持文章表情互动。\",\"Valine：快速、简洁且高效的无后端评论系统，可匿名互动。\",\"giscus：基于 github discussion，近似于论坛。查看 配置方法。\",\"Gitalk：基于 github commit，需配置独立库用于存储评论。\",\"Gitter：要登录的公共聊天室。样例如：boardgame，regauge。\"]},{\"header\":\"Waline\",\"slug\":\"waline\",\"contents\":[\"Waline 支持 Akismet 反垃圾评论和免注册留言，但匿名留言会带来安全隐患。建议开启评论通知来避免出现极端情况。Waline 的评论通知支持多种方式，包括 QQ、微信、邮件等。对于评论的回复，仅支持邮件通知。\",\"Vercel 项目中选择「Overview」>「Settings」>「Environment Variables」，然后按照 Waline 评论通知配置所需环境变量。如果需要 Webhook 等更多通知方式，则查看 Waline 服务端配置。配置成功后，选择「Overview」>「Deployments」，进行 Redeploy，重新部署后环境变量和评论通知方会生效。目前 *.vercel.app 域名已经被 DNS 污染，会出现「无法加载评论」，国内使用建议绑定自定义域名，域名对备案暂无硬性要求。\"]},{\"header\":\"手动部署\",\"slug\":\"手动部署\",\"contents\":[\"请注意，Vercel 和 LeanCloud 有额度限制。如果你的网站日访客超过一千人次，建议使用自行部署的方案。以下是我的部署步骤：\",\"新建数据库，并导入 waline.sql 以完成表和表结构的创建，之后在项目中配置如下环境变量。[1]\",\"配置必要的环境变量，可添加于 /etc/environment。配置完成后，需要重启项目让环境变量生效。并注意最后一行需保留空行。\",\"MYSQL_DB=\\\"\\\" MYSQL_USER=\\\"\\\" MYSQL_PASSWORD=\\\"\\\" \",\"部署 Waline 服务端，使用 forever 让其持久化运行。\",\"# 切换到站点路径 cd /www/wwwroot/node/waline # 安装 waline 前端包 npm install @waline/vercel --save # 运行模块内的 vanilla.js 文件 node node_modules/@waline/vercel/vanilla.js # 使用 forever 持久化运行程序 sudo npm install forever -g forever start app.js #启动应用 forever stop app.js #关闭应用 forever restartall #重启所有应用 # 持久化运行 Waline forever start /www/wwwroot/node/waline/node_modules/@waline/vercel/vanilla.js # 版本升级并重启 forever stop /www/wwwroot/node/waline/node_modules/@waline/vercel/vanilla.js cd /www/wwwroot/node/waline npm update @waline/vercel forever start /www/wwwroot/node/waline/node_modules/@waline/vercel/vanilla.js \",\"打开网页管理后台，通过导入事先备份的 JSON 文件来还原数据。\",\"新手可以使用宝塔面板的 Node.js 版本管理器来部署 Node.js。安装后，受限更新版本列表，然后选择要使用的 Node 版本，将其设置为命令行版本，接着配置服务器的环境变量。虽然宝塔可以管理 Node 项目，但容易出现错误。处理流程为进入「网站」>「Node 项目」>「添加 Node 项目」，将启动选项设置为模块内的 vanilla.js 文件，将项目端口设置为 8360，并设置绑定域名。\",\"注意：如果你选择手动部署反向代理服务器，请务必使用 Waline 官方提供的 Nginx 配置文件，否则可能会导致无法登录后台的问题。\"]},{\"header\":\"导入时间处理\",\"slug\":\"导入时间处理\",\"contents\":[\"如果 Waline 数据导入还原后，评论发布时间被重置为当前时间，则说明时间格式不兼容。以下以 LeanCloud 转 MySQL 为例：\",\"2023-03-24T17:27:28.121Z 这个时间戳中的格式 \\\"T\\\" 和 \\\"Z\\\" 不被 MySQL 支持，要将 \\\"T\\\" 替换为空格并将 \\\"Z\\\" 删除。我写了个网页工具处理时间格式替换。\",\"提取数据中的 Comment、Counter 和 Users，格式为 [{},{}……,{}]，依次复制到 json2sql 进行操作。\",\"在 json2sql 页面中，点击按钮「Format JSON」，然后按截图勾选「Still not happy」「Enclose field names」「Backtick (name)」，取消勾选第一个值的 key。同时，取消勾选 objectId 的「Include」，该项将不会导入数据库。\",\"将「Schema.Table or View Name」依次设为「`wl_Comment`」「`wl_Counter`」「`wl_Users`」，取消勾选「Create Table/View」。\",\"在 Step 3: Generate output 下点击按钮「JSON TO SQL Insert」，然后点击复制按钮。\",\"进入 phpMyAdmin 数据库后台，选中要操作的表（如 wl_Comment），点击右侧的 SQL 按钮运行 SQL 查询，将复制的内容粘贴到此，并点击执行。若无报错，则说明数据导入正常。\",\"处理后时间可以正常导入，但由于 id 结构不同，旧的评论回复将失去联系。\"]},{\"header\":\"Gitalk\",\"slug\":\"gitalk\",\"contents\":[\"Gitalk 是轻量化的评论组件，用户必须登录 github 才能评论，适合项目类使用。\",\"https://github.com/settings/developers 页面管理已建的应用，获取 Client ID 和 Client secrets，修改应用链接。[2]\",\"将以下代码复制粘贴至 docsify 页面，即可启动 Gitalk：\",\"<link rel=\\\"stylesheet\\\" href=\\\"https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-y/gitalk/1.7.2/gitalk.min.css\\\"> <script src=\\\"https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-y/docsify/4.12.2/plugins/gitalk.min.js\\\"></script> <script src=\\\"https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-y/gitalk/1.7.2/gitalk.min.js\\\"></script> <script> /* 使用下面的 Javascript 代码生成 gitalk 插件 */ const gitalk = new Gitalk({ clientID: '2f3da234d27ed9a7c290', clientSecret: 'd64c45594858477fff0c234c3ed3947a53b0a9ac', repo: 'docsifytalk', //仓库名称 (GitHub repo) owner: 'rockbenben', //仓库拥有者 (GitHub repo owner) admin: ['rockbenben'], //仓库所有者和协作者。（对此存储库具有写访问权的用户） // id: location.pathname, // Ensure uniqueness and length less than 50 distractionFreeMode: false // Facebook-like distraction free mode }) </script> \",\"Gitalk 缺点：\",\"每次有新页面时，都需要登录 github 初始化评论区。\",\"域名不能改变，Homepage URL 和 Authorization callback URL 需与你的 Gitalk 页面一致，否则页面会报错，提示初始化，无法登录 github。\",\"Waline 多数据库服务支持↩︎\",\"超 Nice 的评论组件 —— Gitalk↩︎\"]}]},\"/web/VuePress.html\":{\"title\":\"VuePress\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"VuePress 是一个以 Markdown 为中心的静态网站生成器。你可以使用 Markdown 来书写内容（如文档、博客等），然后 VuePress 会帮助你生成一个静态网站来展示它们。如果你已经有了 docsify/Hexo 等 Markdown 架构网站，简单就能切换到 VuePress。\",\"不过，VuePress 网站需要依赖包环境，生成的静态文件在本地运行会缺少组件，需要服务器或其他云服务上运行。如果本地部署中出现未知 bug，推荐使用 StackBlitz 在线 IDE 工具测试，打开 https://stackblitz.com/github/用户名/仓库名 即可将对应 GitHub 仓库导入 StackBlitz。开发时，建议用 dev 命令测试，这样可以查看打包前的动态代码，发现组件间的内部链接。\",\"LearnData 的主题为 vuepress-theme-hope，图标为 Iconfont 精选图标，页面修改查看 样式配置，其他主题和插件参考 Awesome VuePress V2 和 看板娘。\"]},{\"header\":\"初始配置\",\"slug\":\"初始配置\",\"contents\":[\"环境配置：安装 pnpm，也支持 npm 和 yarn，可参考环境部署教程。\",\"新建文件夹，然后在该路径下运行命令 pnpm create vuepress-theme-hope@next docs。vuepress-theme-hope 主题的样例文件会存储在该路径下。有时因版本问题，样例运行会报错，此时须用固定版本号来安装依赖环境，终端中输入 pnpm add vuepress@2.0.0-beta.60 @vuepress/client@2.0.0-beta.60 vuepress-theme-hope@2.0.0-beta.155 && pnpm docs:dev。\",\"执行命令 pnpm docs:dev 启动样例网站。\",\"docs\\\\.vuepress 路径下的 config.ts，navbar.ts，sidebar.ts，theme.ts 可以修改页面属性，设置方法参考 官方案例。 \",\"config.ts：配置网站环境依赖和网站属性。\",\"sidebar.ts：侧边栏，集合所有文档的目录。\",\"navbar.ts：导航栏，放最常用的文档链接。\",\"theme.ts：对主题和插件进行设置。\",\"如果遇到报错，执行命令 pnpm add vuepress@next vuepress-theme-hope@next && pnpm i && pnpm up 修复并升级相关依赖包。如果依然有问题，则删除 node_modules 和 lock 文件，执行 npm install && pnpm i && pnpm up 重置依赖包文件。\",\"如果遇到错误 [ERR_MODULE_NOT_FOUND]: Cannot find package，则将 package.json 放在 demo project 中生成 lock 文件，比对 lock 文件是否为正确生成依赖树，将正确的 lock 文件复制到项目下。\",\"每个插件和主题版本只支持一个 VuePress 版本，因此要稳定的话，需用固定版本号的环境依赖才可以，比如主题 vuepress-theme-hope@2.0.0-beta.155 仅支持 vuepress@2.0.0-beta.60。如果要测试最新的环境配置，可使用 pnpm add vuepress@next vuepress-theme-hope@next @vuepress/plugin-google-analytics@next @vuepress/plugin-search@next @vuepress/plugin-docsearch@next && pnpm i && pnpm up。\"]},{\"header\":\"搜索插件\",\"slug\":\"搜索插件\",\"contents\":[\"本地搜索插件：search 根据你的页面，在本地生成搜索索引，然后在用户访问站点时加载搜索索引文件。默认情况下，该插件会将页面标题和小标题作为搜索索引。\",\"在线搜索插件：algolia DocSearch 使用在线爬虫抓取全站，并提供网站搜索索引，抓取周期为一周。开源文档可以申请官方爬虫支持，商业化内容需要自己设置爬虫。\",\"在 algolia 爬虫管理页 修改爬虫抓取规则，然后手动触发爬虫进行全站搜索。之后，algolia 搜索数据库 可以查看搜索次数与数据。\"]},{\"header\":\"Webpack 打包\",\"slug\":\"webpack-打包\",\"contents\":[\"VuePress v2 默认使用 Vite，打包时会引入时间戳和 hash 对文件重命名，导致网站大部分的文件发生更改。即使你并没有更新文章，生成的静态文件也会改变。比如我的笔记网站用的 VuePress 默认配置，每次服务器部署需要 5-15 分钟。\",\"如果不想每次架构都重命名文件，可以复制「nohashname」branch。我把 nohashname 分支的打包工具换成了 Webpack，并用 chainWebpack 设置文件命名规则，避免文件非必要重命名。\",\"修改 config.ts 的导入设置，将 import { defineUserConfig } from \\\"vuepress\\\" 替换为 import { defineUserConfig } from \\\"@vuepress/cli\\\"，将 import { viteBundler } from \\\"@vuepress/bundler-vite\\\" 替换为 import { webpackBundler } from \\\"@vuepress/bundler-webpack\\\"。\",\"Webpack 环境依赖包安装，并运行服务。\",\"#组合命令，打包使用 Webpack pnpm add vuepress@next vuepress-theme-hope@next && pnpm remove vuepress && pnpm add vuepress-webpack@next sass-loader && pnpm i && pnpm up #运行在本地服务器 yarn docs:dev \",\"组合命令也能解决报错，升级相关依赖包。相关命令的分步解释见下方。\",\"#确保你正在使用最新的 vuepress 和 vuepress-theme-hope 版本 pnpm add vuepress@next vuepress-theme-hope@next #更换打包工具，Webpack 需手动下载 sass-loader pnpm remove vuepress pnpm add -D vuepress-webpack@next sass-loader #常用插件：google-analytics，search pnpm add @vuepress/plugin-google-analytics@next @vuepress/plugin-search@next #升级当前目录的依赖以确保你的项目只包含单个版本的相关包 pnpm i && pnpm up \",\"修改文件命名规则：打开 config.ts，使用 webpack-chain 修改 webpack 输出文件名规则，停止对 js 文件 hashname。[1].filename 加路径容易报错，这里只把 chunk 文件放入子文件夹。\",\"export default defineUserConfig({ bundler: webpackBundler({ chainWebpack(config) { // do not use chunk hash in js //参照案例：https://github.com/vuepress/vuepress-plugin-named-chunks/blob/b9fb5a1d3475530b1d74b6616f92a6e3bf14a7ed/__tests__/docs/.vuepress/config.js config.output .filename(`[name].js`) .chunkFilename(\\\"assets/chunks/[name].js\\\"); }, }), }); \",\"在查找 chainWebpack 配置前，我依照 vue.config.js 的指引添加了 filenameHashing: false，但是 VuePress 并未停止 hashname。事实上，我理解错了。根据 @Mister-Hope 的说明，「这里的 filenameHasing 是 vue-cli 自己加的一个属性。拿到这里当例子很奇怪。就好比你按照 iOS 使用手册去设置 Android 结果无效，本不应该有效。另外本身为了防止应用程序出错，你也从不应该移除 hash。」\"]},{\"header\":\"关闭 prefetch\",\"slug\":\"关闭-prefetch\",\"contents\":[\"preload 是一种声明式的资源获取请求方式，用于提前加载一些需要的依赖，并且不会影响页面的 onload 事件。prefetch 是一种利用浏览器的空闲时间加载页面将来可能用到的资源的一种机制；通常可以用于加载非首页的其他页面所需要的资源，以便加快后续页面的首屏速度。preload 主要用于预加载当前页面需要的资源；而 prefetch 主要用于加载将来页面可能需要的资源。\",\"VuePress Build 配置项默认开启了 preload 和 prefetch。但是，开启了 prefetch，所有其它页面所需的文件都会被预拉取。页面较多或服务器宽带后付费的话，建议关闭 prefetch。\",\"docs\\\\.vuepress 路径下的 config.ts 配置中插入 shouldPrefetch: false,，即可关闭 prefetch。\"]},{\"header\":\"页面模板\",\"slug\":\"页面模板\",\"contents\":[\"VuePress 页面生成规则基于主题模板，如果修改全站 html 内容，最简单的方式就是修改模板。\",\"我的主题模板文件是 @vuepress-theme-hope/templates/index.build.html，将其下载到本地后，修改为你想要的样式，放入 .vuepress 文件夹内。最后在 config.ts 中添加代码，即可启用修改模板。\",\"import { path } from \\\"@vuepress/utils\\\"; export default defineUserConfig({ ... templateBuild: path.resolve(__dirname, \\\"index.build.html\\\"), }); \",\"除修改页面模板外，也可以通过修改 config.ts 配置来添加自定义标签。插入下方代码后，网站所有页面都会在 header 前添入对应代码，其效用等同于 <meta name=\\\"keywords\\\" content=\\\"关键词，内容标签，相关词\\\"> 和 <img referrerpolicy=\\\"no-referrer-when-downgrade\\\" src=\\\"https://tongji.newzone.top/matomo.php?idsite=7&amp;rec=1\\\" style=\\\"border:0\\\" alt=\\\"\\\" />。\",\"head: [ [ \\\"meta\\\", { name: \\\"keywords\\\", content: \\\"关键词，内容标签，相关词\\\", }, ], [ \\\"img\\\", { referrerpolicy: \\\"no-referrer-when-downgrade\\\", src: \\\"https://tongji.newzone.top/matomo.php?idsite=7&amp;rec=1\\\", style: \\\"border:0\\\", alt: \\\"\\\", }, ], ], \"]},{\"header\":\"时间参数\",\"slug\":\"时间参数\",\"contents\":[\"vuepress-plugin-seo2 在网页中插入 og:updated_time 和 article:modified_time，这两个参数都引用自 page.git.updatedTime。theme.ts 中无法设置 ogp。你需要打开 config.ts，使用 vuepress-plugin-seo2 的 ogp 参数重新设置 meta，并删除你不想要的参数。根据 @Mister-Hope 的说明:「API 的设计很容易理解，就是给你个自动生成的对象然后等你返回。所以你只需要在原对象上把属性删掉，返回这个对象就是了。」\",\"import { seoPlugin } from \\\"vuepress-plugin-seo2\\\"; export default defineUserConfig({ ... plugins: [ seoPlugin({ hostname: \\\"https://vuepress-theme-hope.github.io\\\", ogp: (ogp, page) => ({ ...ogp, \\\"og:updated_time\\\": \\\"\\\", \\\"og:modified_time\\\": \\\"\\\", }), ], }); \",\"另外，如果想停止向页面导入 lastUpdated 参数，在 theme.ts 中插入 lastUpdated: false 即可。\",\"export default hopeTheme({ lastUpdated: false, }); \"]},{\"header\":\"自定义主题\",\"slug\":\"自定义主题\",\"contents\":[\"插入 Bilibili 或第三方视频，可使用专用 组件库，配置参考 组件案例 config.ts.\",\"插件docsearch：将 Algolia DocSearch 集成到 VuePress 中，为你的文档网站提供搜索功能。\",\"README 页面如何隐藏，使用 index: false，参考主题设置\",\"去 meta 标签，测试并未成功，不再尝试\",\"waline 评论插件，无需账户，更适合大众。\",\"google analytics 没反应，实际已经包含在 js 中了\",\"不用自动开启一堆的网站，关闭 prefetch\",\"生成文件名固定化，chainWebpack\",\"网页更新时，有时会打不开链接，需要使用缓存。\",\"VuePress 博客页面：frontmatter 中添加 order 参数让最新的文章往上排，无法按文件名倒序排列\",\" 全局路径需要给子目录添加 README.md，没那么多内容填，暂时放弃。\",\" 独立设置页面标题。未成功，所有页面都会加入默认标题。\",\" 侧边栏显示客服图片。icon 位置直接放链接也没用。\",\" 指定页面子标题不被目录页识别。但页面中取消 toc 的话，网页位置会出现偏移。\",\"修改导航栏 brand 链接，需用本地文件替代 主题默认设置。设置的 ts 未生效，暂时放弃。\",\"子域名中部署 blog 和 note，分别使用不同路径。这方案可以与 WordPress 共存，但未了避免后续出错，还是取消了。\",\"Giscus 评论区设置\",\"导航栏添加 repo 位置\",\"页面统计，插件只支持 Google、百度，然后用图片标签方式植入统计。直接修改页面模板，放入统计链接。备用方法：将统计代码直接放在侧边栏。\",\"定制页面标签：config.ts 中添加全局 head 标签，或在页面中添加 独立 head 标签，支持图片统计代码。\",\"将 docs 里的 README.md 转移到主目录中，保持 github 项目页的同步。\",\"打开页面链接，侧边栏焦点能不能也移动过去。侧边栏标题需要能在首屏出现，才能激活焦点。\",\"默认主题颜色为白天，虽然不能切换，但发稿用白色就行。\",\"设置导航栏自动隐藏\",\"隐藏编辑时间和贡献者\",\"用 md 控制图片是，图片不能显示。这可能是因为主题默认的 lazy 加载，改用七牛云的图片属性控制尺寸。\",\"chainWebpack 常用配置方式↩︎\"]}]},\"/web/docsify.html\":{\"title\":\"docsify\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"docsify 是一个神奇的文档网站生成器，可以快速帮你将 .md 文档生成为网站。docsify 入门简单且无需服务器，非常适合个人笔记的简单整理分享。\",\"本页集中了我使用 docsify 中遇到的问题，新手先看 docsify 入门文档。\"]},{\"header\":\"插件\",\"slug\":\"插件\",\"contents\":[\"docsify 插件列表：\",\"docsify 笔记类参考：看板娘，多级页面，页面点击效果，网站运行时间。\",\"docsify-count：docsify 的字数和阅读时长插件。\",\"docsify-waline：提供评论功能的同时，借用 docsify-count 接口展示阅读量。暂时停止 1300 宽度的 waline 显示，避免页面显示异常。\",\"docsify-toc：给笔记页内部添加目录。不过本插件与 gitalk、waline 冲突，页面宽于 1300px 时出现 toc 目录，评论区位置也跟着挤到页面顶部，需手动修改。参考链接：Tainacan Wiki，Sureness，lifeupapp。\",\"docsify-pdf-converter：将 docsify 转为 pdf，不带书签目录。\",\"illegal operation on a directory 报错：sidebar 中不要使用简写地址，将 main/ 改为 main/README.md，否则将读取到目录而报错。\",\"'node_modules' 不是内部或外部命令 报错：将 package.json 的设置修改为 \\\"convert\\\": \\\"node_modules\\\\\\\\.bin\\\\\\\\docsify-pdf-converter\\\"。这问题多发生在 Windows，是由 Windows 与 Linux 路径规则不同而引起的。\"]},{\"header\":\"配置\",\"slug\":\"配置\",\"contents\":[]},{\"header\":\"docsify emoji\",\"slug\":\"docsify-emoji\",\"contents\":[\"emoji 插件在标题中使用容易出错，建议使用 &#58;。例如，原本是 :100:，替换为 &#58;100:。\",\"实际使用中，我直接复制 emoji，都能正常显示。\"]},{\"header\":\"本地命令\",\"slug\":\"本地命令\",\"contents\":[\"docsify 本地命令:\",\"<path> 默认为当前路径，可使用子文件夹指定路径，如 ./docs 或 docs。\",\"[] 为可省略命令区，无实际作用，输出时需要去除。\"]},{\"header\":\"Serve 启动\",\"slug\":\"serve-启动\",\"contents\":[\"若要在电脑上查看 docsify 页面，可执行 serve 架构命令，在本地主机上运行服务。默认本地端口为 3000，可以指定端口。\",\"docsify serve <path> [--open false] [--port 3000] \",\"使用时不要关闭命令终端，否则 serve 也会停止。\"]},{\"header\":\"生成侧边栏\",\"slug\":\"生成侧边栏\",\"contents\":[\"docsify generate <path> [--sidebar _sidebar.md] \",\"generate 命令会遍历指定目录及其子目录的所有 markdown 文件，并生成全路径的 _sidebar.md。<path> 不能省略，需指定子文件夹路径。\",\"如果路径中存在 _sidebar.md，则会报错。\"]},{\"header\":\"常见问题\",\"slug\":\"常见问题\",\"contents\":[]},{\"header\":\"引用路径\",\"slug\":\"引用路径\",\"contents\":[\"docsify 引用内部文件时，路径会自带添加域名。\",\"例如：指向子文档时，链接是 子文件夹/文档名.md；指向子文档的小标题时，链接是 子文件夹/文档名？id=小标题。\"]},{\"header\":\"页面未同步更新\",\"slug\":\"页面未同步更新\",\"contents\":[\"CDN 默认是有缓存的，如果文件更新，访问的可能不是最新的文件。\",\"我设置了 routerMode 为 history，使用 CDN 访问非首页，再次刷新会找不到文件。\",\"如果开启了 relativePath: true，文件可以找到，但是侧栏上边的标题点击又有点问题。\"]},{\"header\":\"GitHub Pages 报错\",\"slug\":\"github-pages-报错\",\"contents\":[\"如果 SSL 链接 404 报错，显示「There isn't a GitHub Pages site here」，则目录中加入 CNAME 文件。\"]}]},\"/windows/NewSystem.html\":{\"title\":\"系统重装\",\"contents\":[{\"header\":\"重装准备\",\"slug\":\"重装准备\",\"contents\":[\"备份必备应用，油猴脚本，输入法配置，UMP 版微信聊天记录 C:\\\\Users\\\\Benson\\\\AppData\\\\Local\\\\Packages\\\\TencentWeChatLimited.forWindows10_sdtnhv12zgd7a\\\\LocalCache\\\\Roaming\\\\Tencent\\\\WeChatAppStore。\",\"核对群晖已同步到最新备份。\",\"反激活已购软件，如：Eagle、MoneyWiz、妙笔。\",\"更新原版镜像。\"]},{\"header\":\"安装系统\",\"slug\":\"安装系统\",\"contents\":[\"系统重装/维修前，在 NTFS/exFAT 格式的 U 盘上安装优启通或微 PE 工具箱。Windows 10/11 镜像超过 4GB，已经不再支持 FAT32 格式的 U 盘。\",\"使用 U 盘引导安装系统：\",\"本地安装：右键 ISO 文件，选择挂载；在新出现的驱动器中，找到 setup.exe，直接运行；选择「现在安装」。\",\"引导安装：采用 UEFI+GPT。如果是自定义安装清空系统盘所有分区后，一定要用 GPT 对系统盘分区。\"]},{\"header\":\"系统配置\",\"slug\":\"系统配置\",\"contents\":[\"将电脑调整到高性能/卓越模式。\",\"将 Documents、Desktop 转移到 D 盘。\",\"任务栏：在任务栏底部右键单击，选择「任务栏设置」>「通知区域」>「选择哪些图标显示在任务栏上」；在同页面的「多显示器设置」中，取消「在所有显示器上显示任务栏」。\",\"清理导航栏。\",\"设置系统强制关机，防止系统关机不成功。\",\"Everything 注册右键搜索当前路径；右键清除。 \",\"win+r，regedit 打开注册表，打开路径 HKEY_CLASSES_ROOT\\\\Directory\\\\Background\\\\shell。\",\"新建项，命名随意（即右键菜单显示的文字）-「Everything 搜索当前路径」。\",\"右键再次新建项，命名 Command，打开修改右侧默认值为 \\\"D:\\\\Everything\\\\Everything.exe\\\" -path \\\".\\\"。\",\"显示屏参数：屏幕换线或换主机，参数可能会变动。 \",\"左侧：自定义颜色，红 70 绿 75 蓝 50；亮度 66，对比 75。\",\"右侧 0020：自定义颜色，红 70 绿 75 蓝 50；亮度 50，对比 80。\"]},{\"header\":\"安装应用\",\"slug\":\"安装应用\",\"contents\":[\"winstall 批量安装应用；\",\"电脑运行 Android 手机应用，Win11 安卓子系统 (WSA) 安装；\",\"Synology Drive：设置 NAS 本地备份；\",\"Mircrosoft Store：Snipaste、微信 For Windows；\",\"绿色开机：Keepass、Ditto、RunAny、天若 OCR；WPS 安装宏；\",\"配置：Eagle、RIME、Picgo、wonderpen；\",\"firefox-about:config 修改原值 18 的 ui.key.menuAccessKey 为 0，以屏蔽 alt 防止热键冲突；选择「options」>「Network Settings」，取消勾选「DNS over HTTPS」；\",\"火绒－安全设置－高级防护－导入隐私规则，增加腾讯屏蔽规则。\"]},{\"header\":\"修改按键\",\"slug\":\"修改按键\",\"contents\":[\"Powertoys：将 insert 键改为 backspace；\",\"Option：计算器改为「上一个桌面」；右键菜单改为「下一个桌面」。\"]},{\"header\":\"常见问题\",\"slug\":\"常见问题\",\"contents\":[\"Win11 本地账户也被提示需要登录密码，但设置密码后，无法直接开机登录。设置新密码后，点击「设置」>「账户」>「登录选项」>「密码」，可以重新设置空密码，实现自动登录。\",\"WSL 从 C 盘迁移至 D 盘的简单实用方法\",\"英语键盘删不掉：添加英语语言包，然后再删除，英语键盘也会一起删除。\",\"右键更改前先备份注册表，有几率会影响系统稳定性。\",\"实时将音频转文字：管理员方式安装 VB-CABLE，输入输出设备都选 VB-CABLE，详细设置查看 How to Convert Audio to Text - FREE & No Time Limits。\",\"开机用管理员权限启动脚本。\"]}]},\"/windows/QTTabBar.html\":{\"title\":\"QTTabBar\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"QTTabBar 让你在 Windows 资源管理器中使用 Tab 多标签功能。这款应用存在两个版本，一个是日本作者 @Quizo 的原版 QTTabBar（闭源，更新慢），另一个是国内反编译出的开源 QTTabBar。\",\"目前两个版本都存在相同问题，菜单栏是灰色的选不了 QTTabBar，IE 管理加载项里是空的，第三方扩展也启用了。\"]},{\"header\":\"安装\",\"slug\":\"安装\",\"contents\":[\"安装完成后，资源管理器地址栏->输入「控制面板」->按下 ALT->查看->工具栏->勾选「QTTabBar」，即可开启 QTTabBar。[1]\",\"有时选项里找不到 QTTabBar，这可能是因为你的 IE 浏览器禁止了第三方插件导致的。\",\"解决办法：打开 IE 浏览器，点击「设置」>「Internet 选项」>「高级」，勾选「启用第三方浏览器扩展」，重启后生效。如果重启之后还是没有找到 QTTabBar，则打开 IE 浏览器，选择「设置」>「管理加载项」，点击启用再确认一次。\",\"启用 QTTabBar 后，IE 浏览器可能变得怪怪的，别担心，把两片白色区域 x 掉，再次启动 IE 再 x 一次然后就恢复正常了。\"]},{\"header\":\"QTTabBar 失效\",\"slug\":\"qttabbar-失效\",\"contents\":[\"2022.05 补丁 KB5012643 KB5012159 导致 QTTabBar 失效。\",\"管理员方式运行命令提示符 dism /online /enable-feature /featurename:netfx3 /all，执行完成重启电脑。\"]},{\"header\":\"常用设置\",\"slug\":\"常用设置\",\"contents\":[\"QTTabBar 的选项非常强大，有空可以慢慢研究、打造自己趁手的多标签资源管理器。以下为常用的设置项，√ 表示启用，× 表示禁用。\"]},{\"header\":\"汉化\",\"slug\":\"汉化\",\"contents\":[\"对准多标签栏的空白处右键单击 QTTabBar Options，点击右侧带下载图标的 Download Language File 按钮。建议下载 Author 为 MCRy 的中文语言包，然后回到 QTTabBar Options，选择刚才下载的翻译文件，保存选项。再重新打开这个界面时，就是中文的了。\"]},{\"header\":\"选项卡/标签设置\",\"slug\":\"选项卡-标签设置\",\"contents\":[\"× 添加“+”按钮到 选项卡栏（嫌丑。我们可以通过鼠标滚轮点击文件夹或左侧盘符来新建标签页\",\"× 在选项卡上显示关闭按钮（嫌丑 x2。熟悉 Chrome 的都知道 Ctrl+W 关闭当前标签、滚轮点击标签也可关闭。这两种快捷方式在这里同样适用\",\"√ 已锁定选项卡的行为 - 禁止关闭窗口（Ctrl+L 锁定标签，被锁定的标签无法被关闭。开启此项后整个窗口也无法被关闭，防止误操作\",\"√ 按 Ctrl+Tab 显示选项卡切换器（挺好用\"]},{\"header\":\"窗口\",\"slug\":\"窗口\",\"contents\":[\"√ 捕获窗口 - 通过 ShellExecuteHooks 捕获窗口（听说不开它 Win+E 就不显示 QTTabBar。\"]},{\"header\":\"鼠标事件\",\"slug\":\"鼠标事件\",\"contents\":[\"互动 - 点击标签栏的 + 按钮，打开桌面。\",\"窗口和任务栏 - 窗口的关闭按钮 - 关闭窗口（这是 Clover 的遗留习惯吧。看个人爱好。\"]},{\"header\":\"预览\",\"slug\":\"预览\",\"contents\":[\"× 扩展、字体和颜色 - 删除掉一些视频文件格式（默认开启的视频预览没啥卵用，还会导致鼠标移动顿卡。\"]},{\"header\":\"群组\",\"slug\":\"群组\",\"contents\":[\"建立群组，并将其设为启动群组。打开 expoloer 会自动启动。\",\"Windows11 安装 qttabbar↩︎\"]}]},\"/windows/faq.html\":{\"title\":\"Windows\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"Windows 遇到不懂的问题，可以在 Microsoft 支持社区中提问，回复比较快。\"]},{\"header\":\"Windows 快捷键\",\"slug\":\"windows-快捷键\",\"contents\":[\"快捷键\",\"功能\",\"Win 键 + 数字键\",\"启动任务栏的快捷方式\",\"Win 键 + D\",\"显示桌面，再点击一次后恢复\",\"Win 键 + E\",\"快速启动文件资源管理器\",\"Win 键 + Tab\",\"查看当前桌面打开的窗口和所有桌面\",\"Win + Ctrl + L\",\"实时字幕（Windows 11）\",\"Win + Ctrl + D\",\"创建新的虚拟桌面，新桌面里没有打开窗口\",\"Win + Ctrl + 左/右\",\"切换虚拟桌面\",\"Win + I\",\"系统设置\",\"Win 键 + 向上键\",\"最大化窗口 (传统桌面)\",\"Win 键 + 向下键\",\"最小化窗口 (传统桌面)\",\"Win 键 + 向左键\",\"将窗口最大化到屏幕的左侧 (传统桌面)\",\"Win 键 + 向右键\",\"将窗口最大化到屏幕的右侧 (传统桌面)\",\"Ctrl+W\",\"关闭标签页\",\"Alt+F4\",\"关闭当前程序窗口\",\"%AppData% 为 C:\\\\Users\\\\用户名\\\\AppData\\\\Roaming 的变量路径。[1]\"]},{\"header\":\"网址快捷方式\",\"slug\":\"网址快捷方式\",\"contents\":[\"右键单击桌面，选择「新建」>「快捷方式」，输入浏览器运行路径、空格和要访问的网址链接，例如：\\\"C:\\\\\\\\Program Files (x86)\\\\\\\\Google\\\\\\\\Chrome\\\\\\\\Application\\\\\\\\chrome.exe\\\" https://newzone.top/。\",\"如果需要一次打开多个网址，则在参数后继续添加「空格 链接」。\"]},{\"header\":\"Chrome 开发工具\",\"slug\":\"chrome-开发工具\",\"contents\":[\"网页重定向时，无法在开发工具中看到重定向时打开的网页。\",\"点击 F12-Settings-Throttling，增加浏览器的网络延时，来查看跳转路径。到达中转页面时，可在开发工具中将网络改为 Offiline，网页将停止加载。\",\"Preserve log：不在网页刷新或重定向后，清楚加载日志\",\"Disbale cache：不使用网页缓存\",\"Online：定制本地与服务端的网络环境，下载速度、上传速度、延时。\"]},{\"header\":\"网页转桌面应用\",\"slug\":\"网页转桌面应用\",\"contents\":[]},{\"header\":\"Chrome App\",\"slug\":\"chrome-app\",\"contents\":[\"使用 Chrome 浏览器来给我们的网页生成一个「桌面应用」。\",\"用 Chrome 浏览器打开想要转换为「桌面客户端」的网页，将登录后正常使用状态的网页 URL 收藏到书签栏。\",\"打开 Chrome App 页面：chrome://apps，将刚刚收藏的标签页项目拖拽到下面的空白处，在应用图标上右键，勾选「在窗口中打开」，然后点击创建快捷方式。\",\"图标转换： ConvertICO 将 png 图片转化为 ico 文件，从而自定义图标。\"]},{\"header\":\"Pake\",\"slug\":\"pake\",\"contents\":[\"Pake 用 Rust 打包网页生成很小的桌面 App，支持 Mac / Windows / Linux 系统，并提供热门网页的大包文件。\"]},{\"header\":\"Nativefier\",\"slug\":\"nativefier\",\"contents\":[\"利用开源的 Nativefier 能将网页转制成为一个 可安装的 桌面应用，支持 macOS 10.9+ / Windows / Linux 系统。其原理就是将网页利用 Electron 技术将网页内容封装起来，成为一个可执行、可安装的应用程序。\",\"然而这样的方式需要一些比较复杂的安装配置。由于 Nativefier 是 Node.js 编写的，所以不仅需要安装 Node.js 环境，还要安装 npm 包管理器，才可以通过 npm install nativefier -g 安装 Nativefier。安装之后 Nativefier 也只有命令行的交互方式，没有图形化界面。\"]},{\"header\":\"Web2Desk\",\"slug\":\"web2desk\",\"contents\":[\"Web2Desk 让我们可以直接输入网页链接、应用名称和应用图标，然后经过其在服务器上面的构建，直接给我们提供 Windows、macOS 和 Linux 的原生安装程序的下载。\",\"但测试中，用 Web2Desk 转换滴答清单 Web, 无法记录登陆状态，实用性较低。\"]},{\"header\":\"常见问题\",\"slug\":\"常见问题\",\"contents\":[]},{\"header\":\"无法切换中英文\",\"slug\":\"无法切换中英文\",\"contents\":[\"突然出现中英文无法切换，大部分情况是因为硬件出了问题，与输入法无关。\",\"检查方法：安装并启动 AutoHotkey，点击「view」>「Key history and script info」。窗口会显示最近的按键历史，当发现一个键在疯狂重复时，很有可能就是出问题的按键。\",\"修复方法：键盘上重复按下该按键，看看是否能修复。如果不能修复，可以拔下键盘 USB，单独使用软键盘，测试按键是否正常。如果软键盘正常，键盘配件又无法修复，可以通过 Powertoys 或 AutoHotkey 禁用这个按键。\"]},{\"header\":\"禁止系统自动更新重启\",\"slug\":\"禁止系统自动更新重启\",\"contents\":[\"Win11 中，在注册表中进入「计算机\\\\HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\WindowsUpdate\\\\AU」，新建 DWORD（32 位）值，将其重命名为「NoAutoRebootWithLoggedOnUsers」，并将键值改为 1。\",\"Win10 中，没有找到类似的注册表，可以直接关闭自动更新。\"]},{\"header\":\"WPS 没有宏\",\"slug\":\"wps-没有宏\",\"contents\":[\"让 wps 支持 vba 宏，安排 WPS VBA 模块 V7.1 版本；点击「选项」>「信任中心」>「启用宏」，添加为受信任的文档，或添加主要文件夹为信任位置。\",\"开启聚光灯效果：「视图」>「阅读模式」，每个文件需要单独开启，文件保存后自动开启。\"]},{\"header\":\"Microsoft Store 应用快捷方式\",\"slug\":\"microsoft-store-应用快捷方式\",\"contents\":[\"Microsoft Store 安装的应用没有固定位置，一更新就会换位置，无法建立快捷方式。虽然这些应用能被设为开机启动，但经常启动不成功。\",\"解决方法是：右键 Microsoft Store 应用，将其固定在任务栏。之后可使用 Win+数字键 来启动应用。例如，若应用在任务栏的第 7 位，则使用热键 Win+7。\"]},{\"header\":\"无法安装应用\",\"slug\":\"无法安装应用\",\"contents\":[\"安装应用却被提示「您的安全设置不允许将此应用程序安装到您的计算机上」时，新建记事本并输入下方代码，修改记事本的后缀名为.reg，然后右键以管理员身份运行，合并到注册表就可以了。[2]\",\"Windows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINE\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\.NETFramework\\\\\\\\Security\\\\\\\\TrustManager\\\\\\\\PromptingLevel] \\\"MyComputer\\\"=\\\"Enabled\\\" \\\"LocalIntranet\\\"=\\\"Enabled\\\" \\\"Internet\\\"=\\\"Enabled\\\" \\\"TrustedSites\\\"=\\\"Enabled\\\" \\\"UntrustedSites\\\"=\\\"Disabled\\\" \",\"Windows 变量路径↩︎\",\"Unable to Install ClickOnce Application due to Security Settings↩︎\"]}]},\"/apps/livestreaming/0_live_equipments.html\":{\"title\":\"直播入门攻略零 | 硬件篇：直播设备\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"直播已经成为一种主流的传播方式，几乎所有的行业都会使用它。经过两年的持续直播，我总结出了一套直播入门攻略，从设备、软件和技巧三个方面，帮助你快速入门直播，开始自己的直播之旅。\",\"本文是直播入门攻略的前置篇，主要介绍直播所需的设备，以及如何避免购买不必要的高价设备。直播设备可分为电脑、补光灯、稳定器（三脚架）、音频采集（收音器）和视频采集（摄像头）。\"]},{\"header\":\"电脑\",\"slug\":\"电脑\",\"contents\":[\"OBS 直播对电脑配置要求较高，建议使用三年内购买的主流配置台式机。台机推荐预算在一万元以上，显卡为 3060 以上，内存为 32G。\"]},{\"header\":\"补光灯\",\"slug\":\"补光灯\",\"contents\":[\"露脸主播一定要配柔光灯或环形灯，可以提升颜值。如果带眼镜的话，可以用小型补光灯代替环形灯，以免反射出光圈影响视觉。补光灯可以放在正面 45 度成蝴蝶光（派拉蒙光），可以显瘦显轮廓；背后可以使用辅助光或一张白纸反光，以防止正面灯光太亮。\"]},{\"header\":\"三脚架\",\"slug\":\"三脚架\",\"contents\":[\"三脚架主要有两类：桌面款，建议高度为 55cm；站立款，建议高度为 210cm。价位从 10-500 元不等，效果无明显区别，新手用户的三脚架预算建议不要超过 100 元。\"]},{\"header\":\"音频采集\",\"slug\":\"音频采集\",\"contents\":[\"收音设备的费用从几元到几千元不等。手机的收音性能比绝大多数话筒好，如果你使用手机摄像方案，可以先不用购买收音器材。\",\"廉价麦克风存在收音范围窄、不清晰、多噪音等问题，但价格低廉、使用方便，适合新人测试使用。\",\"桌面直播多使用「声卡 + 话筒」方案，预算需要超过一千元。不要购买廉价的山寨声卡，还不如手机收音来得清晰。\",\"外出直播或进阶用户推荐 RODE 或 DJI 的无线麦克风，这两款音频水准都可以吊打同行。RODE 是老牌话筒厂家，音质有保障；DJI 麦克风推出不久，但集百家之长，设计非常人性化，小白使用也很方便。\"]},{\"header\":\"视频采集\",\"slug\":\"视频采集\",\"contents\":[\"桌面摄像头、手机和微单相机都可以作为直播的视频采集来源。\"]},{\"header\":\"摄像头\",\"slug\":\"摄像头\",\"contents\":[\"桌面摄像头的价格在 50-1000 元不等，但实际效果没有太大的区别。个人体验过罗技 C930 后，发现画面模糊不清晰，将问题反馈给客服后得知，画质不清晰是桌面摄像头的通病。\",\"不管是几十元的廉价摄像头还是上千元的罗技 C1000，它们的实际像素都只有 200 万。宣传中的 2000 万像素是通过软件放大的效果，画质并没有实质性的变化。入门用户可以选择 100 元的自动变焦摄像头。\",\"桌面摄像头搭配三角架可以调整更佳的角度，购买时要注意摄像头是否有三脚架接口。\"]},{\"header\":\"手机\",\"slug\":\"手机\",\"contents\":[\"如果室内没有桌面摄像头，而又想用电脑做直播推流，可以考虑用手机替代摄像头，步骤可参考下方介绍。\"]},{\"header\":\"相机\",\"slug\":\"相机\",\"contents\":[\"相比摄像头的算法像素效果，只有相机才能达到真正意义上的高清直播。\",\"如果你的相机有外接视频接口（例如：HDMI、mini HDMI、SDI），可以通过视频采集卡将相机视频转为直播视频传入电脑。索尼、佳能等主流相机都有专门的直播软件，不需要采集卡就可以直接连接电脑进行直播。运动相机 GoPro 也已经支持相机直播传输，希望国内厂商也能跟上。\",\"将相机用作摄像头的费用较高，一般需要几千到几万，只建议已购买相机的主播采用此方案。\"]},{\"header\":\"手机作摄像头\",\"slug\":\"手机作摄像头\",\"contents\":[]},{\"header\":\"Camo\",\"slug\":\"camo\",\"contents\":[\"Camo 专用于 iOS 设备，连接数据线后可将 iPhone 或 iPad 变为直播摄像头。\"]},{\"header\":\"NDI\",\"slug\":\"ndi\",\"contents\":[\"NDI 是最稳定的，可自由调节拍摄参数。打开 NDI 应用后，需等待 NDI 界面周边出现绿框或红框，OBS 才可以识别到摄像头。不过 NDI 是收费应用，安卓用户可使用 NDI 调试 APK。\"]},{\"header\":\"IP Webcam\",\"slug\":\"ip-webcam\",\"contents\":[\"IP Webcam 的推流稳定性一般，容易掉帧，但 IP Webcam 免费版足够个人使用。\",\"下文为 IP Webcam 基础设置：\",\"进入 IP Webcam 设置页面，将流质量调整至 90%，视频分辨率设为 720p，可有效减少卡顿。IP camera 耗电低，适合手机长时间直播，支持视频与浏览器等方式。\",\"在 OBS 中，选择「场景」>「来源」>「媒体源」，取消勾选本地文件，「输入」项中填入 IP Webcam 视频地址，例如 http://192.168.2.234:8080/video。\",\"OBS 中选择「场景」>「来源」>「浏览器」，「URL」项中填入 IP Webcam 浏览器全屏地址，例如 http://192.168.2.234:8080/jsfs.html。注意：浏览器推流容易出现闪屏。\"]},{\"header\":\"其他\",\"slug\":\"其他\",\"contents\":[\"如果出现闪退等问题，可尝试 iriun webcam、DroidCam 和 ivcam。\",\"不推荐使用无他伴侣，尽管国内有大量教程介绍它，但使用中会出现很多问题，例如：摄影角度很难控制；无法使用 FaceRig 等变脸应用；直播 10 分钟后，摄像头经常自动与 OBS 断开连接；直播 2 小时后，OBS 无法检测到无他伴侣。\"]}]},\"/apps/livestreaming/1_obs_basic.html\":{\"title\":\"直播入门攻略一 | OBS 篇：OBS 29 新手指南\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"Open Broadcaster Software（OBS）是一款免费开源的视频录制和直播应用，支持 Windows、Mac 和 Linux 平台。大部分直播软件都是基于 OBS 内核开发的。无论你准备在哪个平台直播，OBS 都是最推荐的直播入门软件。本文将从基础开始，为新手介绍 OBS 的界面、设置和直播使用方法。\"]},{\"header\":\"主界面\",\"slug\":\"主界面\",\"contents\":[\"OBS 界面看起来有些复杂，但可以分为菜单栏、预览区、主按钮区和运行状态四个区块。日常使用中，我们只需要接触主按钮区，它包括场景、来源、混音器、转场特效和控制按钮。\",\"OBS 主界面\"]},{\"header\":\"场景\",\"slug\":\"场景\",\"contents\":[\"场景（Scenes）是指直播中不同的场面。不同的场景可以用于不同的领域或场合，例如自习室场景、街拍场景、个人访问、卖货直播。\",\"场景有四个按钮，从左到右依次为：添加场景，删除场景，向上移动场景，向下移动场景。\",\"场景按钮\"]},{\"header\":\"来源\",\"slug\":\"来源\",\"contents\":[\"来源（Source）是指场景中的素材，比如摄像头画面、图像、音频等。来源区有 7 个按钮，上方两个为源属性和滤镜，下方 5 个按钮依次为：添加来源，删除来源，源属性，向上移动源，向下移动源。\",\"来源按钮\"]},{\"header\":\"混音器\",\"slug\":\"混音器\",\"contents\":[\"混音器（Audio Mixer）是直播的音频控制器。点击混音器左下角的齿轮按钮，进入「高级音频属性」，可管理所有的音频设备。\",\"混音器设置中，「音频监听」最为重要。默认为「关闭监听」，指音频仅对直播间观众播放，主播听不到。「仅监听 (输出静音)」表示观众听不到，但主播能听到，观众可通过主播话筒的收音听到声音。「监听并输出」表示主播和观众都能听到。「监听并输出」模式中，建议主播使用耳麦，而不是话筒，否则观众容易听不清主播说话的声音，话筒声音会被输出音频盖住。\",\"直播高级音频属性\"]},{\"header\":\"转场特效\",\"slug\":\"转场特效\",\"contents\":[\"转场特效（Scene Transitions）指的是在两个场景或素材之间，采用渐变、移动、滑入滑出等技巧，实现场景或情节之间平滑过渡的效果。\"]},{\"header\":\"控制按钮\",\"slug\":\"控制按钮\",\"contents\":[\"控制按钮（Controls）区域集成了 OBS 的核心功能，按钮分别为「开始直播」「开始录制」「启动虚拟摄像机」「工作室模式」。\",\"「启动虚拟摄像机」是将 OBS 场景作为摄像头画面对外输出，适合将画面输出到不支持 OBS 推流的平台或软件。例如，抖音直播要求粉丝在一万以上才能使用 OBS 推流，而启用虚拟摄像头后，将直播摄像头设为「OBS-Camera」即可达到类似推流效果。\",\"「工作室模式」下，显示区域会分为两块：左侧为预览区，右侧为输出区。点击中间按钮「转场特效」，即可将左侧预览区输出到直播画面。\",\"工作室模式\"]},{\"header\":\"设置\",\"slug\":\"设置\",\"contents\":[\"在使用 OBS 直播前，请先点击右上角菜单栏中的「文件」>「设置」，调整 OBS 的设置。\"]},{\"header\":\"直播\",\"slug\":\"直播\",\"contents\":[\"点击「设置」>「直播」，将「服务」调整为自定义，服务器和推流码则按平台要求输入。\",\"推流服务器设置\"]},{\"header\":\"输出\",\"slug\":\"输出\",\"contents\":[\"点击「设置」>「输出」，将「输出模式」设为高级，其他设置参考下方样例。\",\"「直播设置」>「编码器」中，如果你的显卡配置不错，尽量选硬件编码，如 NVIDIA NVENC H.264。\",\"「编码器设置」>「比特率」用来设置直播的清晰度，推荐 4000-6000 Kbps。注意：直播并非越清晰越好，它对网络稳定性要求较高，过高的清晰度可能导致直播卡顿。我的自习室直播间只有 2500 Kbps。\",\"直播输出设置\"]},{\"header\":\"音频\",\"slug\":\"音频\",\"contents\":[\"点击「设置」>「音频」>「通用」，将声道设为单声道。除非你是歌唱主播，否则无需使用立体声。\"]},{\"header\":\"视频\",\"slug\":\"视频\",\"contents\":[\"点击「设置」>「视频」，按需设置直播分辨率，通常为 1920x1080 或 1280x720。如果你是做电商直播，需要进行竖屏直播，就将分辨率反过来设置，比如 1080x1920 或 720x1280。「输出（画布）分辨率」与「基础（缩放）分辨率」建议设为相同数值，避免出现缩放问题。\",\"「常用帧率」在日常直播中只需要 30，游戏直播建议调整到 60。\",\"直播分辨率设置\"]},{\"header\":\"高级\",\"slug\":\"高级\",\"contents\":[\"点击「设置」>「高级」，将「进程优先级」设为高，以降低电脑卡顿的概率。然后，启用「直播延迟」和「自动重连」功能，以避免直播事故的发生。「直播延迟」启用后，观众看到的直播画面会比实时要慢，延迟时间一般为 3~20 秒。\",\"OBS 高级设置\"]},{\"header\":\"直播来源\",\"slug\":\"直播来源\",\"contents\":[\"了解 OBS 界面和设置后，我们回到主按钮区的「来源」，深入了解来源种类和滤镜。直播来源种类繁多，可以分为四类：静态来源、音频来源、视频来源和组合来源。\",\"直播来源\"]},{\"header\":\"静态来源\",\"slug\":\"静态来源\",\"contents\":[\"文本（GDI+）：添加文字，并可设置背景和移动效果。\",\"色源：添加指定色彩的纯色画面素材。\",\"图像：添加静态图像素材。\",\"图像幻灯片放映：以幻灯片形式播放指定图像文件。\",\"浏览器：以浏览器方式显示网址内容或打开本地 html 文件。\"]},{\"header\":\"音频来源\",\"slug\":\"音频来源\",\"contents\":[\"音频输入采集：话筒输入。\",\"音频输出采集：音响输出。\",\"应用程序音频捕获：获取指定应用程序的音频输出。\"]},{\"header\":\"视频来源\",\"slug\":\"视频来源\",\"contents\":[\"视频采集设备：捕获设备的视频画面，多用于摄像头。\",\"窗口采集：捕获指定程序的窗口画面。使用窗口采集时，窗口不能最小化，否则窗口会卡住不同步。\",\"游戏源：采集游戏画面。\",\"显示器采集：捕获单个显示器的完整视频画面。\",\"媒体源：播放本地或在线的音视频文件。\",\"VLC 视频源：安装 VLC 才能启用本来源。「VLC 视频源」用于多个音视频按序播放，支持字幕。\"]},{\"header\":\"组合输出\",\"slug\":\"组合输出\",\"contents\":[\"场景：将指定场景作为来源输入当前场景中。\",\"来源镜像：将指定来源复制到当前场景。\",\"分组：将来源置于同一分组，可批量更改可见性和锁定状态。\"]},{\"header\":\"滤镜\",\"slug\":\"滤镜\",\"contents\":[\"选择「来源」>「滤镜」，可对来源素材进行裁剪、过滤、增益等多种处理。滤镜可分为效果滤镜和音视频滤镜。下文将介绍几种常用滤镜。\"]},{\"header\":\"常用滤镜\",\"slug\":\"常用滤镜\",\"contents\":[\"裁剪/填充：效果滤镜，对来源进行裁剪，剪去多余的部分。\",\"噪音阈值：音视频滤镜，当背景有噪音时，设置噪音阈值来控制底噪，降低噪音干扰。\",\"增益：音视频滤镜，当麦克风声音过大或过小时，可以通过增益滤镜调整音量，但是不宜设置数值过大，容易造成声音失真。\"]},{\"header\":\"色度键（抠图）\",\"slug\":\"色度键-抠图\",\"contents\":[\"「色度键」属于效果滤镜，能将指定颜色变为透明，多用于绿幕实时抠图，可以在直播时把绿幕替换为其他场景。\",\"色度键滤镜一键抠图\"]},{\"header\":\"模糊\",\"slug\":\"模糊\",\"contents\":[\"「模糊」属于效果滤镜，可将指定区域模糊化以维护隐私。推荐设置：类型设为「Dual Filtering（双重过滤）」，大小为 4，应用蒙版后可以选择模糊区域。与 Gaussian 类型相比，Dual Filtering 生成模糊效果最快，对配置要求更低。要使用模糊滤镜，需要安装插件 StreamFX。\",\"右侧为模糊效果\",\"模糊滤镜设置\"]},{\"header\":\"图像蒙版\",\"slug\":\"图像蒙版\",\"contents\":[\"「图像蒙版/混合」属于效果滤镜，可在摄像头（视频采集设备）上添加定制外框。其中，最常用的应用是主播圆形头像。类型选择「Alpha 蒙版（Alpha 通道）」，路径选择头像形状图片。头像形状图片可任意定制，比如在 1920*1080 的画布上画一个圆形，并填充黑色，其他区域为透明，然后将其导出为 PNG 格式。如果你不想自己画，也可以使用下方示例图片。\"]},{\"header\":\"色彩校正\",\"slug\":\"色彩校正\",\"contents\":[\"色彩校正（Color Grading）属于效果滤镜，使用伽玛、对比度、亮度、饱和度、色调偏移、不透明度、颜色叠加、添加颜色来改变或校正最终画面的颜色和亮度。\",\"色彩校正\"]},{\"header\":\"应用 LUT\",\"slug\":\"应用-lut\",\"contents\":[\"「应用 LUT」属于效果滤镜。它使用 LUT 对画面进行色彩调整，相当于手机修图用的风格滤镜，能够大大提升画面效果。初期可以使用我的 LUT 设置，「路径」指向解压后的 png 文件。\",\"自制 LUT 文件参照下列步骤：\",\"将 OBS 滤镜插件目录下的 original.png 复制到 Photoshop。\",\"进入 Photoshop 右侧的调整界面，选择第二行的最右侧「创建新的颜色查找调节图层」。\",\"载入自带的 3DLUT 文件，调整后导出为 png 文件。这个 png 就是直播能用的 LUT 文件。如果自带 LUT 不能满足需求，则使用 Premiere 调节定制 LUT cube 文件。\"]},{\"header\":\"常见问题\",\"slug\":\"常见问题\",\"contents\":[]},{\"header\":\"直播延迟严重\",\"slug\":\"直播延迟严重\",\"contents\":[\"选择「设置」>「高级」，检查「直播延迟」是否启用了。主流机器不会导致直播严重延迟，出现延迟的原因多是因为启用了「直播延迟」设置。\"]},{\"header\":\"一直断开重连\",\"slug\":\"一直断开重连\",\"contents\":[\"右下角弹出提示「OBS Studio 已断开连接。正在重新连接...」，这说明直播服务设置错误。选择「设置」>「直播」，更新服务器和推流码内容。注意：某些平台只要断开，推流码就会改变。\"]},{\"header\":\"后续\",\"slug\":\"后续\",\"contents\":[\"我原本想一篇写完 OBS 的入门，但基础使用已经占据了较长篇幅。为了避免重蹈上一篇的覆辙，OBS 插件的介绍会放在篇二更新。\"]}]},\"/apps/livestreaming/2_obs_streamfx.html\":{\"title\":\"直播入门攻略二 | StreamFX 篇：最强大的 OBS 插件\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"StreamFX 提供了来源镜像、模糊滤镜、着色器滤镜等多种效果，是 OBS 必装的效果插件。本文将介绍 StreamFX 的 28 种滤镜效果。\"]},{\"header\":\"安装 StreamFX\",\"slug\":\"安装-streamfx\",\"contents\":[\"在 StreamFX 发布页上按平台选择安装包。StreamFX for OBS 29 处于测试阶段，在升级此插件前，请按照卸载教程执行旧版清理。\",\"安装成功后，StreamFX 会出现在 OBS 上方的菜单栏上。下文中，我将使用不同滤镜处理样图，并提供对比图。\",\"样例原图\"]},{\"header\":\"来源镜像\",\"slug\":\"来源镜像\",\"contents\":[\"来源镜像（Source Mirror）是一种来源，而不是滤镜。它可以克隆任何源或场景，并将其应用于当前场景。对来源镜像叠加滤镜和任意效果，都不会对原始来源造成影响。\"]},{\"header\":\"3D 转换\",\"slug\":\"_3d-转换\",\"contents\":[\"3D 转换（3D Transform）可以将 2D 图片的坐标系转换为三维，从而可以自由旋转、移动和缩放，形成类似星球大战中的字幕特效。\",\"3D 转换\"]},{\"header\":\"模糊\",\"slug\":\"模糊\",\"contents\":[\"模糊（Blur Filter）提供五种模糊类型：Box、Box Linear、Gaussian、Gaussian Liner 和 Dual-Filtering。一般来说，建议将类型设置为「Dual Filtering（双重过滤）」，大小为 4，应用蒙版后可以选择模糊区域。与 Gaussian 类型相比，Dual Filtering 生成模糊效果最快，对配置要求也更低。\",\"右侧为模糊效果\",\"模糊滤镜设置\"]},{\"header\":\"动态蒙版\",\"slug\":\"动态蒙版\",\"contents\":[\"动态蒙版（Dynamic Mask）允许叠加任意来源或场景，并使用红色、绿色、蓝色和 alpha 通道建立画面蒙版。下图展示了使用红色通道叠加雨滴来源的效果。\",\"动态蒙版\"]},{\"header\":\"SDF 特效\",\"slug\":\"sdf-特效\",\"contents\":[\"SDF 特效（Shader Signed Distance Field Effects）仅对拥有透明图层的画面有效，比如被移除背景后的摄像头画面。SDF 特效会对外观轮廓进行发光处理，并占用大量显存性能。![什么是 SDF？] ![\\\"SDF Effects\\\" filter is undocumented]\",\"SDF 特效-外发光+变形\"]},{\"header\":\"着色器\",\"slug\":\"着色器\",\"contents\":[\"着色器滤镜位于 %ProgramFiles%/obs-studio/data/obs-plugins/StreamFX/examples/shaders/filter，后缀均为 .effect。切换着色器文件后，需点击「刷新选项和参数」。\"]},{\"header\":\"色彩滤镜\",\"slug\":\"色彩滤镜\",\"contents\":[\"colorize：对画面重新着色，效果与色彩校正滤镜相似。\",\"colorize\",\"posterize：向上下周围放入像素值。\",\"posterize\",\"smaa：将画面的轮廓线条化。\",\"smaa\"]},{\"header\":\"位移变换\",\"slug\":\"位移变换\",\"contents\":[\"bulge_pinch：挤压滤镜，使图像的中心产生凸起或凹下的效果，可生成循环凸凹的动画。\",\"displace：置换滤镜，可以产生弯曲，碎裂的图像效果。置换滤镜比较特殊的是设置完毕后，还需要选择一个图像文件作为位移图，滤镜根据位移图上的颜色值移动图像像素。\",\"displace\",\"drunk：画面随机晃动\",\"drunk\",\"swirl：漩涡打旋效果，可调整旋涡位置和大小，并可呈现漩涡的正反转动态效果。\",\"swirl\",\"wave：波浪滤镜是通过坐标变换来模拟水波效果，使图像呈现出水波的扭曲特效。\",\"wave\",\"zigzag：使图像产生同心圆状的波纹效果。\",\"zigzag\"]},{\"header\":\"画面遮盖\",\"slug\":\"画面遮盖\",\"contents\":[\"pixelation：像素化滤镜，可选择滤镜范围。\",\"pixelation\",\"hexagonize：用六角形状元素重构画面，可调节蜂窝元素的大小。\",\"hexagonize\",\"semiline：百叶窗栅格形滤镜，让画面像被一个关闭中的百叶窗遮盖。\",\"semiline\",\"blur-gaussian：模糊滤镜效果（高斯），对硬件配置要求高。\"]},{\"header\":\"增强滤镜\",\"slug\":\"增强滤镜\",\"contents\":[\"vignette：晕影/虚光照，用以增强镜头感，突出拍摄主体，营造画面的意境氛围。\",\"vignette\",\"rounded-rect：圆角矩形渲染\",\"rounded-rect\",\"crt-curvature：将画面放置于 CRT 电视中，可调整画面曲率和四周的光晕颜色。\",\"crt-curvature\",\"crt-scanlines：仿 CRT 扫描线效果。\",\"crt-scanlines\",\"repeat：将画面复制排列，例图是 3x3 复制画面。\",\"repeat\",\"fxaa：快速近似抗锯齿，是一种「比较廉价」的抗锯齿技术，多用于游戏直播/录制，适用于性能不高的电脑配置。\"]},{\"header\":\"N 卡滤镜\",\"slug\":\"n-卡滤镜\",\"contents\":[\"本部分的滤镜需要需 NVIDIA 2060 及以上显卡，并安装 NVIDIA Video Effects & AR SDK Redistributable。这些滤镜效果均可用 NVIDIA Broadcast 实现。\",\"画质提升（Upscaling）：提升画质分辨率，可以将老式摄像头提升到 4K 画质。\",\"降噪（Denoising Filter）：对画面进行降噪。\",\"自动帧（Auto-Framing）：通过 NVIDIA AR 的自动追踪人脸技术，自动裁剪和放大用户、并且在用户移动时保持帧居中。\",\"英伟达背景移除（Virtual Greenscreen）：无需绿幕也能帮你移除人像背景，移除效果略逊色于 NVIDIA Broadcast。样图是用的是漫画，如果是真人画面，移除效果会好很多。\",\"人像背景移除\"]}]},\"/apps/livestreaming/3_obs_plugins.html\":{\"title\":\"直播入门攻略三 | 插件篇：OBS 进阶插件\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"OBS 与其他直播/录制应用最大的区别在于 OBS 社区，它给 OBS 带来了强大的扩展性。下文中我会介绍除 StreamFX 外的 15 款流行插件。（本文未完成，待填充）\"]},{\"header\":\"插件安装与卸载\",\"slug\":\"插件安装与卸载\",\"contents\":[\"OBS 插件的安装模式有 Install（注册配置）和 Protable（便携）两种。便携模式的插件配置可以复制到其他电脑上使用。\",\"若要卸载 Windows 下的 OBS 便携模式插件，可以进入 %ProgramFiles%\\\\obs-studio\\\\data\\\\obs-plugins 和 %ProgramFiles%\\\\obs-studio\\\\obs-plugins\\\\64bit，搜索插件名，然后删除相关文件。\"]},{\"header\":\"多平台直播：multi-rtmp\",\"slug\":\"多平台直播-multi-rtmp\",\"contents\":[\"multi-rtmp 使得 OBS 支持多地址推流，以为着同时在多个平台上进行直播。\",\"开启多地址推流前，你需要点击控制按钮「开始直播」，然后再点「停止直播」。\"]},{\"header\":\"自动切换场景\",\"slug\":\"自动切换场景\",\"contents\":[\"Advanced Scene Switcher：使用「宏」来自动完成各种任务，按条件切换场景、来源。比如，电脑闲置 10 分钟后，让摄像头来源变为不可见。\"]},{\"header\":\"Move transition\",\"slug\":\"move-transition\",\"contents\":[\"Move transition：记录来源的位置变化，生成元素移动的动画效果。比如，视频演讲时，将摄像头位置从屏幕右下移动到中央。\"]},{\"header\":\"Transition Table\",\"slug\":\"transition-table\",\"contents\":[\"Transition Table：场景切换效果，设定不同场景间的切换规则。\"]},{\"header\":\"Source Dock\",\"slug\":\"source-dock\",\"contents\":[\"Source Dock：为单独场景或来源建立控制栏，使用小窗口预览场景。\"]},{\"header\":\"Source Copy\",\"slug\":\"source-copy\",\"contents\":[\"Source Copy：更方便地复制、保存场景设置。\"]},{\"header\":\"其他\",\"slug\":\"其他\",\"contents\":[\"Scene Collection Manager：自动备份场景，防止误操作。\",\"Audio Monitor：将来源声音输出给指定设备播放，方便单独调节音量，能让主播与观众听到不同的音频效果。\",\"Downstream Keyer：切换场景时，置顶指定场景。\",\"Multi Source Effect：滤镜效果\",\"Teleport：NDI 替代品，局域网设备推流到直播。\",\"spectralizer：音频频谱，用滤镜「图像掩码」的「混合图层」给频谱遮罩滤镜。\",\"NDI: 局域网视频无线传输技术 NDI 插件。\",\"scrab：屏幕截图。添加了一个可配置的热键快速选择一个屏幕区域，并添加它作为一个图像源到当前场景。有人反馈 OBS 28 后有 bug，暂未修复。\",\"Lower thirds in HTML/CSS：文字运动特效，适合展示 logo 和标题。\",\"Input Overlay：同步显示键盘、鼠标和游戏板上的输入。\"]},{\"header\":\"美化插件\",\"slug\":\"美化插件\",\"contents\":[\"第三方的直播美化插件提供了时钟、榜单、弹幕、游戏等互动来源，用于美化直播间，新手可参考使用。美化插件免费版一般足够用了，比如 咩播、智播。\"]},{\"header\":\"弃用插件\",\"slug\":\"弃用插件\",\"contents\":[\"以下插件已弃用，仅作记录：\",\"Virtual Cam Filter：能让来源单独输出虚拟摄像头，OBS 28 已内置此功能。\",\"obs-websocket：远程控制插件，OBS 28 已内置此功能。\",\"Animated captions：自定义弹幕功能，无漂浮弹幕，适用较少，仅用于 OBS 27。\",\"OBS Shaderfilter：文字图片特效滤镜。此插件已被从社区删除，下载使用 GitHub 备份，其功能已被 StreamFX 取代。\",\"Asynchronous Source Duplication：复制来源可以同时展示在多个场景，复制源会有延迟。其功能已被 StreamFX 的来源镜像取代。\"]},{\"header\":\"更多\",\"slug\":\"更多\",\"contents\":[\"如果你在上文中没有找到你需要的功能功能，可以访问 OBS 插件库进行搜索。\"]}]},\"/apps/livestreaming/4_live_effects.html\":{\"title\":\"直播入门攻略四 | 特效篇：美颜、变声、多开、虚拟主播\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"虽然 OBS 的功能已经非常强大，但通过第三方软件可以更简单地给我们带来美颜、变声、虚拟主播等特效。\"]},{\"header\":\"美颜\",\"slug\":\"美颜\",\"contents\":[\"推荐使用 YY 开播来实现直播美颜功能。\",\"打开 YY 开播，调用摄像头摄像，开启美颜功能。然后，在 OBS 中调用 YY 开播，如果有绿幕，可以添加「色度值」滤镜进行视频抠图。一旦配置好，下次启动 OBS 时，软件会自动调用 YY 开播开启美颜，无需重复配置。但是，「美颜 + 直播」对电脑配置的要求较高，如果直播画面出现明显卡顿，建议关闭 YY 开播。\",\"使用注意：\",\"剧烈运动时，不要开美颜直播，否则容易卡顿。\",\"不要开启 YY 直播中除美颜外的功能，如虚拟背景、虚拟形象等，否则直播中的画面背景无法透明化。\"]},{\"header\":\"变声\",\"slug\":\"变声\",\"contents\":[\"直播变声可以通过硬件和软件两种方式实现。软件变声器，如 MorphVOX Pro 和神舌，对使用者的语气要求较高。我在淘宝找人进行了声音精调，但效果仍然无法仿真。店家发的语气教程也没有太多参考价值，初学者很难入门。硬件变声器的效果更加糟糕，强烈不推荐。\"]},{\"header\":\"虚拟主播\",\"slug\":\"虚拟主播\",\"contents\":[\"如果不想录脸直播，可以配合软件使用虚拟形象直播。此类换脸软件会占用较高的 CPU，需要使用三年内的主流配置。\"]},{\"header\":\"Snap Camera\",\"slug\":\"snap-camera\",\"contents\":[\"Snap Camera 是 SnapChat 的免费增强现实应用。它可以帮助你在电脑直播/录屏时实现挡脸头套、美化滤镜等特效。如果你熟悉 3D 建模，可以使用 Lens Studio 定制属于你自己的变脸特效。但需要注意的是，当你喝水、低头或脸部被遮挡时，脸部特效会失效。\",\"Snap Camera 效果图\",\"如果你无法使用 Snap Camera，可以尝试 FaceRig 和 PrprLive。\"]},{\"header\":\"FaceRig\",\"slug\":\"facerig\",\"contents\":[\"FaceRig（Steam 已停售）可以通过对五官的动作捕捉，让卡通脸的表情进行同步变化，但不能对头部以下的部分进行捕捉和同步。使用时，需要打开 FaceRig 中的「切换广播」，否则 OBS 窗口会显示为黑屏。\",\"FaceRig 演示图\",\"注意：百度搜索 FaceRig 的首个结果是虚假官网，价格高且无保障，不要在上面进行购买。\"]},{\"header\":\"PrprLive\",\"slug\":\"prprlive\",\"contents\":[\"PrprLive 是国内的变脸软件，基础版免费，同样在 Steam 销售，付费前先试试基础版。\"]},{\"header\":\"动态素材\",\"slug\":\"动态素材\",\"contents\":[\"为了丰富直播场景，可以使用带绿幕的视频来添加动态特效，或者借助类虚拟主播技术来实现交互。例如 Bongo Cat Mver，它能实时同步键盘与鼠标状态，增加直播趣味性。如果你使用的是 Bongo Cat 全键盘同步模型，建议打乱映射规则，以防止隐私泄露。\",\"直播间的猫咪\"]},{\"header\":\"摄像头多开\",\"slug\":\"摄像头多开\",\"contents\":[\"摄像头默认只能被一个应用调用。借助 SplitCam，你能在摄像头画面上叠加元素，使用镜像、高亮滤镜微调画面，还能让摄像头画面同步给多个应用。\",\"例如，摄像头可以同时用于 OBS 直播和 Capture 录屏，在不同用途上可以叠加不同滤镜和特效，呈现出不同的画面。\",\"使用流程：\",\"打开 SplitCam，选择默认摄像头。\",\"Snap Camera、Capture 等第三方调用摄像头时，选择「SplitCam Video Driver」。\"]},{\"header\":\"其他应用\",\"slug\":\"其他应用\",\"contents\":[]},{\"header\":\"NVIDIA BROADCAST\",\"slug\":\"nvidia-broadcast\",\"contents\":[\"如果你使用的是 NVIDIA 显卡，强烈推荐安装 NVIDIA Broadcast。它利用 AI 的强大功能将标准网络摄像头和麦克风升级为高端智能设备，通过麦克风去噪、房间回声消除、虚拟背景、网络摄像头人像跟踪和视频降噪等 AI 功能，提高直播的视频和音频质量。通过 NVIDIA RTX GPU 上搭载的名为 Tensor Core 的专用 AI 处理器，AI 网络能够实时运行高质量的效果。\"]},{\"header\":\"小葫芦弹幕助手\",\"slug\":\"小葫芦弹幕助手\",\"contents\":[\"小葫芦弹幕助手可实时显示网友的互动和打赏，尤其适合游戏直播。但是，由于弹幕答谢、自动定时弹幕、手动弹幕等功能已暂停，不建议新手充值会员。\",\"如果不需要在直播界面中显示弹幕，不要安装小葫芦弹幕插件。安装后，会影响 OBS 窗口捕获功能，无法抓取基于 Electron 的应用界面，从而导致窗口捕捉黑屏。解决方法是删除 C:\\\\Program Files\\\\obs-studio\\\\obs-plugins\\\\64bit 目录内的 CalabashDanmuPlugin.dll、CalabashWinCapture.dll、ObssDanmuInfo.dll，重启 OBS 即可恢复，但下次使用弹幕助手时，这三个文件会自动安装，黑屏问题复现，只能重新删除指定文件。\",\"小葫芦直播助手集成了 OBS 和弹幕助手的功能，但为了直播的扩展性，仍然建议从 OBS 入门。\"]}]},\"/apps/livestreaming/5_live_platforms.html\":{\"title\":\"直播入门攻略五 | 平台篇：主流直播平台介绍\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"主流直播平台有淘宝、京东、抖音、快手、视频号、哔哩哔哩、小红书、微博直播、斗鱼、虎牙和 YouTube。接下来，我将逐一介绍如何使用 PC 端的 OBS 在这些平台上进行直播。\"]},{\"header\":\"淘宝直播\",\"slug\":\"淘宝直播\",\"contents\":[\"下载淘宝直播客户端，打开后点击「我要开播」，进入直播间界面。\",\"淘宝直播设置\",\"在左侧点击「添加元素」>「摄像头」，选择「OBS-Camera」，即可同步 OBS 直播画面。淘宝直播客户端也是基于 OBS，但不支持推流直播，只能通过虚拟摄像头同步画面。\",\"除了客户端，还可以通过直播中控台来设置淘宝直播间。\"]},{\"header\":\"抖音直播\",\"slug\":\"抖音直播\",\"contents\":[\"下载直播伴侣电脑端，它可以适配西瓜视频、抖音、抖音火山版的直播。\",\"在左侧点击「添加元素」>「采集」，选择「OBS-Camera」(摄像头较多时，可下滑选择)，设置采集自定义音频设备为「OBS-Audio」，声音改为单声道。\",\"抖音直播设置\",\"以上为抖音新手的电脑直播步骤，如果你的抖音粉丝在一万以上，可以使用 OBS 模式推流。\"]},{\"header\":\"快手直播\",\"slug\":\"快手直播\",\"contents\":[\"快手直播无需 PC 客户端，可在快手云直播页面配置直播间，支持 OBS 模式推流直播。若直播断流超过 2 分钟或直播超过 7 天，则会自动下播。\"]},{\"header\":\"视频号直播\",\"slug\":\"视频号直播\",\"contents\":[\"要使用电脑直播视频号，需要先完成视频号认证。\",\"视频号认证最重要的一环是有效关注数 1000 人以上，可疑和外挂用户都不包含在有效人数内。达到 1000 有效粉丝后，就可以在视频号助手网页端发起直播推流了。\"]},{\"header\":\"B 站直播\",\"slug\":\"b-站直播\",\"contents\":[\"哔哩哔哩可以在直播姬客户端或B 站直播间网页端上进行在线直播。直播封面必须包含图像，不支持纯文本封面。\",\"如果你主做 B 站直播，可以试试哔哩哔哩直播机器人神奇弹幕，它集成了弹幕姬、答谢姬、点歌姬、回复姬和工作流 (workflow)，支持弹幕聊天、观众互动、自动点歌、数据统计、私信处理等功能。这个应用看起来很有趣，我还没有使用过。\"]},{\"header\":\"知乎直播\",\"slug\":\"知乎直播\",\"contents\":[\"在知乎推流直播页面开启直播后，就可以使用知乎的电脑直播。\",\"知乎直播注意：\",\"推流直播不能与第三方连接谈话；手机直播不支持绿幕抠图。\",\"当你在电脑直播时，用手机进入知乎客户端，会提示「是否继续直播」，选择「继续」可进入直播界面与观众互动，选「忽略」则停止直播。\",\"如果直播时间超过一个月，小葫芦直播码会失效，无法继续使用小葫芦直播助手和弹幕助手。\"]},{\"header\":\"小红书直播\",\"slug\":\"小红书直播\",\"contents\":[\"小红书使用直播助手来设置推流，可以查看官方文档 了解开播步骤。\",\"当我登录直播助手时，提示「暂无直播权限，请联系运营及客服开通」，但手机却可以直播，这说明提示中的直播权限专指电脑端直播。因此，我在应用中提交了问题，但一直未收到客服回复。\"]},{\"header\":\"微博直播\",\"slug\":\"微博直播\",\"contents\":[\"微博直播需先完成实名认证，然后在微博管理中心创建直播。详细的开播步骤，可以参考官方的微博 PC 开播教程。\"]},{\"header\":\"Youtube 直播\",\"slug\":\"youtube-直播\",\"contents\":[\"如果您在过去 90 天内没有进行 YouTube 直播，平台会要求验证您的频道。首次启用直播功能可能需要最长等待 24 小时。\",\"打开 YouTube 直播控制室。\",\"点击直播标签页或为新直播安排时间。\",\"从直播控制室复制直播网址和直播码，然后将其粘贴到编码器中。\"]}]},\"/apps/livestreaming/6_live_positioning.html\":{\"title\":\"直播入门攻略六 | 技巧篇：直播定位与策划\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"直播过几次了，但是你的直播间总是没有人看，偶尔来了人也不知道说什么。作为直播新手，遇到这种情况是很正常的。建议按照本文的章节，逐一比对，对你的直播进行定位和策划。\"]},{\"header\":\"直播定位\",\"slug\":\"直播定位\",\"contents\":[\"开设直播前，从你的兴趣、能力和直播目的出发，确定直播定位。\",\"我是谁：我的职业/身份是什么。\",\"面向谁：目标用户画像：性别、年龄、兴趣、收入、消费能力、性格特征等。\",\"我能提供什么：核心竞争力：陪伴？专业知识？丰富经验？渠道资源？\",\"解决目标用户什么问题：排遣寂寞？选购答疑？\",\"定位完成后，把自己放在目标观众角度进行换位思考，调整直播定位。\",\"你喜欢哪类型的直播？喜欢谁的直播？为什么？每个主播至少列出 3 个吸引你的点。\",\"你不喜欢哪种直播？为什么？\",\"如果是你做直播，你希望是什么样的？你的底线是什么？有什么顾虑？顾虑和目标比起来，孰轻孰重？\",\"如果前期定位依然不清，可以观察头部主播、找到对标主播，模仿对标主播的直播间。\"]},{\"header\":\"开播时间\",\"slug\":\"开播时间\",\"contents\":[\"保持长时间和持续开播，稳定开播频次与时间段。\",\"例如，每周固定开播两到三场，每次直播不低于 30 分钟。直播频率和直播时长是做好直播的基础，如果开播时长和开播频率不稳定，系统就无法准确地进行推荐。\",\"新人直播有流量扶持，即使初期没有观众也要坚持开播。尽量选择白天等冷门时间段，竞争相对较小。\",\"娱乐直播保持 2.5 小时以上，电商直播保持 3.5 小时以上才会有官方稳定推流。\"]},{\"header\":\"直播策划\",\"slug\":\"直播策划\",\"contents\":[]},{\"header\":\"选题\",\"slug\":\"选题\",\"contents\":[\"直播选题决定直播前期自然流量的多少。\",\"新手直播流量不高时，主题尽量搭上最新热点，抓住热点，立即开始，利用现有内容，抢占黄金流量时间。但你的直播内容一定要与热点相关，否则牛头不对马嘴，自然流量也不会留下来。\",\"选定主题后，准备 15~20 分钟的脚本，在直播中循环使用。即使直播间没人，也不要停止说话，否则进入的自然流量会变少。\"]},{\"header\":\"标题\",\"slug\":\"标题\",\"contents\":[\"直播标题控制在 8 个字，可以通过关键词搜索站内热门，从中参考直播标题。直播标题没有搜索权重，所以不需要堆砌关键词，只要能清楚地表达直播间主题就可以了。\",\"标题要素：\",\"突出主播特征，如：人物特质、性格。\",\"突出内容，如：才艺展示、音乐主题、户外和其他类别。\",\"突出玩法吸引，比如：各种秒杀活动、免费赠送等。\",\"突出实力，清楚地表现出你的能力，当然做解说也可以。\"]},{\"header\":\"预告\",\"slug\":\"预告\",\"contents\":[\"开播前，一定要先发直播预告或短视频，以便让更多观众进入直播间。预告发布最好在开播前两小时完成。\",\"在开播页面，请提前设置好封面标题并勾选定位。\",\"有特色的封面可以提升观众对直播间的兴趣，建议使用本人或与内容相关的图片作为封面。如果不知道如何设置好封面标题，可以参考其他观众较多的直播间。\",\"打开直播定位，可以让更多的同城观众看到你的直播间，对直播间的流量有非常大的帮助。\"]},{\"header\":\"环境\",\"slug\":\"环境\",\"contents\":[\"灯光和环境声音决定了你的直播效果。\",\"直播间灯光要亮，露脸主播可以将灯光打在脸部的右前方 45 度，这能提升你的颜值。\",\"直播前，尽量关闭门窗和不必要的电器，降低直播间环境噪音，以避免干扰直播效果。\"]},{\"header\":\"直播互动\",\"slug\":\"直播互动\",\"contents\":[\"开场前 10~15 分钟是暖场阶段，你可以先和观众互动，等人多了再正式开始主题。\",\"有新观众进入直播间时，要主动欢迎他们。有意识地引导用户关注、互动，呼吁点亮粉丝灯牌，及时感谢礼物。\",\"对于用户评论，要先读出弹幕，然后做出应答。粉丝提出意见对我们是有帮助的，一定要虚心接受并表示感谢。\",\"如果有团队配合，可以安排管理员维持直播间的秩序并活跃气氛，参与直播平台的官方活动，适当购买直播道具（宠粉红包福袋）。\",\"下播后，进行数据复盘，调整直播间的标题、封面和背景。\"]},{\"header\":\"开播锻炼\",\"slug\":\"开播锻炼\",\"contents\":[\"开播前把脸部肌肉活动开。嘴张到最大，舌顶上颚 60 秒；嘴张到最大，尽量伸舌 30 秒。说话时，让嘴唇用力。\"]},{\"header\":\"总结\",\"slug\":\"总结\",\"contents\":[\"经过两年的直播，我深知直播的硬件、软件和技巧只是锦上添花。若要体验直播，不想深入研究，只需拿出手机开播即可。开始直播时，可能会有很多疑问和顾虑，效果也不一定很好。但只有勇敢尝试新事物，不断开拓，我们的人生才会有更多可能性。\"]}]},\"/posts/\":{\"title\":\"Posts\",\"contents\":[]},\"/apps/\":{\"title\":\"Apps\",\"contents\":[]},\"/deploy/\":{\"title\":\"Deploy\",\"contents\":[]},\"/family/\":{\"title\":\"Family\",\"contents\":[]},\"/services/\":{\"title\":\"Services\",\"contents\":[]},\"/web/\":{\"title\":\"Web\",\"contents\":[]},\"/windows/\":{\"title\":\"Windows\",\"contents\":[]},\"/apps/livestreaming/\":{\"title\":\"Livestreaming\",\"contents\":[]}}}");self.onmessage=({data:o})=>{self.postMessage($(o.query,m[o.routeLocale]))};
//# sourceMappingURL=original.js.map
